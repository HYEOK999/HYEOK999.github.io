<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>HYEOK999&#39;s Blog</title>
    <link>http://yoursite.com/</link>
    
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Sat, 30 Nov 2019 17:13:57 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>linux-study-04</title>
      <link>http://yoursite.com/2019/11/28/linux-study-04/</link>
      <guid>http://yoursite.com/2019/11/28/linux-study-04/</guid>
      <pubDate>Thu, 28 Nov 2019 14:13:35 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9923B0495D66434618&quot; alt=&quot;리눅스&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot; &quot;&gt;&lt;/
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p><img src="https://t1.daumcdn.net/cfile/tistory/9923B0495D66434618" alt="리눅스"></p><hr><h2 id><a href="#" class="headerlink" title=" "></a> </h2><h3 id="Group"><a href="#Group" class="headerlink" title="Group"></a>Group</h3><p>폴더나 ,파일에게 특정 그룹에게만 사용권한을 줄수있다.</p><ol><li><code>groupadd develops</code>  : 그룹을 추가한다. (일반 사용자는 추가를 못한다.)</li></ol><p><code>su - root</code> 한 후 <code>groupadd develops</code> 혹은 <code>sudo groupadd develops</code> </p><ol start="2"><li><p><code>sudo usermod -a -G [그룹명] [사용자명]</code> :   그룹에 사용자를 추가한다.</p></li><li><p><code>sudo chown [주인명]:[그룹명] [파일명]</code> : 디렉토리 혹은 파일 권한을 [그룹명]으로 변경한다.</p></li><li><p><code>sudo chmod g+w [파일명]</code> : 그룹에 write권한을 준다.</p></li></ol><br><h3 id="Internet-Network-Server"><a href="#Internet-Network-Server" class="headerlink" title="Internet | Network | Server"></a>Internet | Network | Server</h3><p>인터넷은 컴퓨터( Client )와 컴퓨터( Server )간의 request , response의 연속.</p><p><code>Domain-name</code> : 일종의 ip-address에 대한 별명.</p><p>우리가 컴퓨터에게 예를들어, 구글의 IP주소를 알려주지 않아도 구글의 ip를 알아서 찾아가는 이유는 우리가 인터넷창에google.com이라고 치는 순간 DNS Server라는 이 세상의 모든 도메인을 저장하고있는 서버에 접속하여 구글에 대한 IP를 받아서 접속하는 형태이다.</p><br><p><strong>ip 확인 명령어</strong></p><blockquote><p><code>curl ipinfo.io/ip</code> : 외부에 접속할 때 사용하는 아이피 (즉, Public Address 를 알아냄.)</p><p><code>ip addr</code> : 내 컴퓨터에 접속한 실제 아이피 ( 내 컴퓨터에 실제로 할당된 아이피.)</p></blockquote><br><p><strong>apache 웹 서버</strong></p><p>웹서버의 종류 : apache, nginx등등</p><p>아파치를 설치하고 실행하면 여러 접속을 분산으로 받기 위해서 여러개가 실행이된다.</p><p><code>elinks</code> : 쉘환경에서 인터넷을 할 수 있도록 하는 프로그램</p><p><code>localhost</code> : 자신의 로컬주소 (127.0.0.1) 에 대한 domain-name</p><p>예) Web-Broser에서 10.0.2.15/index.html 로 요청하면 Web-Serverd에서 index.html을 찾게된다. </p><p> 웹페이지를 찾는 최상위 디렉토리 : <code>document root</code></p><p>/etc/apache2/sites-enabled/000-default.conf 에 document root가 적혀있다.</p><p>log 파일 위치 : /var/log/apache2/</p><p><strong>서버에 관한 문제 해결시 log가 어디있는지 || root폴더 위치를 먼저 파악하는것이 좋다.</strong></p><br><p><strong>SSH 원격제어</strong></p><blockquote><p>SSH란 Secure Shell Protocol, 즉 네트워크 프로토콜 중 하나로 컴퓨터와 컴퓨터가 인터넷과 같은 Public Network를 통해 서로 통신을 할 때 보안적으로 안전하게 통신을 하기 위해 사용하는 프로토콜.</p></blockquote><p>사용조건  : 서버와 클라이언트 구조</p><ol><li><p>서버에 SSH SERVER를 설치</p></li><li><p>클라이언트에 SSH CLIENT를 설치</p></li><li><p>클라이언트 -&gt; 서버 접속 </p><p><code>ssh 서버명@아이피주소</code> </p></li><li><p>접속이 완료되면, 클라이언트가 내리는 명령은 서버컴퓨터에서 처리되고 그 결과를 클라이언트 컴퓨터에 표시한다.</p></li></ol><br><p><strong>port</strong></p><p>웹서버는 80번 포트로 약속됨.</p><p>SSH는 22번 포트로 약속됨.</p><p>0~1024 번까지의 포트번호는  ‘’표준’’으로 할당이 되어있다.</p><p>기본 포트는 80으로 간주한다. ( 생략시 80이라는 뜻 )</p><p><code>ssh -p [포트번호] 서버명@아이피</code> : <code>-p [포트번호]</code> 생략시 80포트.</p><br><p><strong>port forwarding</strong></p><blockquote><p><strong>내부 IP는 특별한 작업을 거치지 않는 한 외부에서 접속할 수 없다.</strong></p><p>오로지 외부 IP를 통해서만 접속이 가능하다.</p><p>따라서 라우터 포트 번호에 사설 ip와 포트를 포워딩 시킬 수 있다.</p></blockquote><p>예를들면 다음과 같다.</p><p>공유기의 공인IP가 211.123.123.123</p><p>내 공유기에 연결된 호스트가 3개라고 가정</p><p>A 호스트 (192.168.1.100)<br>B 호스트 (192.168.1.101)<br>C호스트 (192.168.1.102)<br>라고 가정하자.</p><p>C호스트가 A호스트로 접속할 떄 192.168.1.100:22라고 입력을 한다면 A라는 호스트에 22포트로 접속을 한다는것을 알 수 있다.</p><p>하지만, 외부 IP 211.123.123.123이 211.123.123.123:22를 입력해도 A호스트의 ssh로 접속할 수 없다.</p><p>이유는 저 IP주소가 공유기를 지칭하는지, A,B,C를 지칭하는지 알 수 없기 때문이다.</p><p>따라서, 이럴 때 포트 포워딩을 이용한다.</p><p>외부에서 A호스트의 ssh로 접속하고 싶다면 공유기에서 구분하면 된다.</p><p><strong>“외부에서 특정 포트번호로 들어오게 된다면 A호스트의 22번 포트를 지칭하는것이다”</strong> 라는 규칙을 설정하면 된다.</p><p>공유기의 공인IP 뒤에 서비스 포트 번호 처럼 특정 포트번호를 입력하면 지정한 내부 호스트의 특정포트로 보내버린다.</p><p>공유기의 공인IP가 211.123.123.123이므로 211.123.123.123:1000 또는 1000~1010까지의 숫자를 입력하면 C호스트가 192.168.1.100:22라는 주소를 입력한 것과 동일하게 접속이 가능하게 된다.</p><p>이처럼 외부에서 접속 시 어떤 호스트의 어떤 서비스포트에 연결을 해주는지 설정을 해주는 것을 포트포워딩이라 한다.</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/28/linux-study-04/#disqus_thread</comments>
    </item>
    
    <item>
      <title>daily_algorithm44</title>
      <link>http://yoursite.com/2019/11/27/daily44/</link>
      <guid>http://yoursite.com/2019/11/27/daily44/</guid>
      <pubDate>Wed, 27 Nov 2019 13:27:53 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;img src=&quot;https://images.velog.io/post-images/leejh3224/619516b0-e892-11e8-98f5-997ef3c38110/what-is-an-algorithm-featured.png&quot; alt&gt;&lt;/p&gt;

        
      
      </description>
      
      
      <content:encoded><![CDATA[<p><img src="https://images.velog.io/post-images/leejh3224/619516b0-e892-11e8-98f5-997ef3c38110/what-is-an-algorithm-featured.png" alt></p><hr><p>문제 출처 : 프로그래머스</p><h3 id="정수-제곱근-판별"><a href="#정수-제곱근-판별" class="headerlink" title="정수 제곱근 판별"></a>정수 제곱근 판별</h3><h6 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h6><p>임의의 양의 정수 n에 대해, n이 어떤 양의 정수 x의 제곱인지 아닌지 판단하려 합니다.<br>n이 양의 정수 x의 제곱이라면 x+1의 제곱을 리턴하고, n이 양의 정수 x의 제곱이 아니라면 -1을 리턴하는 함수를 완성하세요.</p><h5 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h5><ul><li>n은 1이상, 50000000000000 이하인 양의 정수입니다.</li></ul><h5 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h5><table><thead><tr><th>n</th><th align="center">return</th></tr></thead><tbody><tr><td>121</td><td align="center">144</td></tr><tr><td>3</td><td align="center">-1</td></tr></tbody></table><h6 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h6><p><strong>입출력 예#1</strong><br>121은 양의 정수 11의 제곱이므로, (11+1)를 제곱한 144를 리턴합니다.</p><p><strong>입출력 예#2</strong><br>3은 양의 정수의 제곱이 아니므로, -1을 리턴합니다.</p><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solution</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> answer = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (n === <span class="literal">undefined</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt;= n; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (i ** <span class="number">2</span> === n) &#123;</span><br><span class="line">      answer = (i + <span class="number">1</span>) ** <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      answer = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/27/daily44/#disqus_thread</comments>
    </item>
    
    <item>
      <title>daily_algorithm43</title>
      <link>http://yoursite.com/2019/11/26/daily43/</link>
      <guid>http://yoursite.com/2019/11/26/daily43/</guid>
      <pubDate>Tue, 26 Nov 2019 14:22:49 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;img src=&quot;https://images.velog.io/post-images/leejh3224/619516b0-e892-11e8-98f5-997ef3c38110/what-is-an-algorithm-featured.png&quot; alt&gt;&lt;/p&gt;

        
      
      </description>
      
      
      <content:encoded><![CDATA[<p><img src="https://images.velog.io/post-images/leejh3224/619516b0-e892-11e8-98f5-997ef3c38110/what-is-an-algorithm-featured.png" alt></p><hr><p>문제 출처 : 프로그래머스</p><h3 id="위장"><a href="#위장" class="headerlink" title="위장"></a>위장</h3><h6 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h6><p>스파이들은 매일 다른 옷을 조합하여 입어 자신을 위장합니다.</p><p>예를 들어 스파이가 가진 옷이 아래와 같고 오늘 스파이가 동그란 안경, 긴 코트, 파란색 티셔츠를 입었다면 다음날은 청바지를 추가로 입거나 동그란 안경 대신 검정 선글라스를 착용하거나 해야 합니다.</p><table><thead><tr><th>종류</th><th>이름</th></tr></thead><tbody><tr><td>얼굴</td><td>동그란 안경, 검정 선글라스</td></tr><tr><td>상의</td><td>파란색 티셔츠</td></tr><tr><td>하의</td><td>청바지</td></tr><tr><td>겉옷</td><td>긴 코트</td></tr></tbody></table><p>스파이가 가진 의상들이 담긴 2차원 배열 clothes가 주어질 때 서로 다른 옷의 조합의 수를 return 하도록 solution 함수를 작성해주세요.</p><h5 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h5><ul><li>clothes의 각 행은 [의상의 이름, 의상의 종류]로 이루어져 있습니다.</li><li>스파이가 가진 의상의 수는 1개 이상 30개 이하입니다.</li><li>같은 이름을 가진 의상은 존재하지 않습니다.</li><li>clothes의 모든 원소는 문자열로 이루어져 있습니다.</li><li>모든 문자열의 길이는 1 이상 20 이하인 자연수이고 알파벳 소문자 또는 ‘_’ 로만 이루어져 있습니다.</li><li>스파이는 하루에 최소 한 개의 의상은 입습니다.</li></ul><h5 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h5><table><thead><tr><th>clothes</th><th>return</th></tr></thead><tbody><tr><td>[[yellow_hat, headgear], [blue_sunglasses, eyewear], [green_turban, headgear]]</td><td>5</td></tr><tr><td>[[crow_mask, face], [blue_sunglasses, face], [smoky_makeup, face]]</td><td>3</td></tr></tbody></table><h5 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h5><p>예제 #1<br>headgear에 해당하는 의상이 yellowhat, greenturban이고 eyewear에 해당하는 의상이 blue_sunglasses이므로 아래와 같이 5개의 조합이 가능합니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. yellow_hat</span><br><span class="line">2. blue_sunglasses</span><br><span class="line">3. green_turban</span><br><span class="line">4. yellow_hat + blue_sunglasses</span><br><span class="line">5. green_turban + blue_sunglasses</span><br></pre></td></tr></table></figure><p>예제 #2<br>face에 해당하는 의상이 crowmask, bluesunglasses, smoky_makeup이므로 아래와 같이 3개의 조합이 가능합니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. crow_mask</span><br><span class="line">2. blue_sunglasses</span><br><span class="line">3. smoky_makeup</span><br></pre></td></tr></table></figure><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solution</span>(<span class="params">clothes</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> answer = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">const</span> clothesFind = clothes.map(<span class="function">(<span class="params">a</span>) =&gt;</span> a[<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">const</span> obj = &#123;&#125;;</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; clothesFind.length; i++) &#123;</span><br><span class="line">    obj[clothesFind[i]] = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; clothesFind.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (clothesFind[i] <span class="keyword">in</span> obj) obj[clothesFind[i]]++;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> result = <span class="built_in">Object</span>.values(obj);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; result.length; i++) &#123;</span><br><span class="line">    answer *= (result[i] + <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  answer--;</span><br><span class="line">  <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/26/daily43/#disqus_thread</comments>
    </item>
    
    <item>
      <title>GitHub Commit 독려 애플리케이션</title>
      <link>http://yoursite.com/2019/11/25/CarrotAndStick/</link>
      <guid>http://yoursite.com/2019/11/25/CarrotAndStick/</guid>
      <pubDate>Mon, 25 Nov 2019 04:15:50 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/31315644/69508271-a1025c00-0f78-11ea-9d61-e21af8414095.jpeg&quot; alt=&quot;CARROT &amp;amp; STICK&quot;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/31315644/69508271-a1025c00-0f78-11ea-9d61-e21af8414095.jpeg" alt="CARROT &amp; STICK"></p><hr><h1 id="Carrot-and-Stick"><a href="#Carrot-and-Stick" class="headerlink" title="Carrot and Stick"></a>Carrot and Stick</h1><h3 id="GitHub-Commit-독려-애플리케이션"><a href="#GitHub-Commit-독려-애플리케이션" class="headerlink" title="GitHub Commit 독려 애플리케이션"></a><strong>GitHub Commit</strong> <strong>독려 애플리케이션</strong></h3><br><h3 id="1-팀-소개"><a href="#1-팀-소개" class="headerlink" title="1. 팀 소개"></a>1. 팀 소개</h3><ul><li>팀명 : 채찍과 당근<ul><li>팀장 : 김준혁</li><li>팀원 : 정다희, 박홍빈 </li></ul></li></ul><br><h3 id="2-팀-주제"><a href="#2-팀-주제" class="headerlink" title="2. 팀 주제"></a>2. 팀 주제</h3><p>Git Commit 수에 따른 캐릭터 표정 변화 어플리케이션 입니다. 사용자의 학습 욕구를 도모하기 위해 만들었습니다.</p><br><h3 id="3-주제-선정-이유"><a href="#3-주제-선정-이유" class="headerlink" title="3. 주제 선정 이유"></a>3. 주제 선정 이유</h3><p><strong>기능적인 측면 :</strong> </p><p> GITHUB 관리를 위해 자신의 목표 커밋 수에 따라 스스로를 채찍질 하고, 스스로에게 칭찬(당근)을 할 수 있는 애플리케이션이 있다면 좋지 않을까?</p><p><strong>기술적인 측면 :</strong> </p><p> 이 애플리케이션 구현을 위해서 Git API와 여러 라이브러리를 직접 사용해보고, 프론트엔드 와 백엔드를 직⚬간접적으로 구축하여 어플리케이션의 흐름을 경험 할 수 있다. </p><br><h3 id="4-프로젝트-요구-사항"><a href="#4-프로젝트-요구-사항" class="headerlink" title="4. 프로젝트 요구 사항"></a>4. 프로젝트 요구 사항</h3><ul><li>W3C에서 제공한 MarkUp Validation Service 에서 이상이 없을 것.</li><li>최대한 시멘틱 하게 작성할 것.</li><li>Express + Mongo DB로 백엔드 구축</li><li>여러 라이브러리 경험</li><li>GitHub API 로드 및 가공</li><li>캐릭터 및 로고 렌더링 ( SVG 활용 )</li><li>todo list 기능을 이용한 닉네임별로 관리되는 Git Daily Planner 개발</li><li>Git flow를 사용하여 협업을 할 것. </li><li>Git 컨벤션을 최대한 지킬 것</li></ul><br><h3 id="5-구현-기술"><a href="#5-구현-기술" class="headerlink" title="5. 구현 기술"></a>5. 구현 기술</h3><img src="https://user-images.githubusercontent.com/31315644/69511508-b9c43f00-0f83-11ea-89bf-1889e46b1555.png" alt="Stack" style="zoom:50%;"><br><h3 id="6-MVP-Flow-Chart"><a href="#6-MVP-Flow-Chart" class="headerlink" title="6.  MVP Flow Chart"></a>6.  MVP Flow Chart</h3><p><img src="https://user-images.githubusercontent.com/31315644/69511730-ba110a00-0f84-11ea-8851-1c021e760493.png" alt="Flowchart"></p><br><h3 id="7-Mark-Up"><a href="#7-Mark-Up" class="headerlink" title="7.  Mark Up"></a>7.  Mark Up</h3><p><img src="https://user-images.githubusercontent.com/31315644/69511505-b9c43f00-0f83-11ea-86ce-cb4d61ede45b.png" alt="DomTree"></p><br><h3 id="8-구현-일정"><a href="#8-구현-일정" class="headerlink" title="8. 구현 일정"></a>8. 구현 일정</h3><p><img src="https://user-images.githubusercontent.com/31315644/69507650-9e9f0280-0f76-11ea-8956-2a279a15e1db.png" alt="일정"></p><br><h3 id="9-프로젝트-구현-영상"><a href="#9-프로젝트-구현-영상" class="headerlink" title="9. 프로젝트 구현 영상"></a>9. 프로젝트 구현 영상</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/1WLIm9ZVbT4" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><br><br><h3 id="10-한계점-및-보완점"><a href="#10-한계점-및-보완점" class="headerlink" title="10. 한계점 및 보완점"></a>10. 한계점 및 보완점</h3><img src="https://user-images.githubusercontent.com/31315644/69507654-a199f300-0f76-11ea-9ae4-69a3da28a08c.png" style="zoom:48%;"> <h4 id="Git-Api-에서-DDOS-공격을-방지하고자-IP-단위로-접근-수를-제한하고-있다"><a href="#Git-Api-에서-DDOS-공격을-방지하고자-IP-단위로-접근-수를-제한하고-있다" class="headerlink" title="( Git Api 에서 DDOS 공격을 방지하고자 IP 단위로 접근 수를 제한하고 있다. )"></a>( Git Api 에서 DDOS 공격을 방지하고자 IP 단위로 접근 수를 제한하고 있다. )</h4><p><strong>한계점 1 :</strong></p><p>⇢ 인증되지 않은 유저로 Git Api의 접근</p><p><strong>보완점 :</strong></p><p>⇢ 비밀번호 필요 ( limit 초기화 ) </p><p>⇢ Git 개발자 도구에서 사용자가 인증하도록 요구 ( limit 6000 번 할당 )</p><p><strong>⇢ 사용자가 실시간으로 새로고침 버튼을 누름 으로서 최대한 limit을 사용하지 않도록 함.</strong></p><br><p><strong>한계점 2 :</strong> </p><p>⇢ Git Api의 데이터를 실시간으로 감시할 수 없음. </p><p><strong>보완점 :</strong> </p><p>⇢ 일정 시간 이상 시 직속적으로 Api를 Get한다. ( setInterval 함수 사용 )</p><p>⇢ 프레임워크를 이용한다. ( Vue.js 의 watch 기능 등등 )</p><p><strong>⇢ 사용자가 실시간으로 새로고침 버튼을 누르게 요구.</strong></p><br><hr><p><img src="https://user-images.githubusercontent.com/31315644/69511504-b92ba880-0f83-11ea-9efe-2d940ec23a4d.png" alt="Contribution"></p><hr><img src="https://user-images.githubusercontent.com/31315644/69507667-a5c61080-0f76-11ea-8db0-a91485c8417f.png" style="zoom:50%;"><h3 id="View-Project-Source"><a href="#View-Project-Source" class="headerlink" title="View Project Source"></a><a href="https://github.com/HYEOK999/CarrotAndStick" target="_blank" rel="noopener">View Project Source</a></h3><p>by GitHub</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/25/CarrotAndStick/#disqus_thread</comments>
    </item>
    
    <item>
      <title>iteration</title>
      <link>http://yoursite.com/2019/11/23/iteration/</link>
      <guid>http://yoursite.com/2019/11/23/iteration/</guid>
      <pubDate>Sat, 23 Nov 2019 12:00:17 GMT</pubDate>
      <description>
      
        
        
          &lt;img width=&quot;800&quot; alt=&quot;ITERATION&quot; src=&quot;https://user-images.githubusercontent.com/31315644/69250378-e5959c80-0bf2-11ea-97bb-40c5c51490cc.png&quot;&gt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<img width="800" alt="ITERATION" src="https://user-images.githubusercontent.com/31315644/69250378-e5959c80-0bf2-11ea-97bb-40c5c51490cc.png"><h2 id="JavaScript-이터레이션-프로토콜"><a href="#JavaScript-이터레이션-프로토콜" class="headerlink" title="JavaScript 이터레이션 프로토콜"></a>JavaScript 이터레이션 프로토콜</h2><ul><li><p>이터레이션 프로토콜</p><ul><li><p>이터러블</p></li><li><p>이터레이터</p></li><li><p>빌트인 이터러블</p></li></ul></li><li><p>이터레이션 프로토콜의 필요성</p><ul><li>for…of 문</li></ul></li><li><p>커스텀 이터러블</p><ul><li>커스텀 이터러블 구현</li><li>이터러블을 생성하는 함수</li><li>무한 이터러블과 Lazy evaluation(지연 평가)</li></ul></li></ul><br><hr><h2 id="이터레이션-프로토콜"><a href="#이터레이션-프로토콜" class="headerlink" title="이터레이션 프로토콜"></a>이터레이션 프로토콜</h2><br><p>ES6부터 도입된 이터레이션 프로토콜은 데이터 컬렉션을 순회하기 위한 프로토콜.</p><blockquote><p>이터레이션 프로토콜을 준수한 객체는 for…of로 순회가 가능하며 spread문법의 피연산자가 될 수 있다.</p></blockquote><p>이터레이션 프로토콜에는 2가지가 있다.</p><ol><li>이터러블 프로토콜</li><li>이터레이터 프로토콜</li></ol><p><img src="https://poiemaweb.com/img/iteration-protocol.png" alt="iteration-protocol"></p><br><h4 id="이터러블"><a href="#이터러블" class="headerlink" title="이터러블"></a>이터러블</h4><p>이터러블 프로토콜을 준수한 객체를 이터러블이라 칭한다.</p><blockquote><p>이터러블은 Symbol.iterator 메소드를 구현하거나 프로토 타입 체인에 의해 상속한 객체를 일컫는다.</p></blockquote><p>Symbol.iterator 메소드는 <strong>이터레이터를 반환</strong>한다.</p><p><strong>배열은 Symbol.iterator 메소드를 소유한다. 따라서 배열은 이터러블 프로토콜을 준수한 이터러블이다.</strong></p><p>반대로 일반 객체는 Symbol.iterator 메소드를 소유하고 있지 않다. 따라서 일반 객체는 이터러블이 아니다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> array = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 배열은 Symbol.iterator 메소드를 소유한다.</span></span><br><span class="line"><span class="comment">// 따라서 배열은 이터러블 프로토콜을 준수한 이터러블이다.</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Symbol</span>.iterator <span class="keyword">in</span> array); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">2</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 일반 객체는 Symbol.iterator 메소드를 소유하지 않는다.</span></span><br><span class="line"><span class="comment">// 따라서 일반 객체는 이터러블 프로토콜을 준수한 이터러블이 아니다.</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Symbol</span>.iterator <span class="keyword">in</span> obj); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>일반 객체는 이터러블이 아니기 때문에 for…of 문에서 순회할 수 없으며 Spread 문법의 대상으로 사용할 수도 없다.</p><p> 하지만 이터러블이 아닌 일반 객체를 이터러블처럼 동작하도록 구현하고 싶다면 이터레이션 프로토콜을 따르면 된다. Symbol.iterator를 키로 갖는 메소드를 객체에 추가하고 이터레이터(iterator)를 반환하도록 구현하면 그 객체는 이터러블이 된다. ( = 커스텀 이터러블 )</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1 ~ 5 사이의 정수로 이루어진 이터러블</span></span><br><span class="line"><span class="keyword">const</span> iterable = &#123;</span><br><span class="line">  <span class="comment">// Symbol.iterator 메소드를 구현하여 이터러블 프로토콜을 준수</span></span><br><span class="line">  [<span class="built_in">Symbol</span>.iterator]() &#123;</span><br><span class="line">    <span class="keyword">let</span> cur = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> max = <span class="number">5</span>;</span><br><span class="line">    <span class="comment">// Symbol.iterator 메소드는 next 메소드를 소유한 이터레이터를 반환</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      next() &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          value: cur++,</span><br><span class="line">          done: cur &gt; max + <span class="number">1</span></span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> num <span class="keyword">of</span> iterable) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(num); <span class="comment">// 1 2 3 4 5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h4 id="이터레이터"><a href="#이터레이터" class="headerlink" title="이터레이터"></a>이터레이터</h4><p>이터레이터 프로토콜은</p><ul><li><code>next 메소드를 소유</code> ➤ 호출 시 이터러블을 순회함</li><li><code>next 메소드의 호출 후 반환</code> ➤ <code>value</code>, <code>done</code> <strong>프로퍼티</strong> 를 갖는 이터레이터 리절트 객체</li></ul><p>이 규약을 준수한 것이 이터레이터.</p><p>즉슨,</p><p>이터러블(Symbol.iterator 소유) ➤ Symbol.iterator 메소드 호출 ➤ 이터레이터 반환 ➤ 이터레이터(next 메소드 소유)</p><p>next메소드 호출 ➤ 이터레이터 리절트 객체 반환(value, done 프로퍼티 소유)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 배열은 이터러블 프로토콜을 준수한 이터러블이다.</span></span><br><span class="line"><span class="keyword">const</span> array = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Symbol.iterator 메소드는 이터레이터를 반환한다.</span></span><br><span class="line"><span class="keyword">const</span> iterator = array[<span class="built_in">Symbol</span>.iterator]();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 이터레이터 프로토콜을 준수한 이터레이터는 next 메소드를 갖는다.</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'next'</span> <span class="keyword">in</span> iterator); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 이터레이터의 next 메소드를 호출하면 value, done 프로퍼티를 갖는 이터레이터 리절트 객체를 반환한다.</span></span><br><span class="line"><span class="comment">// next 메소드를 호출할 때 마다 이터러블을 순회하며 이터레이터 리절트 객체를 반환한다.</span></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next()); <span class="comment">// &#123;value: 1, done: false&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next()); <span class="comment">// &#123;value: 2, done: false&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next()); <span class="comment">// &#123;value: 3, done: false&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next()); <span class="comment">// &#123;value: undefined, done: true&#125;</span></span><br></pre></td></tr></table></figure><p>이터레이터의 next 메소드가 반환하는 이터레이터 리절트 객체의 <strong>value 프로퍼티는 현재 순회 중인 이터러블의 값을 반환</strong>하고 <strong>done 프로퍼티는 이터러블의 순회 완료 여부를 반환</strong>한다.</p><br><h4 id="빌트인-이터러블"><a href="#빌트인-이터러블" class="headerlink" title="빌트인 이터러블"></a>빌트인 이터러블</h4><p>ES6에서 제공하는 빌트인 이터러블들</p><p><strong>Array</strong>, <strong>String</strong>, Map, Set, TypedArray(Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array), DOM data structure(NodeList, HTMLCollection), <strong>Arguments</strong></p><br><h3 id="이터레이션-프로토콜의-필요성"><a href="#이터레이션-프로토콜의-필요성" class="headerlink" title="이터레이션 프로토콜의 필요성"></a>이터레이션 프로토콜의 필요성</h3><p>이터러블은 데이터 공급자(Data provider)의 역할을 한다.</p><p>만약 다양한 데이터들(Array, String, Map, Set 등등 빌트인 이터러블들)의 순회방식이 각자만의 방식을 가지고 있다면 사용자는 해당 데이터를 사용할 때마다 그 방식을 일일히 지켜가야만 한다. 이러한 방법은 매우 비효율적이다. </p><p>하지만, 다양한 데이터가 이터레이션 프로토콜을 준수하도록 규정하면 데이터 소비자는 이터레이션 프로토콜만을 지원하도록 구현하면 된다.</p><blockquote><p>즉, 이터레이션 프로토콜은 다양한 데이터 소스가 하나의 순회 방식을 갖도록 규정하여 데이터 소비자가 효율적으로 다양한 데이터 소스를 사용할 수 있도록 <strong>데이터 소비자와 데이터 소스를 연결하는 인터페이스의 역할을 한다.</strong></p></blockquote><img src="https://user-images.githubusercontent.com/31315644/69258892-b7b75480-0c00-11ea-9176-f0fb0af0bb39.jpeg" alt="데이터소비공급" style="zoom:50%;"><ol><li>이터러블을 지원하는 데이터 소비자는 내부에서 Symbol.iterator 메소드를 호출해 이터레이터를 생성한다.</li><li>이터레이터의 next 메소드를 호출하여 이터러블을 순회한다. </li><li>next 메소드가 반환한 이터레이터 리절트 객체의 value 프로퍼티 값을 취득한다.</li></ol><br><h4 id="for…of-문"><a href="#for…of-문" class="headerlink" title="for…of 문"></a>for…of 문</h4><p>for…of 문은 내부적으로 이터레이터의 next 메소드를 호출하여 이터러블을 순회하며 next 메소드가 반환한 이터레이터 리절트 객체의 value 프로퍼티 값을 for…of 문의 변수에 할당한다. </p><p>그리고 이터레이터 리절트 객체의 done 프로퍼티 값이 false이면 이터러블의 순회를 계속하고 true이면 이터러블의 순회를 중단한다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 배열</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(item);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 문자열</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> letter <span class="keyword">of</span> <span class="string">'abc'</span>) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(letter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Map</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> [key, value] <span class="keyword">of</span> <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="string">'a'</span>, <span class="string">'1'</span>], [<span class="string">'b'</span>, <span class="string">'2'</span>], [<span class="string">'c'</span>, <span class="string">'3'</span>]])) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`key : <span class="subst">$&#123;key&#125;</span> value : <span class="subst">$&#123;value&#125;</span>`</span>); <span class="comment">// key : a value : 1 ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> val <span class="keyword">of</span> <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(val);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>for…of 문이 내부적으로 동작하는 것을 for 문으로 표현하면 아래와 같다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 이터러블</span></span><br><span class="line"><span class="keyword">const</span> iterable = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 이터레이터</span></span><br><span class="line"><span class="keyword">const</span> iterator = iterable[<span class="built_in">Symbol</span>.iterator]();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (;;) &#123;</span><br><span class="line">  <span class="comment">// 이터레이터의 next 메소드를 호출하여 이터러블을 순회한다.</span></span><br><span class="line">  <span class="keyword">const</span> res = iterator.next();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// next 메소드가 반환하는 이터레이터 리절트 객체의 done 프로퍼티가 true가 될 때까지 반복한다.</span></span><br><span class="line">  <span class="keyword">if</span> (res.done) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(res);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="커스텀-이터러블"><a href="#커스텀-이터러블" class="headerlink" title="커스텀 이터러블"></a>커스텀 이터러블</h3><p><a href="https://poiemaweb.com/es6-iteration-for-of#3-커스텀-이터러블" target="_blank" rel="noopener">Poiema 커스텀 이터러블 참고</a></p><h4 id="커스텀-이터러블-구현"><a href="#커스텀-이터러블-구현" class="headerlink" title="커스텀 이터러블 구현"></a>커스텀 이터러블 구현</h4><p>일반 객체는 Symbol.iterator 메소드를 소유하지 않는다.<br>즉, 일반 객체는 이터러블 프로토콜을 준수하지 않으므로 for…of 문으로 순회할 수 없다.</p><p>하지만 일반 객체가 이터레이션 프로토콜을 준수하도록 구현하면 이터러블이 된다. </p><p><strong>예 : 피보나치 수열(1, 2, 3, 5…)을 구현한 간단한 이터러블</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fibonacci = &#123;</span><br><span class="line">  <span class="comment">// Symbol.iterator 메소드를 구현하여 이터러블 프로토콜을 준수</span></span><br><span class="line">  [<span class="built_in">Symbol</span>.iterator]() &#123;</span><br><span class="line">    <span class="keyword">let</span> [pre, cur] = [<span class="number">0</span>, <span class="number">1</span>];</span><br><span class="line">    <span class="comment">// 최대값</span></span><br><span class="line">    <span class="keyword">const</span> max = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Symbol.iterator 메소드는 next 메소드를 소유한 이터레이터를 반환해야 한다.</span></span><br><span class="line">    <span class="comment">// next 메소드는 이터레이터 리절트 객체를 반환</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="comment">// fibonacci 객체를 순회할 때마다 next 메소드가 호출된다.</span></span><br><span class="line">      next() &#123;</span><br><span class="line">        [pre, cur] = [cur, pre + cur];</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          value: cur,</span><br><span class="line">          done: cur &gt;= max</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 이터러블의 최대값을 외부에서 전달할 수 없다.</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> num <span class="keyword">of</span> fibonacci) &#123;</span><br><span class="line">  <span class="comment">// for...of 내부에서 break는 가능하다.</span></span><br><span class="line">  <span class="comment">// if (num &gt;= 10) break;</span></span><br><span class="line">  <span class="built_in">console</span>.log(num); <span class="comment">// 1 2 3 5 8</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Symbol.iterator 메소드는 next 메소드를 갖는 이터레이터를 반환하여야 한다. 그리고 next 메소드는 done과 value 프로퍼티를 가지는 이터레이터 리절트 객체를 반환한다. for…of 문은 done 프로퍼티가 true가 될 때까지 반복하며 done 프로퍼티가 true가 되면 반복을 중지한다.</p><p>이터러블은 for…of 문뿐만 아니라 spread 문법, 디스트럭쳐링 할당, Map과 Set의 생성자에도 사용된다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// spread 문법과 디스트럭처링을 사용하면 이터러블을 손쉽게 배열로 변환할 수 있다.</span></span><br><span class="line"><span class="comment">// spread 문법</span></span><br><span class="line"><span class="keyword">const</span> arr = [...fibonacci];</span><br><span class="line"><span class="built_in">console</span>.log(arr); <span class="comment">// [ 1, 2, 3, 5, 8 ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 디스트럭처링</span></span><br><span class="line"><span class="keyword">const</span> [first, second, ...rest] = fibonacci;</span><br><span class="line"><span class="built_in">console</span>.log(first, second, rest); <span class="comment">// 1 2 [ 3, 5, 8 ]</span></span><br></pre></td></tr></table></figure><br><h4 id="이터러블을-생성하는-함수"><a href="#이터러블을-생성하는-함수" class="headerlink" title="이터러블을 생성하는 함수"></a>이터러블을 생성하는 함수</h4><p>위 fibonacci 이터러블에는 외부에서 값을 전달할 방법이 없다는 아쉬운 점이 있다. </p><p>fibonacci 이터러블의 최대값을 외부에서 전달할 수 있도록 수정해 보자.</p><p>이터러블의 최대 순회수를 전달받아 이터러블을 반환하는 함수를 만들면 된다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 이터러블을 반환하는 함수</span></span><br><span class="line"><span class="keyword">const</span> fibonacciFunc = <span class="function"><span class="keyword">function</span> (<span class="params">max</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> [pre, cur] = [<span class="number">0</span>, <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="comment">// Symbol.iterator 메소드를 구현하여 이터러블 프로토콜을 준수</span></span><br><span class="line">    [<span class="built_in">Symbol</span>.iterator]() &#123;</span><br><span class="line">      <span class="comment">// Symbol.iterator 메소드는 next 메소드를 소유한 이터레이터를 반환해야 한다.</span></span><br><span class="line">      <span class="comment">// next 메소드는 이터레이터 리절트 객체를 반환</span></span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="comment">// fibonacci 객체를 순회할 때마다 next 메소드가 호출된다.</span></span><br><span class="line">        next() &#123;</span><br><span class="line">          [pre, cur] = [cur, pre + cur];</span><br><span class="line">          <span class="keyword">return</span> &#123;</span><br><span class="line">            value: cur,</span><br><span class="line">            done: cur &gt;= max</span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 이터러블을 반환하는 함수에 이터러블의 최대값을 전달한다.</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> num <span class="keyword">of</span> fibonacciFunc(<span class="number">10</span>)) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(num); <span class="comment">// 1 2 3 5 8</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h4 id="이터러블이면서-이터레이터인-객체를-생성하는-함수"><a href="#이터러블이면서-이터레이터인-객체를-생성하는-함수" class="headerlink" title="이터러블이면서 이터레이터인 객체를 생성하는 함수"></a>이터러블이면서 이터레이터인 객체를 생성하는 함수</h4><p>이터레이터를 생성하려면 이터러블의 Symbol.iterator 메소드를 호출해야 한다. 이터러블이면서 이터레이터인 객체를 생성하면 Symbol.iterator 메소드를 호출하지 않아도 된다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 이터러블이면서 이터레이터인 객체를 반환하는 함수</span></span><br><span class="line"><span class="keyword">const</span> fibonacciFunc = <span class="function"><span class="keyword">function</span> (<span class="params">max</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> [pre, cur] = [<span class="number">0</span>, <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Symbol.iterator 메소드와 next 메소드를 소유한</span></span><br><span class="line">  <span class="comment">// 이터러블이면서 이터레이터인 객체를 반환</span></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="comment">// Symbol.iterator 메소드</span></span><br><span class="line">    [<span class="built_in">Symbol</span>.iterator]() &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// next 메소드는 이터레이터 리절트 객체를 반환</span></span><br><span class="line">    next() &#123;</span><br><span class="line">      [pre, cur] = [cur, pre + cur];</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        value: cur,</span><br><span class="line">        done: cur &gt;= max</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// iter는 이터러블이면서 이터레이터이다.</span></span><br><span class="line"><span class="keyword">let</span> iter = fibonacciFunc(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// iter는 이터레이터이다.</span></span><br><span class="line"><span class="built_in">console</span>.log(iter.next()); <span class="comment">// &#123;value: 1, done: false&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(iter.next()); <span class="comment">// &#123;value: 2, done: false&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(iter.next()); <span class="comment">// &#123;value: 3, done: false&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(iter.next()); <span class="comment">// &#123;value: 5, done: false&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(iter.next()); <span class="comment">// &#123;value: 8, done: false&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(iter.next()); <span class="comment">// &#123;value: 13, done: true&#125;</span></span><br><span class="line"></span><br><span class="line">iter = fibonacciFunc(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// iter는 이터러블이다.</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> num <span class="keyword">of</span> iter) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(num); <span class="comment">// 1 2 3 5 8</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>아래의 객체는 Symbol.iterator 메소드와 next 메소드를 소유한 이터러블이면서 이터레이터이다. Symbol.iterator 메소드는 this를 반환하므로 next 메소드를 갖는 이터레이터를 반환한다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  [<span class="built_in">Symbol</span>.iterator]() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">  next() &#123; <span class="comment">/***/</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h4 id="무한-이터러블과-Lazy-evaluation-지연-평가"><a href="#무한-이터러블과-Lazy-evaluation-지연-평가" class="headerlink" title="무한 이터러블과 Lazy evaluation(지연 평가)"></a>무한 이터러블과 Lazy evaluation(지연 평가)</h4><p>무한 이터러블(infinite sequence)을 생성하는 함수를 정의해보자.<br>이를 통해 <a href="https://www.scienceall.com/무한수열infinite-sequence/" target="_blank" rel="noopener">무한 수열(infinite sequence)</a>을 간단히 표현할 수 있다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 무한 이터러블을 생성하는 함수</span></span><br><span class="line"><span class="keyword">const</span> fibonacciFunc = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> [pre, cur] = [<span class="number">0</span>, <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    [<span class="built_in">Symbol</span>.iterator]() &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    next() &#123;</span><br><span class="line">      [pre, cur] = [cur, pre + cur];</span><br><span class="line">      <span class="comment">// done 프로퍼티를 생략한다.</span></span><br><span class="line">      <span class="keyword">return</span> &#123; <span class="attr">value</span>: cur &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// fibonacciFunc 함수는 무한 이터러블을 생성한다.</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> num <span class="keyword">of</span> fibonacciFunc()) &#123;</span><br><span class="line">  <span class="keyword">if</span> (num &gt; <span class="number">10000</span>) <span class="keyword">break</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(num); <span class="comment">// 1 2 3 5 8...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 무한 이터러블에서 3개만을 취득한다.</span></span><br><span class="line"><span class="keyword">const</span> [f1, f2, f3] = fibonacciFunc();</span><br><span class="line"><span class="built_in">console</span>.log(f1, f2, f3); <span class="comment">// 1 2 3</span></span><br></pre></td></tr></table></figure><p>“<a href="https://poiemaweb.com/es6-iteration-for-of#4-이터레이션-프로토콜의-필요성" target="_blank" rel="noopener">이터레이션 프로토콜의 필요성</a>“에서 살펴보았듯이 이터러블은 데이터 공급자(Data provider)의 역할을 한다.<br>배열, 문자열, Map, Set 등의 빌트인 이터러블은 데이터를 모두 메모리에 확보한 다음 동작한다.<br>하지만 이터러블은 <strong><a href="https://ko.wikipedia.org/wiki/느긋한_계산법" target="_blank" rel="noopener">Lazy evaluation(지연 평가)</a></strong>를 통해 값을 생성한다.<br>Lazy evaluation은 평가 결과가 필요할 때까지 평가를 늦추는 기법이다.</p><br><p>위 예제의 fibonacciFunc 함수는 무한 이터러블을 생성한다.<br>하지만 fibonacciFunc 함수가 생성한 무한 이터러블은 데이터를 공급하는 메커니즘을 구현한 것으로 데이터 소비자인 for…of 문이나 디스트럭처링 할당이 실행되기 이전까지 데이터를 생성하지는 않는다.<br>for…of 문의 경우, 이터러블을 순회할 때 내부에서 이터레이터의 next 메소드를 호출하는데 바로 이때 데이터가 생성된다. next 메소드가 호출되기 이전까지는 데이터를 생성하지 않는다.<br>즉, 데이터가 필요할 때까지 데이터의 생성을 지연하다가 데이터가 필요한 순간 데이터를 생성한다.</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/23/iteration/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Symbol</title>
      <link>http://yoursite.com/2019/11/22/Symbol/</link>
      <guid>http://yoursite.com/2019/11/22/Symbol/</guid>
      <pubDate>Fri, 22 Nov 2019 12:32:28 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/31315644/69250382-e6c6c980-0bf2-11ea-96a6-9fb892b82bf7.jpg&quot; alt=&quot;symbol&quot;&gt;&lt;/p&gt;
&lt;h2 id=
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/31315644/69250382-e6c6c980-0bf2-11ea-96a6-9fb892b82bf7.jpg" alt="symbol"></p><h2 id="JavaScript-Symbol"><a href="#JavaScript-Symbol" class="headerlink" title="JavaScript Symbol"></a>JavaScript Symbol</h2><ul><li><p>Symbol</p><ul><li><p>Symbol.for 메소드</p></li><li><p>Symbol의 쓰임</p><ol><li><p>프로퍼티 키</p></li><li><p>프로퍼티 은닉</p></li><li><p>표준 빌트인 객체 확장 이용</p></li></ol></li><li><p>Well known Symbol</p></li></ul></li></ul><br><hr><br><h3 id="용어-러버덕"><a href="#용어-러버덕" class="headerlink" title="용어 - ( 러버덕 )"></a>용어 - ( 러버덕 )</h3><ul><li><p>Symbol</p></li><li><p>Symbol.for</p><br></li></ul><hr><h2 id="Symbol"><a href="#Symbol" class="headerlink" title="Symbol"></a>Symbol</h2><p>원시값을 만드는 방법은 리터럴이 있다.</p><p>근데 Symbol로도 원시값을 만들어낼 수 있는데 이 때 Symbol함수로 호출해야만 한다.</p><blockquote><p>생성된  Symbol은 객체가 아니라 변경 불가능한 원시 타입의 값이다.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 심볼 mySymbol은 이름의 충돌 위험이 없는 유일한 프로퍼티 키</span></span><br><span class="line"><span class="keyword">let</span> mySymbol = <span class="built_in">Symbol</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(mySymbol);        <span class="comment">// Symbol()</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> mySymbol); <span class="comment">// symbol</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Symbol</span>(); <span class="comment">// TypeError: Symbol is not a constructor</span></span><br></pre></td></tr></table></figure><p>Symbol 함수는 래퍼 객체를 생성하는 생성자 함수(String, Number, Boolean 등등)과는 달리 <code>new</code>연산자를 이용하지 않는다.</p><br><p>Symbol 함수에는 선택적으로 문자열을 인수로 전달할 수 있다. </p><p><strong>이 문자열은 심볼 값에 대한 설명으로 디버깅용도로만 이용된다.</strong> </p><p>심볼 값에 대한 설명이 같더라도 생성된 심볼 값은 유일무이한 값이다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 심볼 값에 대한 설명이 같더라도 유일무이한 심볼 값을 생성한다.</span></span><br><span class="line"><span class="keyword">const</span> mySymbol1 = <span class="built_in">Symbol</span>(<span class="string">'mySymbol'</span>);</span><br><span class="line"><span class="keyword">const</span> mySymbol2 = <span class="built_in">Symbol</span>(<span class="string">'mySymbol'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(mySymbol1 === mySymbol2); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><br><p>심볼 값은 암묵적으로 문자열이나 숫자 타입으로 변환되지 않는다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mySymbol = <span class="built_in">Symbol</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 심볼 값은 암묵적으로 타입 변환이 되지 않는다.</span></span><br><span class="line"><span class="built_in">console</span>.log(mySymbol + <span class="string">''</span>); <span class="comment">// TypeError: Cannot convert a Symbol value to a string</span></span><br><span class="line"><span class="built_in">console</span>.log(+mySymbol);     <span class="comment">// TypeError: Cannot convert a Symbol value to a string</span></span><br></pre></td></tr></table></figure><br><p>단, 불리언 타입으로는 암묵적으로 타입 변환된다. 이를 통해 if 문 등에서 존재 확인이 가능하다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mySymbol = <span class="built_in">Symbol</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 불리언 타입으로는 암묵적으로 타입 변환된다</span></span><br><span class="line"><span class="built_in">console</span>.log(!!mySymbol); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// if 문 등에서 존재 확인을 위해 사용할 수 있다.</span></span><br><span class="line"><span class="keyword">if</span> (mySymbol) <span class="built_in">console</span>.log(<span class="string">'mySymbol is not empty.'</span>);</span><br></pre></td></tr></table></figure><br><h3 id="Symbol-for-메소드"><a href="#Symbol-for-메소드" class="headerlink" title="Symbol.for 메소드"></a>Symbol.for 메소드</h3><p>Symbol.for 메소드는 인수로 전달받은 문자열을 키로 사용하여 키와 심볼 값의 쌍들이 저장되어 있는 전역 심볼 레지스트리(global symbol registry)에서 해당 키와 일치하는 심볼 값을 검색한다.</p><ul><li>검색에 성공하면 새로운 심볼 값을 생성하지 않고 검색된 심볼 값을 반환한다.</li><li>검색에 실패하면 새로운 심볼 값을 생성하여 Symbol.for 메소드의 인수로 전달된 키로 전역 Symbol 레지스트리에 저장한 후, 생성된 심볼 값을 반환한다.</li></ul><p>그냥 Symbol은 유일무이한 심볼 값을 단 하나만 생성하기 때문에 전역 심볼 레지스트리에서 관리하지 않는다. </p><p>하지만, Symbol.for 메소드를 이용하면 전역에서 심볼 레지스트리를 통해 공유가 가능하다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 전역 심볼 레지스트리에 mySymbol이라는 키로 저장된 심볼 값이 없으면 새로운 심볼 값을 생성</span></span><br><span class="line"><span class="keyword">const</span> s = <span class="built_in">Symbol</span>.for(<span class="string">'mySymbol'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 전역 심볼 레지스트리에 저장된 심볼 값의 키를 추출</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Symbol</span>.keyFor(s)); <span class="comment">// mySymbol</span></span><br><span class="line"><span class="built_in">console</span>.log(s); <span class="comment">// Symbol(mySymbol)</span></span><br></pre></td></tr></table></figure><br><h3 id="Symbol의-쓰임"><a href="#Symbol의-쓰임" class="headerlink" title="Symbol의 쓰임"></a>Symbol의 쓰임</h3><h4 id="1-프로퍼티-키"><a href="#1-프로퍼티-키" class="headerlink" title="1. 프로퍼티 키"></a>1. 프로퍼티 키</h4><p>심볼 값을 프로퍼티 키로 사용하려면 프로퍼티 키로 사용할 심볼 값에 대괄호를 사용해야 한다. </p><p>프로퍼티에 접근할 때도 마찬가지로 대괄호를 사용해야 한다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="comment">// 심볼 값으로 프로퍼티 키를 동적 생성</span></span><br><span class="line">  [<span class="built_in">Symbol</span>.for(<span class="string">'mySymbol'</span>)]: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj[<span class="built_in">Symbol</span>.for(<span class="string">'mySymbol'</span>)]); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><p><strong>심볼 값은 유일무이한 값이므로 심볼 값으로 프로퍼티 키를 만들면 다른 프로퍼티 키와 절대 충돌하지 않는다.</strong> 기존 프로퍼티 키와 충돌하지 않는 것은 물론, 미래에 추가될 어떤 프로퍼티 키와도 충돌할 위험이 없다.</p><br><h4 id="2-프로퍼티-은닉"><a href="#2-프로퍼티-은닉" class="headerlink" title="2. 프로퍼티 은닉"></a>2. 프로퍼티 은닉</h4><p>심볼 값으로 동적 생성한 프로퍼티 키로 만든 프로퍼티는 for…in 문이나 Object.keys, Object.getOwnPropertyNames 메소드로 찾을 수 없다. </p><p>즉, 프로퍼티를 은닉할 수 있다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="comment">// 심볼 값으로 프로퍼티 키를 동적 생성</span></span><br><span class="line">  [<span class="built_in">Symbol</span>(<span class="string">'mySymbol'</span>)]: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(key); <span class="comment">// 아무것도 출력되지 않는다.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.keys(obj)); <span class="comment">// []</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyNames(obj)); <span class="comment">// []</span></span><br></pre></td></tr></table></figure><p>은닉된 Symbor을 찾기 위해서는 Object.getOwnPropertySymbols 메소드를 이용해야만 한다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="comment">// 심볼 값으로 프로퍼티 키를 동적 생성</span></span><br><span class="line">  [<span class="built_in">Symbol</span>(<span class="string">'mySymbol'</span>)]: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ES6 : getOwnPropertySymbols</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertySymbols(obj)); <span class="comment">// [Symbol(mySymbol)]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 심볼 값을 찾을 수 있다.</span></span><br><span class="line"><span class="keyword">const</span> symbolKey1 = <span class="built_in">Object</span>.getOwnPropertySymbols(obj)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(obj[symbolKey1]); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><br><h4 id="3-표준-빌트인-객체-확장-이용"><a href="#3-표준-빌트인-객체-확장-이용" class="headerlink" title="3. 표준 빌트인 객체 확장 이용"></a>3. 표준 빌트인 객체 확장 이용</h4><p>보통으로는 표준 빌트인에 사용자 정의 메소드를 직접 추가해서 확장하여 사용하지는 않는다.</p><p>그럼에도 불구하고 아래처럼 확장했다고 가정하자.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 표준 빌트인 객체를 확장하는 것은 권장하지 않는다.</span></span><br><span class="line"><span class="comment">// 즉, Array.prototype은 읽기 전용으로 사용하는 것이 좋다.</span></span><br><span class="line"><span class="built_in">Array</span>.prototype.sum = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.reduce(<span class="function">(<span class="params">p, c</span>) =&gt;</span> p + c, <span class="number">0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log([<span class="number">1</span>, <span class="number">2</span>].sum()); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure><p>나는 sum이라는 메소드를 Array.prototype에 확장해서 사용했다. 그런데 만약에 차후에 생긴 ES~~ 버전에서 sum이라는 메소드를 만들어 배포했다고 할 경우, 내 메소드가 빌트인 메소드를 덮어씌우게 된다. 이는 나중에 문제로 야기될 확률이 매우 높다. </p><p>하지만 중복될 가능성이 없는 심볼 값으로 프로퍼티 키를 생성하여 표준 빌트인 객체를 확장하면 표준 빌트인 객체의 기존 프로퍼티 키와 충돌하지 않는 것은 물론, 버전이 올라감에 따라 추가될지 모르는 어떤 프로퍼티 키와도 충돌할 위험이 없어 안전하게 표준 빌트인 객체를 확장할 수 있다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 심볼 값으로 프로퍼티 키를 동적 생성하면 다른 프로퍼티 키와 절대 충돌하지 않는다.</span></span><br><span class="line"><span class="built_in">Array</span>.prototype[<span class="built_in">Symbol</span>.for(<span class="string">'sum'</span>)] = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.reduce(<span class="function">(<span class="params">p, c</span>) =&gt;</span> p + c, <span class="number">0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log([<span class="number">1</span>, <span class="number">2</span>][<span class="built_in">Symbol</span>.for(<span class="string">'sum'</span>)]()); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure><br><h3 id="Well-know-Symbol"><a href="#Well-know-Symbol" class="headerlink" title="Well know Symbol"></a>Well know Symbol</h3><p>JS가 기본 제공하는 빌트인 심볼값이 존재한다.</p><p>빌트인 심볼 값은 Symbol 함수의 프로퍼티에 할당되어 있다.</p><p><img src="https://poiemaweb.com/assets/fs-images/30-1.png" alt="img"></p><p><br>  이처럼 JS에서 기본 제공하는 빌트인 심볼 값을 <strong><a href="https://tc39.es/ecma262/#sec-well-known-symbols" target="_blank" rel="noopener">Well-Known Symbol</a></strong>이라 부른다. </p><p>Well-Known Symbol은 자바스크립트 엔진의 내부 알고리즘에 사용된다.</p><p>내부 알고리즘의 예 : 배열, String 객체, arguments 객체</p><p>for…of 문으로 순회 가능한 빌트인 이터러블(iterable)은 Well-Known Symbol인 Symbol.iterator를 키로 갖는 메소드를 갖으며, Symbol.iterator 메소드를 호출하면 이터레이터(iterator)를 반환하도록 ECMAScript 사양에 규정되어 있다. </p><p>빌트인 이터러블은 이 규정(이터레이션 프로토콜)을 준수하고 있다.</p><ul><li><p>빌트인 이터러블</p><p>이터러블은 for…of 문으로 순회할 수 있고 스프레드 문법의 피연산자가 될 수 있는 객체를 말한다. 자바스크립트가 기본 제공하는 빌트인 이터러블은 아래와 같다.</p></li></ul><table><thead><tr><th align="left">빌트인 이터러블</th><th align="left">프로퍼티 키가 Symbol.iterator인 메소드</th></tr></thead><tbody><tr><td align="left">Array</td><td align="left">Array.prototype[Symbol.iterator]</td></tr><tr><td align="left">String</td><td align="left">String.prototype[Symbol.iterator]</td></tr><tr><td align="left">Map</td><td align="left">Map.prototype[Symbol.iterator]</td></tr><tr><td align="left">Set</td><td align="left">Set.prototype[Symbol.iterator]</td></tr><tr><td align="left">TypedArray</td><td align="left">TypedArray.prototype[Symbol.iterator]</td></tr><tr><td align="left">arguments</td><td align="left">arguments[Symbol.iterator]</td></tr><tr><td align="left">DOM 컬렉션</td><td align="left">NodeList.prototype[Symbol.iterator], HTMLCollection.prototype[Symbol.iterator]</td></tr></tbody></table><p>일반 객체에 추가해야 하는 메소드의 키 Symbol.iterator은 기존 프로퍼티 키 또는 미래에 추가될 프로퍼티 키와 절대로 중복되지 않을 것이다.</p><p>이처럼 <strong>심볼은 중복되지 않는 상수 값을 생성하는 것은 물론 기존에 작성된 코드에 영향을 주지 않고 새로운 프로퍼티를 추가하기 위해, 즉 하위 호환성을 보장하기 위해 도입되었다.</strong></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/22/Symbol/#disqus_thread</comments>
    </item>
    
    <item>
      <title>javascript-study-27</title>
      <link>http://yoursite.com/2019/11/19/javascript-study-27/</link>
      <guid>http://yoursite.com/2019/11/19/javascript-study-27/</guid>
      <pubDate>Tue, 19 Nov 2019 14:42:20 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/31315644/65933403-536fe400-e44c-11e9-981d-c4e8c1f86998.png&quot; alt=&quot;JavaScriptBanner&quot;&gt;&lt;/
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/31315644/65933403-536fe400-e44c-11e9-981d-c4e8c1f86998.png" alt="JavaScriptBanner"></p><hr><h2 id="JavaScript-Study-27"><a href="#JavaScript-Study-27" class="headerlink" title="JavaScript Study 27"></a>JavaScript Study 27</h2><ul><li><p>Symbol</p><ul><li><p>Symbol.for 메소드</p></li><li><p>Symbol의 쓰임</p><ol><li><p>프로퍼티 키</p></li><li><p>프로퍼티 은닉</p></li><li><p>표준 빌트인 객체 확장 이용</p></li></ol></li></ul></li><li><p>개발 커뮤니티 이용법</p></li></ul><br><hr><br><h3 id="용어-러버덕"><a href="#용어-러버덕" class="headerlink" title="용어 - ( 러버덕 )"></a>용어 - ( 러버덕 )</h3><ul><li><p>Symbol</p></li><li><p>Symbol.for</p><br></li></ul><hr><h2 id="Symbol"><a href="#Symbol" class="headerlink" title="Symbol"></a>Symbol</h2><p>원시값을 만드는 방법은 리터럴이 있다.</p><p>근데 Symbol로도 원시값을 만들어낼 수 있는데 이 때 Symbol함수로 호출해야만 한다.</p><blockquote><p>생성된  Symbol은 객체가 아니라 변경 불가능한 원시 타입의 값이다.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 심볼 mySymbol은 이름의 충돌 위험이 없는 유일한 프로퍼티 키</span></span><br><span class="line"><span class="keyword">let</span> mySymbol = <span class="built_in">Symbol</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(mySymbol);        <span class="comment">// Symbol()</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> mySymbol); <span class="comment">// symbol</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Symbol</span>(); <span class="comment">// TypeError: Symbol is not a constructor</span></span><br></pre></td></tr></table></figure><p>Symbol 함수는 래퍼 객체를 생성하는 생성자 함수(String, Number, Boolean 등등)과는 달리 <code>new</code>연산자를 이용하지 않는다.</p><br><p>Symbol 함수에는 선택적으로 문자열을 인수로 전달할 수 있다. </p><p><strong>이 문자열은 심볼 값에 대한 설명으로 디버깅용도로만 이용된다.</strong> </p><p>심볼 값에 대한 설명이 같더라도 생성된 심볼 값은 유일무이한 값이다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 심볼 값에 대한 설명이 같더라도 유일무이한 심볼 값을 생성한다.</span></span><br><span class="line"><span class="keyword">const</span> mySymbol1 = <span class="built_in">Symbol</span>(<span class="string">'mySymbol'</span>);</span><br><span class="line"><span class="keyword">const</span> mySymbol2 = <span class="built_in">Symbol</span>(<span class="string">'mySymbol'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(mySymbol1 === mySymbol2); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><br><p>심볼 값은 암묵적으로 문자열이나 숫자 타입으로 변환되지 않는다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mySymbol = <span class="built_in">Symbol</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 심볼 값은 암묵적으로 타입 변환이 되지 않는다.</span></span><br><span class="line"><span class="built_in">console</span>.log(mySymbol + <span class="string">''</span>); <span class="comment">// TypeError: Cannot convert a Symbol value to a string</span></span><br><span class="line"><span class="built_in">console</span>.log(+mySymbol);     <span class="comment">// TypeError: Cannot convert a Symbol value to a string</span></span><br></pre></td></tr></table></figure><br><p>단, 불리언 타입으로는 암묵적으로 타입 변환된다. 이를 통해 if 문 등에서 존재 확인이 가능하다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mySymbol = <span class="built_in">Symbol</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 불리언 타입으로는 암묵적으로 타입 변환된다</span></span><br><span class="line"><span class="built_in">console</span>.log(!!mySymbol); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// if 문 등에서 존재 확인을 위해 사용할 수 있다.</span></span><br><span class="line"><span class="keyword">if</span> (mySymbol) <span class="built_in">console</span>.log(<span class="string">'mySymbol is not empty.'</span>);</span><br></pre></td></tr></table></figure><br><h3 id="Symbol-for-메소드"><a href="#Symbol-for-메소드" class="headerlink" title="Symbol.for 메소드"></a>Symbol.for 메소드</h3><p>Symbol.for 메소드는 인수로 전달받은 문자열을 키로 사용하여 키와 심볼 값의 쌍들이 저장되어 있는 전역 심볼 레지스트리(global symbol registry)에서 해당 키와 일치하는 심볼 값을 검색한다.</p><ul><li>검색에 성공하면 새로운 심볼 값을 생성하지 않고 검색된 심볼 값을 반환한다.</li><li>검색에 실패하면 새로운 심볼 값을 생성하여 Symbol.for 메소드의 인수로 전달된 키로 전역 Symbol 레지스트리에 저장한 후, 생성된 심볼 값을 반환한다.</li></ul><p>그냥 Symbol은 유일무이한 심볼 값을 단 하나만 생성하기 때문에 전역 심볼 레지스트리에서 관리하지 않는다. </p><p>하지만, Symbol.for 메소드를 이용하면 전역에서 심볼 레지스트리를 통해 공유가 가능하다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 전역 심볼 레지스트리에 mySymbol이라는 키로 저장된 심볼 값이 없으면 새로운 심볼 값을 생성</span></span><br><span class="line"><span class="keyword">const</span> s = <span class="built_in">Symbol</span>.for(<span class="string">'mySymbol'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 전역 심볼 레지스트리에 저장된 심볼 값의 키를 추출</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Symbol</span>.keyFor(s)); <span class="comment">// mySymbol</span></span><br><span class="line"><span class="built_in">console</span>.log(s); <span class="comment">// Symbol(mySymbol)</span></span><br></pre></td></tr></table></figure><br><h3 id="Symbol의-쓰임"><a href="#Symbol의-쓰임" class="headerlink" title="Symbol의 쓰임"></a>Symbol의 쓰임</h3><h4 id="1-프로퍼티-키"><a href="#1-프로퍼티-키" class="headerlink" title="1. 프로퍼티 키"></a>1. 프로퍼티 키</h4><p>심볼 값을 프로퍼티 키로 사용하려면 프로퍼티 키로 사용할 심볼 값에 대괄호를 사용해야 한다. </p><p>프로퍼티에 접근할 때도 마찬가지로 대괄호를 사용해야 한다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="comment">// 심볼 값으로 프로퍼티 키를 동적 생성</span></span><br><span class="line">  [<span class="built_in">Symbol</span>.for(<span class="string">'mySymbol'</span>)]: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj[<span class="built_in">Symbol</span>.for(<span class="string">'mySymbol'</span>)]); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><p><strong>심볼 값은 유일무이한 값이므로 심볼 값으로 프로퍼티 키를 만들면 다른 프로퍼티 키와 절대 충돌하지 않는다.</strong> 기존 프로퍼티 키와 충돌하지 않는 것은 물론, 미래에 추가될 어떤 프로퍼티 키와도 충돌할 위험이 없다.</p><br><h4 id="2-프로퍼티-은닉"><a href="#2-프로퍼티-은닉" class="headerlink" title="2. 프로퍼티 은닉"></a>2. 프로퍼티 은닉</h4><p>심볼 값으로 동적 생성한 프로퍼티 키로 만든 프로퍼티는 for…in 문이나 Object.keys, Object.getOwnPropertyNames 메소드로 찾을 수 없다. </p><p>즉, 프로퍼티를 은닉할 수 있다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="comment">// 심볼 값으로 프로퍼티 키를 동적 생성</span></span><br><span class="line">  [<span class="built_in">Symbol</span>(<span class="string">'mySymbol'</span>)]: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(key); <span class="comment">// 아무것도 출력되지 않는다.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.keys(obj)); <span class="comment">// []</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyNames(obj)); <span class="comment">// []</span></span><br></pre></td></tr></table></figure><p>은닉된 Symbor을 찾기 위해서는 Object.getOwnPropertySymbols 메소드를 이용해야만 한다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="comment">// 심볼 값으로 프로퍼티 키를 동적 생성</span></span><br><span class="line">  [<span class="built_in">Symbol</span>(<span class="string">'mySymbol'</span>)]: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ES6 : getOwnPropertySymbols</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertySymbols(obj)); <span class="comment">// [Symbol(mySymbol)]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 심볼 값을 찾을 수 있다.</span></span><br><span class="line"><span class="keyword">const</span> symbolKey1 = <span class="built_in">Object</span>.getOwnPropertySymbols(obj)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(obj[symbolKey1]); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><br><h4 id="3-표준-빌트인-객체-확장-이용"><a href="#3-표준-빌트인-객체-확장-이용" class="headerlink" title="3. 표준 빌트인 객체 확장 이용"></a>3. 표준 빌트인 객체 확장 이용</h4><p>보통으로는 표준 빌트인에 사용자 정의 메소드를 직접 추가해서 확장하여 사용하지는 않는다.</p><p>그럼에도 불구하고 아래처럼 확장했다고 가정하자.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 표준 빌트인 객체를 확장하는 것은 권장하지 않는다.</span></span><br><span class="line"><span class="comment">// 즉, Array.prototype은 읽기 전용으로 사용하는 것이 좋다.</span></span><br><span class="line"><span class="built_in">Array</span>.prototype.sum = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.reduce(<span class="function">(<span class="params">p, c</span>) =&gt;</span> p + c, <span class="number">0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log([<span class="number">1</span>, <span class="number">2</span>].sum()); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure><p>나는 sum이라는 메소드를 Array.prototype에 확장해서 사용했다. 그런데 만약에 차후에 생긴 ES~~ 버전에서 sum이라는 메소드를 만들어 배포했다고 할 경우, 내 메소드가 빌트인 메소드를 덮어씌우게 된다. 이는 나중에 문제로 야기될 확률이 매우 높다. </p><p>하지만 중복될 가능성이 없는 심볼 값으로 프로퍼티 키를 생성하여 표준 빌트인 객체를 확장하면 표준 빌트인 객체의 기존 프로퍼티 키와 충돌하지 않는 것은 물론, 버전이 올라감에 따라 추가될지 모르는 어떤 프로퍼티 키와도 충돌할 위험이 없어 안전하게 표준 빌트인 객체를 확장할 수 있다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 심볼 값으로 프로퍼티 키를 동적 생성하면 다른 프로퍼티 키와 절대 충돌하지 않는다.</span></span><br><span class="line"><span class="built_in">Array</span>.prototype[<span class="built_in">Symbol</span>.for(<span class="string">'sum'</span>)] = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.reduce(<span class="function">(<span class="params">p, c</span>) =&gt;</span> p + c, <span class="number">0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log([<span class="number">1</span>, <span class="number">2</span>][<span class="built_in">Symbol</span>.for(<span class="string">'sum'</span>)]()); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure><br><h3 id="개발-커뮤니티-이용법"><a href="#개발-커뮤니티-이용법" class="headerlink" title="개발 커뮤니티 이용법"></a>개발 커뮤니티 이용법</h3><ul><li>twitter 이용 : 예) JS에서 유명한 사람들을 팔로우한다.(TC39에서 유명한 사람들)  그러면 그들과 관련된 트윗이 날라오는데 그것을 이용한다.</li><li>facebook 이용 : 프론트엔드 개발 그룹, 프론트엔드 스터디 그룹 과 같은 그룹들을 이용한다.</li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/19/javascript-study-27/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList Async/Await</title>
      <link>http://yoursite.com/2019/11/16/daily42/</link>
      <guid>http://yoursite.com/2019/11/16/daily42/</guid>
      <pubDate>Sat, 16 Nov 2019 14:49:45 GMT</pubDate>
      <description>
      
        
        
          &lt;img src=&quot;https://user-images.githubusercontent.com/31315644/68863943-a4eddd00-0733-11ea-9a1e-3855dbef6bd0.png&quot; alt=&quot;email-asyncawait&quot; style
        
      
      </description>
      
      
      <content:encoded><![CDATA[<img src="https://user-images.githubusercontent.com/31315644/68863943-a4eddd00-0733-11ea-9a1e-3855dbef6bd0.png" alt="email-asyncawait" style="zoom:50%;"><hr><h2 id="TODO-LIST-FULL-VERSION-async-await"><a href="#TODO-LIST-FULL-VERSION-async-await" class="headerlink" title="TODO LIST FULL VERSION - async / await"></a>TODO LIST FULL VERSION - async / await</h2><h3 id="Ajax-란"><a href="#Ajax-란" class="headerlink" title="Ajax 란?"></a>Ajax 란?</h3><blockquote><p>JavaScript를 사용한 비동기 통신, 클라이언트와 서버간에 XML 데이터를 주고받는 기술.</p></blockquote><p>Ajax 요청 방법 3가지</p><ol><li>XMLHttpRequest</li><li>Axios</li><li>fetch</li></ol><hr><h3 id="async-await"><a href="#async-await" class="headerlink" title="async / await"></a>async / await</h3><img src="https://user-images.githubusercontent.com/31315644/68789904-aebb0600-0689-11ea-9c3f-116a5f08b61b.jpeg" alt="todoFolder구조" style="zoom: 33%;"><ol><li><p><a href="#a1">package.json</a></p></li><li><p><a href="#a2">.eslintrc.js</a></p></li><li><p><a href="#a3">app.js 서버</a></p><p><strong>public폴더 ▼</strong></p></li><li><p><a href="#a4">index.html</a></p></li><li><p><a href="#a5">css/style.css</a></p></li><li><p><a href="#a6">js/04async.js</a></p></li></ol><hr><ul><li><code>package.json</code> <a id="a1"></a></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"server"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"start"</span>: <span class="string">"nodemon app"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"keywords"</span>: [],</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"express"</span>: <span class="string">"^4.17.1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"eslint"</span>: <span class="string">"^6.6.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-config-airbnb-base"</span>: <span class="string">"^14.0.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-plugin-html"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-plugin-import"</span>: <span class="string">"^2.18.2"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><ul><li><code>.eslintrc.js</code> <a id="a2"></a></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  "parserOptions": &#123;</span><br><span class="line">    "ecmaVersion": 9</span><br><span class="line">  &#125;,</span><br><span class="line">  "env": &#123;</span><br><span class="line">    "browser": true,</span><br><span class="line">    "commonjs": true,</span><br><span class="line">    "node": true,</span><br><span class="line">    "jquery": true</span><br><span class="line">  &#125;,</span><br><span class="line">  "extends": "airbnb-base",</span><br><span class="line">  "plugins": [ "import", "html" ],</span><br><span class="line">  "rules": &#123;</span><br><span class="line">    // "off" or 0 - turn the rule off</span><br><span class="line">    // "warn" or 1 - turn the rule on as a warning (doesn’t affect exit code)</span><br><span class="line">    // "error" or 2 - turn the rule on as an error (exit code is 1 when triggered)</span><br><span class="line">    // "no-var": 0,</span><br><span class="line">    "prefer-arrow-callback": 0,</span><br><span class="line">    "no-console": 0,  // "warn"</span><br><span class="line">    "no-plusplus": "off",  // x</span><br><span class="line">    "vars-on-top": 0,  // x</span><br><span class="line">    "eqeqeq": 0,</span><br><span class="line">    "quotes": [ "error", "single" ],</span><br><span class="line">    "no-underscore-dangle": "warn",</span><br><span class="line">    // "no-plusplus": [ "error", &#123; "allowForLoopAfterthoughts": true &#125;],</span><br><span class="line">    "comma-dangle": [ "error", "never"],</span><br><span class="line">    "no-nested-ternary": 0,</span><br><span class="line">    "no-param-reassign": 0,</span><br><span class="line">    "no-return-assign" : 0,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br><ul><li><code>app.js</code> 서버 <a id="a3"></a></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// express 패키지(모듈)를 가지고 온다.</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> todos = [</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">content</span>: <span class="string">'HTML'</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">content</span>: <span class="string">'CSS'</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">content</span>: <span class="string">'Javascirpt'</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 루트 폴더의 이름을 퍼블릭으로 할거야.</span></span><br><span class="line"><span class="comment">// 미들웨어 딱 1번만 실행됨.</span></span><br><span class="line">app.use(express.static(<span class="string">'public'</span>));</span><br><span class="line">app.use(express.json());</span><br><span class="line">app.use(express.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">true</span> &#125;)); <span class="comment">// for parsing</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// app.get('/', (req, res) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   res.send('hello world!');</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/todos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  todos.sort(<span class="function">(<span class="params">t1, t2</span>) =&gt;</span> t2.id - t1.id);</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">'/todos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(req.body);</span><br><span class="line">  todos = [req.body, ...todos];</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// app.patch('/todos/:id([0-9])', (req, res) =&gt; &#123;</span></span><br><span class="line">app.patch(<span class="string">'/todos/:id'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = req.params; <span class="comment">// req.params.id</span></span><br><span class="line">  <span class="keyword">const</span> &#123; completed &#125; = req.body; <span class="comment">// req.body.completed;</span></span><br><span class="line">  todos = todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> (todo.id === +id ? &#123; ...todo, completed &#125; : todo));</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.delete(<span class="string">'/todos/:id'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = req.params; <span class="comment">// req.params.id</span></span><br><span class="line">  todos = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id !== +id);</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.delete(<span class="string">'/completedTodos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  todos = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> !todo.completed);</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.patch(<span class="string">'/todos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; completed &#125; = req.body;</span><br><span class="line">  todos = todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> (&#123; ...todo, completed &#125;));</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Server listening on port 3000'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br><ul><li><code>index.html</code> <a id="a4"></a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"ko"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Todos 2.0<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"./css/style.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">  &lt;&lt;script defer src="./js/01promise.js"&gt;&lt;/script&gt;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">defer</span> <span class="attr">src</span>=<span class="string">"./js/04async.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>Todos<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ver"</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"input-todo"</span> <span class="attr">placeholder</span>=<span class="string">"What needs to be done?"</span> <span class="attr">autofocus</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"all"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>All<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"active"</span>&gt;</span>Active<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"completed"</span>&gt;</span>Completed<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"todos"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;li id="myId" class="todo-item"&gt;</span></span><br><span class="line"><span class="comment">        &lt;input class="checkbox" type="checkbox" id="ck-myId"&gt;</span></span><br><span class="line"><span class="comment">        &lt;label for="ck-myId"&gt;HTML&lt;/label&gt;</span></span><br><span class="line"><span class="comment">        &lt;i class="remove-todo far fa-times-circle"&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="comment">      &lt;/li&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"complete-all"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"checkbox"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"ck-complete-all"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"ck-complete-all"</span>&gt;</span>Mark all as complete<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clear-completed"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span>Clear completed (<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"completed-todos"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">strong</span> <span class="attr">class</span>=<span class="string">"active-todos"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> items left</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><ul><li><code>css/style.css</code> <a id="a5"></a></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> url(<span class="string">'https://fonts.googleapis.com/css?family=Roboto:100,300,400,700|Noto+Sans+KR'</span>);</span><br><span class="line">@<span class="keyword">import</span> url(<span class="string">'https://use.fontawesome.com/releases/v5.5.0/css/all.css'</span>);</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'Roboto'</span>, <span class="string">'Noto Sans KR'</span>, sans-serif;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.9em</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#a9b0b4</span>; <span class="comment">/*#58666e;*/</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#505455</span>;<span class="comment">/*#f0f3f4;*/</span></span><br><span class="line">  <span class="attribute">-webkit-font-smoothing</span>: antialiased;</span><br><span class="line">  <span class="attribute">-moz-osx-font-smoothing</span>: grayscale;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">750px</span>;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">450px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.title</span> &#123;</span><br><span class="line">  <span class="comment">/* margin: 10px 0; */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">4.5em</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">100</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ver</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">100</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .input-todo  */</span></span><br><span class="line"><span class="selector-class">.input-todo</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">45px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.3333333</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#e7ecee</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">transition</span>: border-color ease-in-out .<span class="number">15s</span>,box-shadow ease-in-out .<span class="number">15s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.input-todo</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">1px</span> <span class="number">1px</span> <span class="built_in">rgba</span>(0, 0, 0, 0.075), <span class="number">0</span> <span class="number">0</span> <span class="number">8px</span> <span class="built_in">rgba</span>(102, 175, 233, 0.6);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.input-todo</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .nav */</span></span><br><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> &gt; <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> &gt; <span class="selector-tag">li</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todos</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .todo-item */</span></span><br><span class="line"><span class="selector-class">.todo-item</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="comment">/* display: block; */</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: -<span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#e7ecee</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">:first-child</span> &#123;</span><br><span class="line">  <span class="attribute">border-top-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">border-top-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">border-bottom-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  .checkbox</span></span><br><span class="line"><span class="comment">  .checkbox 바로 뒤에 위치한 label의 before와 after를 사용해</span></span><br><span class="line"><span class="comment">  .checkbox의 외부 박스와 내부 박스를 생성한다.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  &lt;input class="checkbox" type="checkbox" id="myId"&gt;</span></span><br><span class="line"><span class="comment">  &lt;label for="myId"&gt;Content&lt;/label&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span> + <span class="selector-tag">label</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute; <span class="comment">/* 부모 위치를 기준으로 */</span></span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">2em</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">35px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">user-select</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span> + <span class="selector-tag">label</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#cfdadd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span><span class="selector-pseudo">:checked</span> + <span class="selector-tag">label</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .remove-todo button */</span></span><br><span class="line"><span class="selector-class">.remove-todo</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* todo-item이 호버 상태이면 삭제 버튼을 활성화 */</span></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">:hover</span> &gt; <span class="selector-class">.remove-todo</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.complete-all</span>, <span class="selector-class">.clear-completed</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">flex-basis</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clear-completed</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: right;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1px</span> <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: .<span class="number">8em</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#e6e6e6</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#adadad</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><ul><li><code>js/04async.js</code> <a id="a6"></a></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> todos = [];</span><br><span class="line"><span class="keyword">let</span> navId = <span class="string">'all'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> $todos = <span class="built_in">document</span>.querySelector(<span class="string">'.todos'</span>);</span><br><span class="line"><span class="keyword">const</span> $inputTodo = <span class="built_in">document</span>.querySelector(<span class="string">'.input-todo'</span>);</span><br><span class="line"><span class="keyword">const</span> $nav = <span class="built_in">document</span>.querySelector(<span class="string">'.nav'</span>);</span><br><span class="line"><span class="keyword">const</span> $clearCompleted = <span class="built_in">document</span>.querySelector(<span class="string">'.clear-completed &gt; .btn'</span>);</span><br><span class="line"><span class="keyword">const</span> $completeAll = <span class="built_in">document</span>.querySelector(<span class="string">'.complete-all'</span>);</span><br><span class="line"><span class="keyword">const</span> $completedTodos = <span class="built_in">document</span>.querySelector(<span class="string">'.completed-todos'</span>);</span><br><span class="line"><span class="keyword">const</span> $activeTodos = <span class="built_in">document</span>.querySelector(<span class="string">'.active-todos'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ajax = <span class="function">(<span class="params">(</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> request = <span class="function">(<span class="params">method, url, payload</span>) =&gt;</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    xhr.open(method, url);</span><br><span class="line">    xhr.setRequestHeader(<span class="string">'Content-type'</span>, <span class="string">'application/json'</span>);</span><br><span class="line">    xhr.send(<span class="built_in">JSON</span>.stringify(payload));</span><br><span class="line"></span><br><span class="line">    xhr.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (xhr.status === <span class="number">200</span> || xhr.status === <span class="number">201</span>) &#123;</span><br><span class="line">        resolve(<span class="built_in">JSON</span>.parse(xhr.response));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    xhr.onerror = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      reject(xhr.status);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="keyword">get</span>(url) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'GET'</span>, url);</span><br><span class="line">    &#125;,</span><br><span class="line">    post(url, payload) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'POST'</span>, url, payload);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">delete</span>(url) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'DELETE'</span>, url);</span><br><span class="line">    &#125;,</span><br><span class="line">    patch(url, payload) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'PATCH'</span>, url, payload);</span><br><span class="line">    &#125;,</span><br><span class="line">    put(url, payload) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'PUT'</span>, url, payload);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 렌더</span></span><br><span class="line"><span class="keyword">const</span> render = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> html = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">const</span> _todos = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> (navId === <span class="string">'all'</span> ? <span class="literal">true</span> : navId === <span class="string">'active'</span> ? !todo.completed : todo.completed));</span><br><span class="line"></span><br><span class="line">  _todos.forEach(<span class="function">(<span class="params">&#123; id, content, completed &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    html += <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;li id="<span class="subst">$&#123;id&#125;</span>" class="todo-item"&gt;</span></span><br><span class="line"><span class="string">      &lt;input class="checkbox" type="checkbox" id="ck-<span class="subst">$&#123;id&#125;</span>" <span class="subst">$&#123;completed ? <span class="string">'checked'</span> : <span class="string">''</span>&#125;</span>&gt;</span></span><br><span class="line"><span class="string">      &lt;label for="ck-<span class="subst">$&#123;id&#125;</span>"&gt;<span class="subst">$&#123;content&#125;</span>&lt;/label&gt;</span></span><br><span class="line"><span class="string">      &lt;button class="remove-todo"&gt;X&lt;/button&gt;</span></span><br><span class="line"><span class="string">    &lt;/li&gt;`</span>;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  $completedTodos.textContent = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.completed).length;</span><br><span class="line">  $activeTodos.textContent = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> !todo.completed).length;</span><br><span class="line">  $todos.innerHTML = html;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 기능</span></span><br><span class="line"><span class="keyword">const</span> findMaxId = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">Math</span>.max(<span class="number">0</span>, ...todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id)) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 이벤트 함수</span></span><br><span class="line"><span class="keyword">const</span> getTodos = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  ajax.get(<span class="string">'./todos'</span>)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>) =&gt;</span> todos = res)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> addTodos = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> todo = &#123; <span class="attr">id</span>: findMaxId(), <span class="attr">content</span>: $inputTodo.value, <span class="attr">completed</span>: <span class="literal">false</span> &#125;;</span><br><span class="line">  ajax.post(<span class="string">'./todos'</span>, todo)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>) =&gt;</span> todos = res)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line">  $inputTodo.value = <span class="string">''</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> removeTodo = <span class="function">(<span class="params">id</span>) =&gt;</span> &#123;</span><br><span class="line">  ajax.delete(<span class="string">`./todos/<span class="subst">$&#123;id&#125;</span>`</span>)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>) =&gt;</span> todos = res)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> toggleTodo = <span class="function">(<span class="params">id</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> completed = !todos.find(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id === +id).completed;</span><br><span class="line">  ajax.patch(<span class="string">`/todos/<span class="subst">$&#123;id&#125;</span>`</span>, &#123; completed &#125;)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>) =&gt;</span> todos = res)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> toggleAll = <span class="function">(<span class="params">completed</span>) =&gt;</span> &#123;</span><br><span class="line">  ajax.patch(<span class="string">'./todos'</span>, &#123; completed &#125;)</span><br><span class="line">    .then(<span class="function">(<span class="params">_todos</span>) =&gt;</span> todos = _todos)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.error(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> clearTodos = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  ajax.delete(<span class="string">'./completedTodos'</span>)</span><br><span class="line">    .then(<span class="function">(<span class="params">_todos</span>) =&gt;</span> todos = _todos)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.error(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> changeNav = <span class="function">(<span class="params">li</span>) =&gt;</span> &#123;</span><br><span class="line">  [...$nav.children].forEach(<span class="function">(<span class="params">$list</span>) =&gt;</span> &#123;</span><br><span class="line">    $list.classList.toggle(<span class="string">'active'</span>, $list === li);</span><br><span class="line">  &#125;);</span><br><span class="line">  navId = li.id;</span><br><span class="line">  render();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 이벤트</span></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  getTodos();</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'promise'</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$inputTodo.onkeyup = <span class="function">(<span class="params">&#123; target, keyCode &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (keyCode !== <span class="number">13</span> || target.value.trim() === <span class="string">''</span>) <span class="keyword">return</span>;</span><br><span class="line">  addTodos();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$todos.onclick = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!target.classList.contains(<span class="string">'remove-todo'</span>)) <span class="keyword">return</span>;</span><br><span class="line">  removeTodo(target.parentNode.id);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$todos.onchange = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  toggleTodo(target.parentNode.id);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$completeAll.onchange = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  toggleAll(target.checked);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$clearCompleted.onclick = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  clearTodos();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$nav.onclick = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (target.classList.contains(<span class="string">'nav'</span>)) <span class="keyword">return</span>;</span><br><span class="line">  changeNav(target);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/16/daily42/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList axios</title>
      <link>http://yoursite.com/2019/11/16/daily41/</link>
      <guid>http://yoursite.com/2019/11/16/daily41/</guid>
      <pubDate>Sat, 16 Nov 2019 14:43:49 GMT</pubDate>
      <description>
      
        
        
          &lt;img src=&quot;https://user-images.githubusercontent.com/31315644/68863936-a28b8300-0733-11ea-8ae8-08de5d0795bb.png&quot; alt=&quot;email-axios&quot; style=&quot;zoo
        
      
      </description>
      
      
      <content:encoded><![CDATA[<img src="https://user-images.githubusercontent.com/31315644/68863936-a28b8300-0733-11ea-8ae8-08de5d0795bb.png" alt="email-axios" style="zoom:50%;"><hr><h2 id="TODO-LIST-FULL-VERSION-axios"><a href="#TODO-LIST-FULL-VERSION-axios" class="headerlink" title="TODO LIST FULL VERSION - axios"></a>TODO LIST FULL VERSION - axios</h2><h3 id="Ajax-란"><a href="#Ajax-란" class="headerlink" title="Ajax 란?"></a>Ajax 란?</h3><blockquote><p>JavaScript를 사용한 비동기 통신, 클라이언트와 서버간에 XML 데이터를 주고받는 기술.</p></blockquote><p>Ajax 요청 방법 3가지</p><ol><li>XMLHttpRequest</li><li>Axios</li><li>fetch</li></ol><hr><h3 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h3><img src="https://user-images.githubusercontent.com/31315644/68789904-aebb0600-0689-11ea-9c3f-116a5f08b61b.jpeg" alt="todoFolder구조" style="zoom: 33%;"><ol><li><p><a href="#a1">package.json</a></p></li><li><p><a href="#a2">.eslintrc.js</a></p></li><li><p><a href="#a3">app.js 서버</a></p><p><strong>public폴더 ▼</strong></p></li><li><p><a href="#a4">index.html</a></p></li><li><p><a href="#a5">css/style.css</a></p></li><li><p><a href="#a6">js/03axios.js</a></p></li></ol><hr><ul><li><code>package.json</code> <a id="a1"></a></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"server"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"start"</span>: <span class="string">"nodemon app"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"keywords"</span>: [],</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"express"</span>: <span class="string">"^4.17.1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"eslint"</span>: <span class="string">"^6.6.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-config-airbnb-base"</span>: <span class="string">"^14.0.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-plugin-html"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-plugin-import"</span>: <span class="string">"^2.18.2"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><ul><li><code>.eslintrc.js</code> <a id="a2"></a></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  "parserOptions": &#123;</span><br><span class="line">    "ecmaVersion": 9</span><br><span class="line">  &#125;,</span><br><span class="line">  "env": &#123;</span><br><span class="line">    "browser": true,</span><br><span class="line">    "commonjs": true,</span><br><span class="line">    "node": true,</span><br><span class="line">    "jquery": true</span><br><span class="line">  &#125;,</span><br><span class="line">  "extends": "airbnb-base",</span><br><span class="line">  "plugins": [ "import", "html" ],</span><br><span class="line">  "rules": &#123;</span><br><span class="line">    // "off" or 0 - turn the rule off</span><br><span class="line">    // "warn" or 1 - turn the rule on as a warning (doesn’t affect exit code)</span><br><span class="line">    // "error" or 2 - turn the rule on as an error (exit code is 1 when triggered)</span><br><span class="line">    // "no-var": 0,</span><br><span class="line">    "prefer-arrow-callback": 0,</span><br><span class="line">    "no-console": 0,  // "warn"</span><br><span class="line">    "no-plusplus": "off",  // x</span><br><span class="line">    "vars-on-top": 0,  // x</span><br><span class="line">    "eqeqeq": 0,</span><br><span class="line">    "quotes": [ "error", "single" ],</span><br><span class="line">    "no-underscore-dangle": "warn",</span><br><span class="line">    // "no-plusplus": [ "error", &#123; "allowForLoopAfterthoughts": true &#125;],</span><br><span class="line">    "comma-dangle": [ "error", "never"],</span><br><span class="line">    "no-nested-ternary": 0,</span><br><span class="line">    "no-param-reassign": 0,</span><br><span class="line">    "no-return-assign" : 0,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br><ul><li><code>app.js</code> 서버 <a id="a3"></a></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// express 패키지(모듈)를 가지고 온다.</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> todos = [</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">content</span>: <span class="string">'HTML'</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">content</span>: <span class="string">'CSS'</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">content</span>: <span class="string">'Javascirpt'</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 루트 폴더의 이름을 퍼블릭으로 할거야.</span></span><br><span class="line"><span class="comment">// 미들웨어 딱 1번만 실행됨.</span></span><br><span class="line">app.use(express.static(<span class="string">'public'</span>));</span><br><span class="line">app.use(express.json());</span><br><span class="line">app.use(express.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">true</span> &#125;)); <span class="comment">// for parsing</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// app.get('/', (req, res) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   res.send('hello world!');</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/todos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  todos.sort(<span class="function">(<span class="params">t1, t2</span>) =&gt;</span> t2.id - t1.id);</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">'/todos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(req.body);</span><br><span class="line">  todos = [req.body, ...todos];</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// app.patch('/todos/:id([0-9])', (req, res) =&gt; &#123;</span></span><br><span class="line">app.patch(<span class="string">'/todos/:id'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = req.params; <span class="comment">// req.params.id</span></span><br><span class="line">  <span class="keyword">const</span> &#123; completed &#125; = req.body; <span class="comment">// req.body.completed;</span></span><br><span class="line">  todos = todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> (todo.id === +id ? &#123; ...todo, completed &#125; : todo));</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.delete(<span class="string">'/todos/:id'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = req.params; <span class="comment">// req.params.id</span></span><br><span class="line">  todos = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id !== +id);</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.delete(<span class="string">'/completedTodos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  todos = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> !todo.completed);</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.patch(<span class="string">'/todos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; completed &#125; = req.body;</span><br><span class="line">  todos = todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> (&#123; ...todo, completed &#125;));</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Server listening on port 3000'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br><ul><li><code>index.html</code> <a id="a4"></a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"ko"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Todos 2.0<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"./css/style.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">  &lt;&lt;script defer src="./js/01promise.js"&gt;&lt;/script&gt;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">defer</span> <span class="attr">src</span>=<span class="string">"./js/04async.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>Todos<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ver"</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"input-todo"</span> <span class="attr">placeholder</span>=<span class="string">"What needs to be done?"</span> <span class="attr">autofocus</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"all"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>All<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"active"</span>&gt;</span>Active<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"completed"</span>&gt;</span>Completed<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"todos"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;li id="myId" class="todo-item"&gt;</span></span><br><span class="line"><span class="comment">        &lt;input class="checkbox" type="checkbox" id="ck-myId"&gt;</span></span><br><span class="line"><span class="comment">        &lt;label for="ck-myId"&gt;HTML&lt;/label&gt;</span></span><br><span class="line"><span class="comment">        &lt;i class="remove-todo far fa-times-circle"&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="comment">      &lt;/li&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"complete-all"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"checkbox"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"ck-complete-all"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"ck-complete-all"</span>&gt;</span>Mark all as complete<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clear-completed"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span>Clear completed (<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"completed-todos"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">strong</span> <span class="attr">class</span>=<span class="string">"active-todos"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> items left</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><ul><li><code>css/style.css</code> <a id="a5"></a></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> url(<span class="string">'https://fonts.googleapis.com/css?family=Roboto:100,300,400,700|Noto+Sans+KR'</span>);</span><br><span class="line">@<span class="keyword">import</span> url(<span class="string">'https://use.fontawesome.com/releases/v5.5.0/css/all.css'</span>);</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'Roboto'</span>, <span class="string">'Noto Sans KR'</span>, sans-serif;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.9em</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#a9b0b4</span>; <span class="comment">/*#58666e;*/</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#505455</span>;<span class="comment">/*#f0f3f4;*/</span></span><br><span class="line">  <span class="attribute">-webkit-font-smoothing</span>: antialiased;</span><br><span class="line">  <span class="attribute">-moz-osx-font-smoothing</span>: grayscale;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">750px</span>;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">450px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.title</span> &#123;</span><br><span class="line">  <span class="comment">/* margin: 10px 0; */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">4.5em</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">100</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ver</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">100</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .input-todo  */</span></span><br><span class="line"><span class="selector-class">.input-todo</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">45px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.3333333</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#e7ecee</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">transition</span>: border-color ease-in-out .<span class="number">15s</span>,box-shadow ease-in-out .<span class="number">15s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.input-todo</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">1px</span> <span class="number">1px</span> <span class="built_in">rgba</span>(0, 0, 0, 0.075), <span class="number">0</span> <span class="number">0</span> <span class="number">8px</span> <span class="built_in">rgba</span>(102, 175, 233, 0.6);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.input-todo</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .nav */</span></span><br><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> &gt; <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> &gt; <span class="selector-tag">li</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todos</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .todo-item */</span></span><br><span class="line"><span class="selector-class">.todo-item</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="comment">/* display: block; */</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: -<span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#e7ecee</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">:first-child</span> &#123;</span><br><span class="line">  <span class="attribute">border-top-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">border-top-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">border-bottom-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  .checkbox</span></span><br><span class="line"><span class="comment">  .checkbox 바로 뒤에 위치한 label의 before와 after를 사용해</span></span><br><span class="line"><span class="comment">  .checkbox의 외부 박스와 내부 박스를 생성한다.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  &lt;input class="checkbox" type="checkbox" id="myId"&gt;</span></span><br><span class="line"><span class="comment">  &lt;label for="myId"&gt;Content&lt;/label&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span> + <span class="selector-tag">label</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute; <span class="comment">/* 부모 위치를 기준으로 */</span></span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">2em</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">35px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">user-select</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span> + <span class="selector-tag">label</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#cfdadd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span><span class="selector-pseudo">:checked</span> + <span class="selector-tag">label</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .remove-todo button */</span></span><br><span class="line"><span class="selector-class">.remove-todo</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* todo-item이 호버 상태이면 삭제 버튼을 활성화 */</span></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">:hover</span> &gt; <span class="selector-class">.remove-todo</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.complete-all</span>, <span class="selector-class">.clear-completed</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">flex-basis</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clear-completed</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: right;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1px</span> <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: .<span class="number">8em</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#e6e6e6</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#adadad</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><ul><li><code>js/03axios.js</code> <a id="a6"></a></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> todos = [];</span><br><span class="line"><span class="keyword">let</span> navId = <span class="string">'all'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> $todos = <span class="built_in">document</span>.querySelector(<span class="string">'.todos'</span>);</span><br><span class="line"><span class="keyword">const</span> $inputTodo = <span class="built_in">document</span>.querySelector(<span class="string">'.input-todo'</span>);</span><br><span class="line"><span class="keyword">const</span> $nav = <span class="built_in">document</span>.querySelector(<span class="string">'.nav'</span>);</span><br><span class="line"><span class="keyword">const</span> $clearCompleted = <span class="built_in">document</span>.querySelector(<span class="string">'.clear-completed &gt; .btn'</span>);</span><br><span class="line"><span class="keyword">const</span> $completeAll = <span class="built_in">document</span>.querySelector(<span class="string">'.complete-all'</span>);</span><br><span class="line"><span class="keyword">const</span> $completedTodos = <span class="built_in">document</span>.querySelector(<span class="string">'.completed-todos'</span>);</span><br><span class="line"><span class="keyword">const</span> $activeTodos = <span class="built_in">document</span>.querySelector(<span class="string">'.active-todos'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ajax = <span class="function">(<span class="params">(</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> request = <span class="function">(<span class="params">method, url, payload</span>) =&gt;</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    xhr.open(method, url);</span><br><span class="line">    xhr.setRequestHeader(<span class="string">'Content-type'</span>, <span class="string">'application/json'</span>);</span><br><span class="line">    xhr.send(<span class="built_in">JSON</span>.stringify(payload));</span><br><span class="line"></span><br><span class="line">    xhr.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (xhr.status === <span class="number">200</span> || xhr.status === <span class="number">201</span>) &#123;</span><br><span class="line">        resolve(<span class="built_in">JSON</span>.parse(xhr.response));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    xhr.onerror = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      reject(xhr.status);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="keyword">get</span>(url) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'GET'</span>, url);</span><br><span class="line">    &#125;,</span><br><span class="line">    post(url, payload) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'POST'</span>, url, payload);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">delete</span>(url) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'DELETE'</span>, url);</span><br><span class="line">    &#125;,</span><br><span class="line">    patch(url, payload) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'PATCH'</span>, url, payload);</span><br><span class="line">    &#125;,</span><br><span class="line">    put(url, payload) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'PUT'</span>, url, payload);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 렌더</span></span><br><span class="line"><span class="keyword">const</span> render = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> html = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">const</span> _todos = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> (navId === <span class="string">'all'</span> ? <span class="literal">true</span> : navId === <span class="string">'active'</span> ? !todo.completed : todo.completed));</span><br><span class="line"></span><br><span class="line">  _todos.forEach(<span class="function">(<span class="params">&#123; id, content, completed &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    html += <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;li id="<span class="subst">$&#123;id&#125;</span>" class="todo-item"&gt;</span></span><br><span class="line"><span class="string">      &lt;input class="checkbox" type="checkbox" id="ck-<span class="subst">$&#123;id&#125;</span>" <span class="subst">$&#123;completed ? <span class="string">'checked'</span> : <span class="string">''</span>&#125;</span>&gt;</span></span><br><span class="line"><span class="string">      &lt;label for="ck-<span class="subst">$&#123;id&#125;</span>"&gt;<span class="subst">$&#123;content&#125;</span>&lt;/label&gt;</span></span><br><span class="line"><span class="string">      &lt;button class="remove-todo"&gt;X&lt;/button&gt;</span></span><br><span class="line"><span class="string">    &lt;/li&gt;`</span>;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  $completedTodos.textContent = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.completed).length;</span><br><span class="line">  $activeTodos.textContent = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> !todo.completed).length;</span><br><span class="line">  $todos.innerHTML = html;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 기능</span></span><br><span class="line"><span class="keyword">const</span> findMaxId = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">Math</span>.max(<span class="number">0</span>, ...todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id)) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 이벤트 함수</span></span><br><span class="line"><span class="keyword">const</span> getTodos = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  ajax.get(<span class="string">'./todos'</span>)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>) =&gt;</span> todos = res)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> addTodos = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> todo = &#123; <span class="attr">id</span>: findMaxId(), <span class="attr">content</span>: $inputTodo.value, <span class="attr">completed</span>: <span class="literal">false</span> &#125;;</span><br><span class="line">  ajax.post(<span class="string">'./todos'</span>, todo)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>) =&gt;</span> todos = res)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line">  $inputTodo.value = <span class="string">''</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> removeTodo = <span class="function">(<span class="params">id</span>) =&gt;</span> &#123;</span><br><span class="line">  ajax.delete(<span class="string">`./todos/<span class="subst">$&#123;id&#125;</span>`</span>)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>) =&gt;</span> todos = res)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> toggleTodo = <span class="function">(<span class="params">id</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> completed = !todos.find(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id === +id).completed;</span><br><span class="line">  ajax.patch(<span class="string">`/todos/<span class="subst">$&#123;id&#125;</span>`</span>, &#123; completed &#125;)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>) =&gt;</span> todos = res)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> toggleAll = <span class="function">(<span class="params">completed</span>) =&gt;</span> &#123;</span><br><span class="line">  ajax.patch(<span class="string">'./todos'</span>, &#123; completed &#125;)</span><br><span class="line">    .then(<span class="function">(<span class="params">_todos</span>) =&gt;</span> todos = _todos)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.error(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> clearTodos = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  ajax.delete(<span class="string">'./completedTodos'</span>)</span><br><span class="line">    .then(<span class="function">(<span class="params">_todos</span>) =&gt;</span> todos = _todos)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.error(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> changeNav = <span class="function">(<span class="params">li</span>) =&gt;</span> &#123;</span><br><span class="line">  [...$nav.children].forEach(<span class="function">(<span class="params">$list</span>) =&gt;</span> &#123;</span><br><span class="line">    $list.classList.toggle(<span class="string">'active'</span>, $list === li);</span><br><span class="line">  &#125;);</span><br><span class="line">  navId = li.id;</span><br><span class="line">  render();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 이벤트</span></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  getTodos();</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'promise'</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$inputTodo.onkeyup = <span class="function">(<span class="params">&#123; target, keyCode &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (keyCode !== <span class="number">13</span> || target.value.trim() === <span class="string">''</span>) <span class="keyword">return</span>;</span><br><span class="line">  addTodos();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$todos.onclick = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!target.classList.contains(<span class="string">'remove-todo'</span>)) <span class="keyword">return</span>;</span><br><span class="line">  removeTodo(target.parentNode.id);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$todos.onchange = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  toggleTodo(target.parentNode.id);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$completeAll.onchange = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  toggleAll(target.checked);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$clearCompleted.onclick = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  clearTodos();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$nav.onclick = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (target.classList.contains(<span class="string">'nav'</span>)) <span class="keyword">return</span>;</span><br><span class="line">  changeNav(target);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/16/daily41/#disqus_thread</comments>
    </item>
    
    <item>
      <title>javascript-study-26</title>
      <link>http://yoursite.com/2019/11/15/javascript-study-26/</link>
      <guid>http://yoursite.com/2019/11/15/javascript-study-26/</guid>
      <pubDate>Fri, 15 Nov 2019 13:51:53 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/31315644/65933403-536fe400-e44c-11e9-981d-c4e8c1f86998.png&quot; alt=&quot;JavaScriptBanner&quot;&gt;&lt;/
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/31315644/65933403-536fe400-e44c-11e9-981d-c4e8c1f86998.png" alt="JavaScriptBanner"></p><hr><h2 id="JavaScript-Study-26"><a href="#JavaScript-Study-26" class="headerlink" title="JavaScript Study 26"></a>JavaScript Study 26</h2><ul><li>모듈<ul><li>ES6 모듈</li><li>export 키워드</li><li>import 키워드</li></ul></li><li>Babel과 Webpack을 이용한 ES6 환경 구축<ul><li>npm 패키지 설치시 –save-dev 옵션</li><li>babel-polyfill</li><li>.babelrc 설정 파일 </li><li>Webpack</li><li>webpack.config.js 설정 파일</li></ul></li></ul><br><hr><br><h3 id="용어-러버덕"><a href="#용어-러버덕" class="headerlink" title="용어 - ( 러버덕 )"></a>용어 - ( 러버덕 )</h3><ul><li><p>모듈</p></li><li><p>Babel</p></li><li><p>Webpack</p><br></li></ul><hr><h2 id="모듈"><a href="#모듈" class="headerlink" title="모듈"></a>모듈</h2><p> JS의 가장 큰 단점은 모듈이 존재하지 않는다는 것.</p><p>예를들어, script태그를 여러개 이용해서 서로 다른 .js 을 불러들인 다면 js간의 충돌을 야기할 수 있다.</p><p>이유는 모든 스크립트의 JS파일은 전역스코프를 공유하기 때문이다.</p><blockquote><p>모듈은 파일 단위로 분리 되어있다.</p><p>이러한 모듈들은 독자적인 스코프를 나눠진다.</p><p>스코프들간에 서로 통신하기 위해서는 export , import를 이용한다.</p><p>API들은 모듈패턴으로 구성된 코드들이다.</p></blockquote><p>함수 : 전역 스코프 내에서 재사용과 가독성을 높이는 코드의 조합, 입력을 받고 출력을 내보내는 일련의 과정</p><p>모듈 : 파일 스코프 내에서 재사용과 가독성을 높이는 코드의 조합 (export. import)</p><p>ES6 모듈 : ESM =&gt; script 태그의 일부로 사용 (현업에 안쓰임)</p><p>JS의 모듈 : CommonJs(동기식) , AMD(Asynchronous Module Definition)(비동기식)</p><p>모듈을 한파일로 번들링하는 Babel + Webpack을 이용하여 사용한다.</p><p>번들링(여러개의 파일을 하나로 모음) 하는 이유</p><ol><li>script파일이 여러군데 흩어져있을 경우 문제가 생기므로 하나로 합쳐서 문제를 방지한다.</li><li>크로스 브라우징을 하기 위해서 ( Babel ) :  폴리필하여 구현함. 폴리필은 웹 개발에서 기능을 지원하지 않는 웹 브라우저 상의 기능을 구현하는 코드를 뜻한다.</li><li>모든 리소스를 전부 번들링이 가능하다.( 분리해서 번들링 하는 것도 가능함. )</li></ol><br><h3 id="ES6-모듈"><a href="#ES6-모듈" class="headerlink" title="ES6 모듈"></a>ES6 모듈</h3><p>script 태그에 <code>type=&quot;module&quot;</code> 어트리뷰트를 추가하면 로드된 자바스크립트 파일은 모듈로서 동작한다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span> <span class="attr">src</span>=<span class="string">"lib.mjs"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span> <span class="attr">src</span>=<span class="string">"app.mjs"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>ES6 모듈의 파일 확장자는 모듈임을 명확히 하기 위해 mjs를 사용하도록 권장한다.</p><p>.mjs를 사용하게 되면 script는 자동으로 defer로 동작하게 되며 module 엄격모드(Strict Mode)로 한다.</p><p>그냥 .js 확장자를 이용해도 사용은 가능하다.</p><br><h3 id="export-키워드"><a href="#export-키워드" class="headerlink" title="export 키워드"></a>export 키워드</h3><ul><li>모듈은 독자적인 모듈 스코프를 갖기 때문에 모듈 안에 선언한 모든 식별자는 기본적으로 해당 모듈 내부에서만 참조할 수 있다. </li><li>만약 모듈 안에 선언한 식별자를 외부에 공개하여 다른 모듈들이 참조할 수 있게 하고 싶다면 export 키워드를 사용한다. </li><li>선언된 변수, 함수, 클래스 모두 export할 수 있다.</li><li>모듈을 공개하려면 선언문 앞에 export 키워드를 사용한다. </li><li>여러 개를 export할 수 있는데 이때 각각의 export는 이름으로 구별할 수 있다.</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lib.mjs</span></span><br><span class="line"><span class="comment">// 변수의 공개</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> pi = <span class="built_in">Math</span>.PI;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 함수의 공개</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">square</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 클래스의 공개</span></span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(name) &#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>선언문 앞에 매번 export 키워드를 붙이는 것이 싫다면 export 대상을 모아 하나의 객체로 구성하여 한번에 export할 수도 있다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lib.mjs</span></span><br><span class="line"><span class="keyword">const</span> pi = <span class="built_in">Math</span>.PI;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">square</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(name) &#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 변수, 함수 클래스를 하나의 객체로 구성하여 공개</span></span><br><span class="line"><span class="keyword">export</span> &#123; pi, square, Person &#125;;</span><br></pre></td></tr></table></figure><p>모듈에서 하나만을 export할 때는 default 키워드를 사용할 수 있다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lib.mjs</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x * x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>다만, default를 사용하는 경우, var, let, const는 사용할 수 없다.</strong></p><p>defualt를 import 할 때는 식별자만 적어주면 되기 떄문에 간편한다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sqaure <span class="keyword">from</span> <span class="string">'./lib.mjs'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sqaure(<span class="number">10</span>)); <span class="comment">// 100</span></span><br></pre></td></tr></table></figure><br><h3 id="import-키워드"><a href="#import-키워드" class="headerlink" title="import 키워드"></a>import 키워드</h3><p>모듈에서 공개(export)한 대상을 로드하려면 import 키워드를 사용한다.</p><p>모듈이 export한 식별자로 import하며 ES6 모듈의 파일 확장자를 생략할 수 없다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.mjs</span></span><br><span class="line"><span class="comment">// 같은 폴더 내의 lib.mjs 모듈을 로드.</span></span><br><span class="line"><span class="comment">// lib.mjs 모듈이 export한 식별자로 import한다.</span></span><br><span class="line"><span class="comment">// ES6 모듈의 파일 확장자를 생략할 수 없다.</span></span><br><span class="line"><span class="keyword">import</span> &#123; pi, square, Person &#125; <span class="keyword">from</span> <span class="string">'./lib.mjs'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(pi);         <span class="comment">// 3.141592653589793</span></span><br><span class="line"><span class="built_in">console</span>.log(square(<span class="number">10</span>)); <span class="comment">// 100</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">new</span> Person(<span class="string">'Lee'</span>)); <span class="comment">// Person &#123; name: 'Lee' &#125;</span></span><br></pre></td></tr></table></figure><br><h2 id="Babel과-Webpack을-이용한-ES6-환경-구축"><a href="#Babel과-Webpack을-이용한-ES6-환경-구축" class="headerlink" title="Babel과 Webpack을 이용한 ES6 환경 구축"></a>Babel과 Webpack을 이용한 ES6 환경 구축</h2><p>참고 : <a href="https://poiemaweb.com/es6-babel-webpack-1" target="_blank" rel="noopener">https://poiemaweb.com/es6-babel-webpack-1</a> , <a href="https://poiemaweb.com/es6-babel-webpack-2" target="_blank" rel="noopener">https://poiemaweb.com/es6-babel-webpack-2</a></p><p>현재 대부분의 브라우저가 ES6를 지원하고 있지만 IE 혹은 몇 브라우저는 지원을 안하고 있기도 하다. 따라서 이러한 문제를 해결하기 위해서 Babel과 Webpack을 사용한다.</p><p>추가적으로 ES6 의 모듈 기능보다는 Webpack의 모듈 번들러 기능이 더 유용해서 Webpack을 이용한다.</p><p>ES6의 모듈을 사용하지 않는 이유는 다음과 같다.</p><ul><li>IE를 포함한 구형 브라우저는 ES6 모듈을 지원하지 않는다.</li><li>브라우저의 ES6 모듈 기능을 사용하더라도 트랜스파일링이나 번들링이 필요하다.</li><li>아직 지원하지 않는 기능(Bare import 등)이 있다.</li><li>점차 해결되고는 있지만 아직 몇가지 이슈가 있다.</li></ul><p><strong>트랜스파일러(Transpiler) <a href="https://babeljs.io/" target="_blank" rel="noopener">Babel</a>과 모듈 번들러(Module bundler) <a href="https://webpack.js.org/" target="_blank" rel="noopener">Webpack</a>을 이용하여 ES6+ 개발환경을 구축한다.</strong></p><p>다시 정리하면</p><p><code>&lt;script&gt;</code> 태그를 그냥 사용할경우 해당 스크립트의 파일의 js들은 전역스코프를 가진다.<br>이러한 전역 스코프를 피하기 위해서 파일 스코프단위로 끊는 ES6의 모듈기능을 이용을 하는데  ES6의 모듈 기능은 우선 ES6에서만 가능하다는 점 때문에 하위 호환을 해줄 필요가 있는 <strong>트랜스파일러 Babel</strong>을 이용해야만 한다.<br>그리고 모듈화를 위해서는 <code>&lt;script&gt;</code> 파일이 점점 많아질 것이다. 이러한 현상은 네트웤 비용을 점차 늘리게 된다. 왜냐하면 각각의 js파일을 전부 불러들어야만 하기 때문이다. 그렇다고 js파일을 한개로 모으자니 모듈화의 의미가 없기 때문에 이것 조차 안된다. 이러한 현상을 막기 위해서 <strong>번들러 Webpack</strong>을 이용해야만 한다. 웹팩은 js, css를 묶어서 하나의 파일들로 만들어준다.</p><br><h3 id="npm-패키지-설치시-–save-dev-옵션"><a href="#npm-패키지-설치시-–save-dev-옵션" class="headerlink" title="npm 패키지 설치시 –save-dev 옵션"></a>npm 패키지 설치시 –save-dev 옵션</h3><p>–save-dev : 이 옵션으로 npm 설치 시 그냥 dependencies가 아니라 devDependencies가 생긴다.</p><p>두개의 차이는 실제로 서버에서 사용해야하는지 와 사용을 하지 말아햐하는지의 차이다. </p><p>예를들어 eslint같은 것은 개발자를 위한 패키지 모듈인데 굳이 본서버에 올려서 노드모듈에 추가할 필요가 없다. 단지 개발을 쉽게하기 위한 툴이기 때문이다. 이러한 패키지들은 –save-dev로 설치하고 이러한 툴이 필요없는 패키지들은 해당 옵션을 사용하지 않는다.</p><br><h3 id="babel-polyfill"><a href="#babel-polyfill" class="headerlink" title="babel-polyfill"></a>babel-polyfill</h3><p>Babel을 사용하여 ES6+코드를 하위버전으로 트랜스파일링 했다고 가정하자.</p><p>그런데도 ES6 문법 Promise, Object.assign, Array, from 등과 같은 문법은 하위버전에서 대체할만한 수단이 존재하지 않는다. </p><p>따라서 babel로 트랜스파일링을 해도 위 문법들은 그대로 남아있다. 이런 문제들은 polyfill을 사용해서 구현해야만 한다.</p><p>polyfill이란? 기능을 지원하지 않는 웹 브라우저 상의 기능을 구현하는 코드를 의미한다.</p><br><h3 id="babelrc-설정-파일"><a href="#babelrc-설정-파일" class="headerlink" title=".babelrc 설정 파일"></a>.babelrc 설정 파일</h3><p>Babel을 사용하려면 <code>@babel/preset-env</code>을 설치해야 한다. <a href="https://babeljs.io/docs/plugins/preset-env/" target="_blank" rel="noopener">@babel/preset-env</a>은 함께 사용되어야 하는 Babel 플러그인을 모아 둔 것으로 <a href="https://babeljs.io/docs/en/presets" target="_blank" rel="noopener">Babel 프리셋</a>이라고 부른다. Babel이 제공하는 공식 Babel 프리셋(Official Preset)은 아래와 같다.</p><ul><li><a href="https://babeljs.io/docs/en/babel-preset-env" target="_blank" rel="noopener">@babel/preset-env</a></li><li><a href="https://babeljs.io/docs/en/babel-preset-flow" target="_blank" rel="noopener">@babel/preset-flow</a></li><li><a href="https://babeljs.io/docs/en/babel-preset-react" target="_blank" rel="noopener">@babel/preset-react</a></li><li><a href="https://babeljs.io/docs/en/babel-preset-typescript" target="_blank" rel="noopener">@babel/preset-typescript</a></li></ul><p><code>@babel/preset-env</code>도 공식 프리셋의 하나이며 필요한 플러그인 들을 프로젝트 지원 환경에 맞춰서 동적으로 결정해 준다. 프로젝트 지원 환경은 <a href="https://github.com/browserslist/browserslist" target="_blank" rel="noopener">Browserslist</a> 형식으로 .browserslistrc 파일에 상세히 설정할 수 있다. 프로젝트 지원 환경 설정 작업을 생략하면 기본값으로 설정된다.</p><br><h3 id="Webpack"><a href="#Webpack" class="headerlink" title="Webpack"></a>Webpack</h3><p>Webpack은 의존관계에 있는 모듈들을 하나의 자바스크립트 파일로 번들링하는 모듈 번들러이다.</p><p>Webpack을 사용하면 의존 모듈이 하나의 파일로 번들링되므로 별도의 모듈로더가 필요없다.</p><p><strong>다수의 자바스크립트 파일을 하나의 파일로 번들링하므로 html 파일에서 script 태그로 다수의 자바스크립트 파일을 로드해야 하는 번거로움도 사라진다.</strong></p><br><h3 id="webpack-config-js-설정-파일"><a href="#webpack-config-js-설정-파일" class="headerlink" title="webpack.config.js 설정 파일"></a>webpack.config.js 설정 파일</h3><p>webpack.config.js은 Webpack이 실행될 때 참조하는 설정 파일이다. </p><p>프로젝트 루트에 webpack.config.js 파일을 생성하고 아래처럼 작성한다. (예)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">// enntry file</span></span><br><span class="line">  entry: [<span class="string">'@babel/polyfill'</span>, <span class="string">'./src/js/main.js'</span>],</span><br><span class="line">  <span class="comment">// 컴파일 + 번들링된 js 파일이 저장될 경로와 이름 지정</span></span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.resolve(__dirname, <span class="string">'dist/js'</span>),</span><br><span class="line">    filename: <span class="string">'bundle.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">        include: [</span><br><span class="line">          path.resolve(__dirname, <span class="string">'src/js'</span>)</span><br><span class="line">        ],</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        use: &#123;</span><br><span class="line">          loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">          options: &#123;</span><br><span class="line">            presets: [<span class="string">'@babel/preset-env'</span>],</span><br><span class="line">            plugins: [<span class="string">'@babel/plugin-proposal-class-properties'</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  devtool: <span class="string">'source-map'</span>,</span><br><span class="line">  <span class="comment">// https://webpack.js.org/concepts/mode/#mode-development</span></span><br><span class="line">  mode: <span class="string">'development'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol><li>entry: [‘@babel/polyfill’, ‘./src/js/main.js’] : 이 코드는 해당 위치에 있는 파일을 번들링 하겠다는 의미다.</li><li>output: {<br>path: path.resolve(__dirname, ‘dist/js’),<br>filename: ‘bundle.js’<br>} : path는 위치를 의미한다. 즉, dist/js에 bundle.js라는 의미로 번들링 파일이 생성된다.</li></ol><br>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/15/javascript-study-26/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList fetch</title>
      <link>http://yoursite.com/2019/11/15/daily40/</link>
      <guid>http://yoursite.com/2019/11/15/daily40/</guid>
      <pubDate>Fri, 15 Nov 2019 02:17:56 GMT</pubDate>
      <description>
      
        
        
          &lt;img src=&quot;https://user-images.githubusercontent.com/31315644/68863928-a0292900-0733-11ea-9784-8eab3512c70b.png&quot; alt=&quot;email-fetch&quot; style=&quot;zoo
        
      
      </description>
      
      
      <content:encoded><![CDATA[<img src="https://user-images.githubusercontent.com/31315644/68863928-a0292900-0733-11ea-9784-8eab3512c70b.png" alt="email-fetch" style="zoom:50%;"><hr><h2 id="TODO-LIST-FULL-VERSION-fetch"><a href="#TODO-LIST-FULL-VERSION-fetch" class="headerlink" title="TODO LIST FULL VERSION - fetch"></a>TODO LIST FULL VERSION - fetch</h2><h3 id="Ajax-란"><a href="#Ajax-란" class="headerlink" title="Ajax 란?"></a>Ajax 란?</h3><blockquote><p>JavaScript를 사용한 비동기 통신, 클라이언트와 서버간에 XML 데이터를 주고받는 기술.</p></blockquote><p>Ajax 요청 방법 3가지</p><ol><li>XMLHttpRequest</li><li>Axios</li><li>fetch</li></ol><hr><h3 id="fetch"><a href="#fetch" class="headerlink" title="fetch"></a>fetch</h3><img src="https://user-images.githubusercontent.com/31315644/68789904-aebb0600-0689-11ea-9c3f-116a5f08b61b.jpeg" alt="todoFolder구조" style="zoom: 33%;"><ol><li><p><a href="#a1">package.json</a></p></li><li><p><a href="#a2">.eslintrc.js</a></p></li><li><p><a href="#a3">app.js 서버</a></p><p><strong>public폴더 ▼</strong></p></li><li><p><a href="#a4">index.html</a></p></li><li><p><a href="#a5">css/style.css</a></p></li><li><p><a href="#a6">js/02fetch.js</a></p></li></ol><hr><ul><li><code>package.json</code> <a id="a1"></a></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"server"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"start"</span>: <span class="string">"nodemon app"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"keywords"</span>: [],</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"express"</span>: <span class="string">"^4.17.1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"eslint"</span>: <span class="string">"^6.6.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-config-airbnb-base"</span>: <span class="string">"^14.0.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-plugin-html"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-plugin-import"</span>: <span class="string">"^2.18.2"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><ul><li><code>.eslintrc.js</code> <a id="a2"></a></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  "parserOptions": &#123;</span><br><span class="line">    "ecmaVersion": 9</span><br><span class="line">  &#125;,</span><br><span class="line">  "env": &#123;</span><br><span class="line">    "browser": true,</span><br><span class="line">    "commonjs": true,</span><br><span class="line">    "node": true,</span><br><span class="line">    "jquery": true</span><br><span class="line">  &#125;,</span><br><span class="line">  "extends": "airbnb-base",</span><br><span class="line">  "plugins": [ "import", "html" ],</span><br><span class="line">  "rules": &#123;</span><br><span class="line">    // "off" or 0 - turn the rule off</span><br><span class="line">    // "warn" or 1 - turn the rule on as a warning (doesn’t affect exit code)</span><br><span class="line">    // "error" or 2 - turn the rule on as an error (exit code is 1 when triggered)</span><br><span class="line">    // "no-var": 0,</span><br><span class="line">    "prefer-arrow-callback": 0,</span><br><span class="line">    "no-console": 0,  // "warn"</span><br><span class="line">    "no-plusplus": "off",  // x</span><br><span class="line">    "vars-on-top": 0,  // x</span><br><span class="line">    "eqeqeq": 0,</span><br><span class="line">    "quotes": [ "error", "single" ],</span><br><span class="line">    "no-underscore-dangle": "warn",</span><br><span class="line">    // "no-plusplus": [ "error", &#123; "allowForLoopAfterthoughts": true &#125;],</span><br><span class="line">    "comma-dangle": [ "error", "never"],</span><br><span class="line">    "no-nested-ternary": 0,</span><br><span class="line">    "no-param-reassign": 0,</span><br><span class="line">    "no-return-assign" : 0,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br><ul><li><code>app.js</code> 서버 <a id="a3"></a></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// express 패키지(모듈)를 가지고 온다.</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> todos = [</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">content</span>: <span class="string">'HTML'</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">content</span>: <span class="string">'CSS'</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">content</span>: <span class="string">'Javascirpt'</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 루트 폴더의 이름을 퍼블릭으로 할거야.</span></span><br><span class="line"><span class="comment">// 미들웨어 딱 1번만 실행됨.</span></span><br><span class="line">app.use(express.static(<span class="string">'public'</span>));</span><br><span class="line">app.use(express.json());</span><br><span class="line">app.use(express.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">true</span> &#125;)); <span class="comment">// for parsing</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// app.get('/', (req, res) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   res.send('hello world!');</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/todos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  todos.sort(<span class="function">(<span class="params">t1, t2</span>) =&gt;</span> t2.id - t1.id);</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">'/todos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(req.body);</span><br><span class="line">  todos = [req.body, ...todos];</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// app.patch('/todos/:id([0-9])', (req, res) =&gt; &#123;</span></span><br><span class="line">app.patch(<span class="string">'/todos/:id'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = req.params; <span class="comment">// req.params.id</span></span><br><span class="line">  <span class="keyword">const</span> &#123; completed &#125; = req.body; <span class="comment">// req.body.completed;</span></span><br><span class="line">  todos = todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> (todo.id === +id ? &#123; ...todo, completed &#125; : todo));</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.delete(<span class="string">'/todos/:id'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = req.params; <span class="comment">// req.params.id</span></span><br><span class="line">  todos = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id !== +id);</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.delete(<span class="string">'/completedTodos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  todos = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> !todo.completed);</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.patch(<span class="string">'/todos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; completed &#125; = req.body;</span><br><span class="line">  todos = todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> (&#123; ...todo, completed &#125;));</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Server listening on port 3000'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br><ul><li><code>index.html</code> <a id="a4"></a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"ko"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Todos 2.0<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"./css/style.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">  &lt;&lt;script defer src="./js/01promise.js"&gt;&lt;/script&gt;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">defer</span> <span class="attr">src</span>=<span class="string">"./js/04async.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>Todos<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ver"</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"input-todo"</span> <span class="attr">placeholder</span>=<span class="string">"What needs to be done?"</span> <span class="attr">autofocus</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"all"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>All<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"active"</span>&gt;</span>Active<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"completed"</span>&gt;</span>Completed<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"todos"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;li id="myId" class="todo-item"&gt;</span></span><br><span class="line"><span class="comment">        &lt;input class="checkbox" type="checkbox" id="ck-myId"&gt;</span></span><br><span class="line"><span class="comment">        &lt;label for="ck-myId"&gt;HTML&lt;/label&gt;</span></span><br><span class="line"><span class="comment">        &lt;i class="remove-todo far fa-times-circle"&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="comment">      &lt;/li&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"complete-all"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"checkbox"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"ck-complete-all"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"ck-complete-all"</span>&gt;</span>Mark all as complete<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clear-completed"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span>Clear completed (<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"completed-todos"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">strong</span> <span class="attr">class</span>=<span class="string">"active-todos"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> items left</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><ul><li><code>css/style.css</code> <a id="a5"></a></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> url(<span class="string">'https://fonts.googleapis.com/css?family=Roboto:100,300,400,700|Noto+Sans+KR'</span>);</span><br><span class="line">@<span class="keyword">import</span> url(<span class="string">'https://use.fontawesome.com/releases/v5.5.0/css/all.css'</span>);</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'Roboto'</span>, <span class="string">'Noto Sans KR'</span>, sans-serif;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.9em</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#a9b0b4</span>; <span class="comment">/*#58666e;*/</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#505455</span>;<span class="comment">/*#f0f3f4;*/</span></span><br><span class="line">  <span class="attribute">-webkit-font-smoothing</span>: antialiased;</span><br><span class="line">  <span class="attribute">-moz-osx-font-smoothing</span>: grayscale;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">750px</span>;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">450px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.title</span> &#123;</span><br><span class="line">  <span class="comment">/* margin: 10px 0; */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">4.5em</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">100</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ver</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">100</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .input-todo  */</span></span><br><span class="line"><span class="selector-class">.input-todo</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">45px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.3333333</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#e7ecee</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">transition</span>: border-color ease-in-out .<span class="number">15s</span>,box-shadow ease-in-out .<span class="number">15s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.input-todo</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">1px</span> <span class="number">1px</span> <span class="built_in">rgba</span>(0, 0, 0, 0.075), <span class="number">0</span> <span class="number">0</span> <span class="number">8px</span> <span class="built_in">rgba</span>(102, 175, 233, 0.6);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.input-todo</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .nav */</span></span><br><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> &gt; <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> &gt; <span class="selector-tag">li</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todos</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .todo-item */</span></span><br><span class="line"><span class="selector-class">.todo-item</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="comment">/* display: block; */</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: -<span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#e7ecee</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">:first-child</span> &#123;</span><br><span class="line">  <span class="attribute">border-top-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">border-top-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">border-bottom-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  .checkbox</span></span><br><span class="line"><span class="comment">  .checkbox 바로 뒤에 위치한 label의 before와 after를 사용해</span></span><br><span class="line"><span class="comment">  .checkbox의 외부 박스와 내부 박스를 생성한다.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  &lt;input class="checkbox" type="checkbox" id="myId"&gt;</span></span><br><span class="line"><span class="comment">  &lt;label for="myId"&gt;Content&lt;/label&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span> + <span class="selector-tag">label</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute; <span class="comment">/* 부모 위치를 기준으로 */</span></span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">2em</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">35px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">user-select</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span> + <span class="selector-tag">label</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#cfdadd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span><span class="selector-pseudo">:checked</span> + <span class="selector-tag">label</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .remove-todo button */</span></span><br><span class="line"><span class="selector-class">.remove-todo</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* todo-item이 호버 상태이면 삭제 버튼을 활성화 */</span></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">:hover</span> &gt; <span class="selector-class">.remove-todo</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.complete-all</span>, <span class="selector-class">.clear-completed</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">flex-basis</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clear-completed</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: right;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1px</span> <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: .<span class="number">8em</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#e6e6e6</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#adadad</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><ul><li><code>js/02fetch.js</code> <a id="a6"></a></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> todos = [];</span><br><span class="line"><span class="keyword">let</span> navId = <span class="string">'all'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> $todos = <span class="built_in">document</span>.querySelector(<span class="string">'.todos'</span>);</span><br><span class="line"><span class="keyword">const</span> $inputTodo = <span class="built_in">document</span>.querySelector(<span class="string">'.input-todo'</span>);</span><br><span class="line"><span class="keyword">const</span> $nav = <span class="built_in">document</span>.querySelector(<span class="string">'.nav'</span>);</span><br><span class="line"><span class="keyword">const</span> $clearCompleted = <span class="built_in">document</span>.querySelector(<span class="string">'.clear-completed &gt; .btn'</span>);</span><br><span class="line"><span class="keyword">const</span> $completeAll = <span class="built_in">document</span>.querySelector(<span class="string">'.complete-all'</span>);</span><br><span class="line"><span class="keyword">const</span> $completedTodos = <span class="built_in">document</span>.querySelector(<span class="string">'.completed-todos'</span>);</span><br><span class="line"><span class="keyword">const</span> $activeTodos = <span class="built_in">document</span>.querySelector(<span class="string">'.active-todos'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ajax = <span class="function">(<span class="params">(</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> request = <span class="function">(<span class="params">method, url, payload</span>) =&gt;</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    xhr.open(method, url);</span><br><span class="line">    xhr.setRequestHeader(<span class="string">'Content-type'</span>, <span class="string">'application/json'</span>);</span><br><span class="line">    xhr.send(<span class="built_in">JSON</span>.stringify(payload));</span><br><span class="line"></span><br><span class="line">    xhr.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (xhr.status === <span class="number">200</span> || xhr.status === <span class="number">201</span>) &#123;</span><br><span class="line">        resolve(<span class="built_in">JSON</span>.parse(xhr.response));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    xhr.onerror = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      reject(xhr.status);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="keyword">get</span>(url) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'GET'</span>, url);</span><br><span class="line">    &#125;,</span><br><span class="line">    post(url, payload) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'POST'</span>, url, payload);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">delete</span>(url) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'DELETE'</span>, url);</span><br><span class="line">    &#125;,</span><br><span class="line">    patch(url, payload) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'PATCH'</span>, url, payload);</span><br><span class="line">    &#125;,</span><br><span class="line">    put(url, payload) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'PUT'</span>, url, payload);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 렌더</span></span><br><span class="line"><span class="keyword">const</span> render = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> html = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">const</span> _todos = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> (navId === <span class="string">'all'</span> ? <span class="literal">true</span> : navId === <span class="string">'active'</span> ? !todo.completed : todo.completed));</span><br><span class="line"></span><br><span class="line">  _todos.forEach(<span class="function">(<span class="params">&#123; id, content, completed &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    html += <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;li id="<span class="subst">$&#123;id&#125;</span>" class="todo-item"&gt;</span></span><br><span class="line"><span class="string">      &lt;input class="checkbox" type="checkbox" id="ck-<span class="subst">$&#123;id&#125;</span>" <span class="subst">$&#123;completed ? <span class="string">'checked'</span> : <span class="string">''</span>&#125;</span>&gt;</span></span><br><span class="line"><span class="string">      &lt;label for="ck-<span class="subst">$&#123;id&#125;</span>"&gt;<span class="subst">$&#123;content&#125;</span>&lt;/label&gt;</span></span><br><span class="line"><span class="string">      &lt;button class="remove-todo"&gt;X&lt;/button&gt;</span></span><br><span class="line"><span class="string">    &lt;/li&gt;`</span>;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  $completedTodos.textContent = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.completed).length;</span><br><span class="line">  $activeTodos.textContent = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> !todo.completed).length;</span><br><span class="line">  $todos.innerHTML = html;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 기능</span></span><br><span class="line"><span class="keyword">const</span> findMaxId = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">Math</span>.max(<span class="number">0</span>, ...todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id)) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 이벤트 함수</span></span><br><span class="line"><span class="keyword">const</span> getTodos = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  ajax.get(<span class="string">'./todos'</span>)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>) =&gt;</span> todos = res)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> addTodos = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> todo = &#123; <span class="attr">id</span>: findMaxId(), <span class="attr">content</span>: $inputTodo.value, <span class="attr">completed</span>: <span class="literal">false</span> &#125;;</span><br><span class="line">  ajax.post(<span class="string">'./todos'</span>, todo)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>) =&gt;</span> todos = res)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line">  $inputTodo.value = <span class="string">''</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> removeTodo = <span class="function">(<span class="params">id</span>) =&gt;</span> &#123;</span><br><span class="line">  ajax.delete(<span class="string">`./todos/<span class="subst">$&#123;id&#125;</span>`</span>)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>) =&gt;</span> todos = res)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> toggleTodo = <span class="function">(<span class="params">id</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> completed = !todos.find(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id === +id).completed;</span><br><span class="line">  ajax.patch(<span class="string">`/todos/<span class="subst">$&#123;id&#125;</span>`</span>, &#123; completed &#125;)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>) =&gt;</span> todos = res)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> toggleAll = <span class="function">(<span class="params">completed</span>) =&gt;</span> &#123;</span><br><span class="line">  ajax.patch(<span class="string">'./todos'</span>, &#123; completed &#125;)</span><br><span class="line">    .then(<span class="function">(<span class="params">_todos</span>) =&gt;</span> todos = _todos)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.error(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> clearTodos = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  ajax.delete(<span class="string">'./completedTodos'</span>)</span><br><span class="line">    .then(<span class="function">(<span class="params">_todos</span>) =&gt;</span> todos = _todos)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.error(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> changeNav = <span class="function">(<span class="params">li</span>) =&gt;</span> &#123;</span><br><span class="line">  [...$nav.children].forEach(<span class="function">(<span class="params">$list</span>) =&gt;</span> &#123;</span><br><span class="line">    $list.classList.toggle(<span class="string">'active'</span>, $list === li);</span><br><span class="line">  &#125;);</span><br><span class="line">  navId = li.id;</span><br><span class="line">  render();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 이벤트</span></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  getTodos();</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'promise'</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$inputTodo.onkeyup = <span class="function">(<span class="params">&#123; target, keyCode &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (keyCode !== <span class="number">13</span> || target.value.trim() === <span class="string">''</span>) <span class="keyword">return</span>;</span><br><span class="line">  addTodos();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$todos.onclick = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!target.classList.contains(<span class="string">'remove-todo'</span>)) <span class="keyword">return</span>;</span><br><span class="line">  removeTodo(target.parentNode.id);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$todos.onchange = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  toggleTodo(target.parentNode.id);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$completeAll.onchange = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  toggleAll(target.checked);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$clearCompleted.onclick = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  clearTodos();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$nav.onclick = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (target.classList.contains(<span class="string">'nav'</span>)) <span class="keyword">return</span>;</span><br><span class="line">  changeNav(target);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/15/daily40/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList Promise</title>
      <link>http://yoursite.com/2019/11/14/daily39/</link>
      <guid>http://yoursite.com/2019/11/14/daily39/</guid>
      <pubDate>Thu, 14 Nov 2019 14:02:42 GMT</pubDate>
      <description>
      
        
        
          &lt;img src=&quot;https://user-images.githubusercontent.com/31315644/68863976-b1723580-0733-11ea-972a-1a5e8b7b4b1b.png&quot; alt=&quot;email-promise&quot; style=&quot;z
        
      
      </description>
      
      
      <content:encoded><![CDATA[<img src="https://user-images.githubusercontent.com/31315644/68863976-b1723580-0733-11ea-972a-1a5e8b7b4b1b.png" alt="email-promise" style="zoom:50%;"><hr><h2 id="TODO-LIST-FULL-VERSION-PROMISE-xhr"><a href="#TODO-LIST-FULL-VERSION-PROMISE-xhr" class="headerlink" title="TODO LIST FULL VERSION - PROMISE xhr"></a>TODO LIST FULL VERSION - PROMISE xhr</h2><h3 id="Ajax-란"><a href="#Ajax-란" class="headerlink" title="Ajax 란?"></a>Ajax 란?</h3><blockquote><p>JavaScript를 사용한 비동기 통신, 클라이언트와 서버간에 XML 데이터를 주고받는 기술.</p></blockquote><p>Ajax 요청 방법 3가지</p><ol><li>XMLHttpRequest</li><li>Axios</li><li>fetch</li></ol><hr><h3 id="PROMISE-XMLHttpRequest"><a href="#PROMISE-XMLHttpRequest" class="headerlink" title="PROMISE XMLHttpRequest"></a>PROMISE XMLHttpRequest</h3><img src="https://user-images.githubusercontent.com/31315644/68789904-aebb0600-0689-11ea-9c3f-116a5f08b61b.jpeg" alt="todoFolder구조" style="zoom: 33%;"><ol><li><p><a href="#a1">package.json</a></p></li><li><p><a href="#a2">.eslintrc.js</a></p></li><li><p><a href="#a3">app.js 서버</a></p><p><strong>public폴더 ▼</strong></p></li><li><p><a href="#a4">index.html</a></p></li><li><p><a href="#a5">css/style.css</a></p></li><li><p><a href="#a6">js/01promise.js</a></p></li></ol><hr><ul><li><code>package.json</code> <a id="a1"></a></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"server"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"start"</span>: <span class="string">"nodemon app"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"keywords"</span>: [],</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"express"</span>: <span class="string">"^4.17.1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"eslint"</span>: <span class="string">"^6.6.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-config-airbnb-base"</span>: <span class="string">"^14.0.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-plugin-html"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-plugin-import"</span>: <span class="string">"^2.18.2"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><ul><li><code>.eslintrc.js</code> <a id="a2"></a></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  "parserOptions": &#123;</span><br><span class="line">    "ecmaVersion": 9</span><br><span class="line">  &#125;,</span><br><span class="line">  "env": &#123;</span><br><span class="line">    "browser": true,</span><br><span class="line">    "commonjs": true,</span><br><span class="line">    "node": true,</span><br><span class="line">    "jquery": true</span><br><span class="line">  &#125;,</span><br><span class="line">  "extends": "airbnb-base",</span><br><span class="line">  "plugins": [ "import", "html" ],</span><br><span class="line">  "rules": &#123;</span><br><span class="line">    // "off" or 0 - turn the rule off</span><br><span class="line">    // "warn" or 1 - turn the rule on as a warning (doesn’t affect exit code)</span><br><span class="line">    // "error" or 2 - turn the rule on as an error (exit code is 1 when triggered)</span><br><span class="line">    // "no-var": 0,</span><br><span class="line">    "prefer-arrow-callback": 0,</span><br><span class="line">    "no-console": 0,  // "warn"</span><br><span class="line">    "no-plusplus": "off",  // x</span><br><span class="line">    "vars-on-top": 0,  // x</span><br><span class="line">    "eqeqeq": 0,</span><br><span class="line">    "quotes": [ "error", "single" ],</span><br><span class="line">    "no-underscore-dangle": "warn",</span><br><span class="line">    // "no-plusplus": [ "error", &#123; "allowForLoopAfterthoughts": true &#125;],</span><br><span class="line">    "comma-dangle": [ "error", "never"],</span><br><span class="line">    "no-nested-ternary": 0,</span><br><span class="line">    "no-param-reassign": 0,</span><br><span class="line">    "no-return-assign" : 0,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br><ul><li><code>app.js</code> 서버 <a id="a3"></a></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// express 패키지(모듈)를 가지고 온다.</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> todos = [</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">content</span>: <span class="string">'HTML'</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">content</span>: <span class="string">'CSS'</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">content</span>: <span class="string">'Javascirpt'</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 루트 폴더의 이름을 퍼블릭으로 할거야.</span></span><br><span class="line"><span class="comment">// 미들웨어 딱 1번만 실행됨.</span></span><br><span class="line">app.use(express.static(<span class="string">'public'</span>));</span><br><span class="line">app.use(express.json());</span><br><span class="line">app.use(express.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">true</span> &#125;)); <span class="comment">// for parsing</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// app.get('/', (req, res) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   res.send('hello world!');</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/todos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  todos.sort(<span class="function">(<span class="params">t1, t2</span>) =&gt;</span> t2.id - t1.id);</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">'/todos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(req.body);</span><br><span class="line">  todos = [req.body, ...todos];</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// app.patch('/todos/:id([0-9])', (req, res) =&gt; &#123;</span></span><br><span class="line">app.patch(<span class="string">'/todos/:id'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = req.params; <span class="comment">// req.params.id</span></span><br><span class="line">  <span class="keyword">const</span> &#123; completed &#125; = req.body; <span class="comment">// req.body.completed;</span></span><br><span class="line">  todos = todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> (todo.id === +id ? &#123; ...todo, completed &#125; : todo));</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.delete(<span class="string">'/todos/:id'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = req.params; <span class="comment">// req.params.id</span></span><br><span class="line">  todos = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id !== +id);</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.delete(<span class="string">'/completedTodos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  todos = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> !todo.completed);</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.patch(<span class="string">'/todos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; completed &#125; = req.body;</span><br><span class="line">  todos = todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> (&#123; ...todo, completed &#125;));</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Server listening on port 3000'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br><ul><li><code>index.html</code> <a id="a4"></a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"ko"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Todos 2.0<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"./css/style.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">  &lt;&lt;script defer src="./js/01promise.js"&gt;&lt;/script&gt;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">defer</span> <span class="attr">src</span>=<span class="string">"./js/04async.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>Todos<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ver"</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"input-todo"</span> <span class="attr">placeholder</span>=<span class="string">"What needs to be done?"</span> <span class="attr">autofocus</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"all"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>All<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"active"</span>&gt;</span>Active<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"completed"</span>&gt;</span>Completed<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"todos"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;li id="myId" class="todo-item"&gt;</span></span><br><span class="line"><span class="comment">        &lt;input class="checkbox" type="checkbox" id="ck-myId"&gt;</span></span><br><span class="line"><span class="comment">        &lt;label for="ck-myId"&gt;HTML&lt;/label&gt;</span></span><br><span class="line"><span class="comment">        &lt;i class="remove-todo far fa-times-circle"&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="comment">      &lt;/li&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"complete-all"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"checkbox"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"ck-complete-all"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"ck-complete-all"</span>&gt;</span>Mark all as complete<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clear-completed"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span>Clear completed (<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"completed-todos"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">strong</span> <span class="attr">class</span>=<span class="string">"active-todos"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> items left</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><ul><li><code>css/style.css</code> <a id="a5"></a></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> url(<span class="string">'https://fonts.googleapis.com/css?family=Roboto:100,300,400,700|Noto+Sans+KR'</span>);</span><br><span class="line">@<span class="keyword">import</span> url(<span class="string">'https://use.fontawesome.com/releases/v5.5.0/css/all.css'</span>);</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'Roboto'</span>, <span class="string">'Noto Sans KR'</span>, sans-serif;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.9em</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#a9b0b4</span>; <span class="comment">/*#58666e;*/</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#505455</span>;<span class="comment">/*#f0f3f4;*/</span></span><br><span class="line">  <span class="attribute">-webkit-font-smoothing</span>: antialiased;</span><br><span class="line">  <span class="attribute">-moz-osx-font-smoothing</span>: grayscale;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">750px</span>;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">450px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.title</span> &#123;</span><br><span class="line">  <span class="comment">/* margin: 10px 0; */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">4.5em</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">100</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ver</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">100</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .input-todo  */</span></span><br><span class="line"><span class="selector-class">.input-todo</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">45px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.3333333</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#e7ecee</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">transition</span>: border-color ease-in-out .<span class="number">15s</span>,box-shadow ease-in-out .<span class="number">15s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.input-todo</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">1px</span> <span class="number">1px</span> <span class="built_in">rgba</span>(0, 0, 0, 0.075), <span class="number">0</span> <span class="number">0</span> <span class="number">8px</span> <span class="built_in">rgba</span>(102, 175, 233, 0.6);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.input-todo</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .nav */</span></span><br><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> &gt; <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> &gt; <span class="selector-tag">li</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todos</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .todo-item */</span></span><br><span class="line"><span class="selector-class">.todo-item</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="comment">/* display: block; */</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: -<span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#e7ecee</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">:first-child</span> &#123;</span><br><span class="line">  <span class="attribute">border-top-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">border-top-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">border-bottom-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  .checkbox</span></span><br><span class="line"><span class="comment">  .checkbox 바로 뒤에 위치한 label의 before와 after를 사용해</span></span><br><span class="line"><span class="comment">  .checkbox의 외부 박스와 내부 박스를 생성한다.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  &lt;input class="checkbox" type="checkbox" id="myId"&gt;</span></span><br><span class="line"><span class="comment">  &lt;label for="myId"&gt;Content&lt;/label&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span> + <span class="selector-tag">label</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute; <span class="comment">/* 부모 위치를 기준으로 */</span></span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">2em</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">35px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">user-select</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span> + <span class="selector-tag">label</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#cfdadd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span><span class="selector-pseudo">:checked</span> + <span class="selector-tag">label</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .remove-todo button */</span></span><br><span class="line"><span class="selector-class">.remove-todo</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* todo-item이 호버 상태이면 삭제 버튼을 활성화 */</span></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">:hover</span> &gt; <span class="selector-class">.remove-todo</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.complete-all</span>, <span class="selector-class">.clear-completed</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">flex-basis</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clear-completed</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: right;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1px</span> <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: .<span class="number">8em</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#e6e6e6</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#adadad</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><ul><li><code>js/01promise.js</code> <a id="a6"></a></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> todos = [];</span><br><span class="line"><span class="keyword">let</span> navId = <span class="string">'all'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> $todos = <span class="built_in">document</span>.querySelector(<span class="string">'.todos'</span>);</span><br><span class="line"><span class="keyword">const</span> $inputTodo = <span class="built_in">document</span>.querySelector(<span class="string">'.input-todo'</span>);</span><br><span class="line"><span class="keyword">const</span> $nav = <span class="built_in">document</span>.querySelector(<span class="string">'.nav'</span>);</span><br><span class="line"><span class="keyword">const</span> $clearCompleted = <span class="built_in">document</span>.querySelector(<span class="string">'.clear-completed &gt; .btn'</span>);</span><br><span class="line"><span class="keyword">const</span> $completeAll = <span class="built_in">document</span>.querySelector(<span class="string">'.complete-all'</span>);</span><br><span class="line"><span class="keyword">const</span> $completedTodos = <span class="built_in">document</span>.querySelector(<span class="string">'.completed-todos'</span>);</span><br><span class="line"><span class="keyword">const</span> $activeTodos = <span class="built_in">document</span>.querySelector(<span class="string">'.active-todos'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ajax = <span class="function">(<span class="params">(</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> request = <span class="function">(<span class="params">method, url, payload</span>) =&gt;</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    xhr.open(method, url);</span><br><span class="line">    xhr.setRequestHeader(<span class="string">'Content-type'</span>, <span class="string">'application/json'</span>);</span><br><span class="line">    xhr.send(<span class="built_in">JSON</span>.stringify(payload));</span><br><span class="line"></span><br><span class="line">    xhr.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (xhr.status === <span class="number">200</span> || xhr.status === <span class="number">201</span>) &#123;</span><br><span class="line">        resolve(<span class="built_in">JSON</span>.parse(xhr.response));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    xhr.onerror = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      reject(xhr.status);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="keyword">get</span>(url) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'GET'</span>, url);</span><br><span class="line">    &#125;,</span><br><span class="line">    post(url, payload) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'POST'</span>, url, payload);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">delete</span>(url) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'DELETE'</span>, url);</span><br><span class="line">    &#125;,</span><br><span class="line">    patch(url, payload) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'PATCH'</span>, url, payload);</span><br><span class="line">    &#125;,</span><br><span class="line">    put(url, payload) &#123;</span><br><span class="line">      <span class="keyword">return</span> request(<span class="string">'PUT'</span>, url, payload);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 렌더</span></span><br><span class="line"><span class="keyword">const</span> render = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> html = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">const</span> _todos = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> (navId === <span class="string">'all'</span> ? <span class="literal">true</span> : navId === <span class="string">'active'</span> ? !todo.completed : todo.completed));</span><br><span class="line"></span><br><span class="line">  _todos.forEach(<span class="function">(<span class="params">&#123; id, content, completed &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    html += <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;li id="<span class="subst">$&#123;id&#125;</span>" class="todo-item"&gt;</span></span><br><span class="line"><span class="string">      &lt;input class="checkbox" type="checkbox" id="ck-<span class="subst">$&#123;id&#125;</span>" <span class="subst">$&#123;completed ? <span class="string">'checked'</span> : <span class="string">''</span>&#125;</span>&gt;</span></span><br><span class="line"><span class="string">      &lt;label for="ck-<span class="subst">$&#123;id&#125;</span>"&gt;<span class="subst">$&#123;content&#125;</span>&lt;/label&gt;</span></span><br><span class="line"><span class="string">      &lt;button class="remove-todo"&gt;X&lt;/button&gt;</span></span><br><span class="line"><span class="string">    &lt;/li&gt;`</span>;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  $completedTodos.textContent = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.completed).length;</span><br><span class="line">  $activeTodos.textContent = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> !todo.completed).length;</span><br><span class="line">  $todos.innerHTML = html;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 기능</span></span><br><span class="line"><span class="keyword">const</span> findMaxId = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">Math</span>.max(<span class="number">0</span>, ...todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id)) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 이벤트 함수</span></span><br><span class="line"><span class="keyword">const</span> getTodos = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  ajax.get(<span class="string">'./todos'</span>)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>) =&gt;</span> todos = res)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> addTodos = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> todo = &#123; <span class="attr">id</span>: findMaxId(), <span class="attr">content</span>: $inputTodo.value, <span class="attr">completed</span>: <span class="literal">false</span> &#125;;</span><br><span class="line">  ajax.post(<span class="string">'./todos'</span>, todo)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>) =&gt;</span> todos = res)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line">  $inputTodo.value = <span class="string">''</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> removeTodo = <span class="function">(<span class="params">id</span>) =&gt;</span> &#123;</span><br><span class="line">  ajax.delete(<span class="string">`./todos/<span class="subst">$&#123;id&#125;</span>`</span>)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>) =&gt;</span> todos = res)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> toggleTodo = <span class="function">(<span class="params">id</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> completed = !todos.find(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id === +id).completed;</span><br><span class="line">  ajax.patch(<span class="string">`/todos/<span class="subst">$&#123;id&#125;</span>`</span>, &#123; completed &#125;)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>) =&gt;</span> todos = res)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> toggleAll = <span class="function">(<span class="params">completed</span>) =&gt;</span> &#123;</span><br><span class="line">  ajax.patch(<span class="string">'./todos'</span>, &#123; completed &#125;)</span><br><span class="line">    .then(<span class="function">(<span class="params">_todos</span>) =&gt;</span> todos = _todos)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.error(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> clearTodos = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  ajax.delete(<span class="string">'./completedTodos'</span>)</span><br><span class="line">    .then(<span class="function">(<span class="params">_todos</span>) =&gt;</span> todos = _todos)</span><br><span class="line">    .then(render)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.error(err));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> changeNav = <span class="function">(<span class="params">li</span>) =&gt;</span> &#123;</span><br><span class="line">  [...$nav.children].forEach(<span class="function">(<span class="params">$list</span>) =&gt;</span> &#123;</span><br><span class="line">    $list.classList.toggle(<span class="string">'active'</span>, $list === li);</span><br><span class="line">  &#125;);</span><br><span class="line">  navId = li.id;</span><br><span class="line">  render();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 이벤트</span></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  getTodos();</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'promise'</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$inputTodo.onkeyup = <span class="function">(<span class="params">&#123; target, keyCode &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (keyCode !== <span class="number">13</span> || target.value.trim() === <span class="string">''</span>) <span class="keyword">return</span>;</span><br><span class="line">  addTodos();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$todos.onclick = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!target.classList.contains(<span class="string">'remove-todo'</span>)) <span class="keyword">return</span>;</span><br><span class="line">  removeTodo(target.parentNode.id);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$todos.onchange = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  toggleTodo(target.parentNode.id);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$completeAll.onchange = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  toggleAll(target.checked);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$clearCompleted.onclick = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  clearTodos();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$nav.onclick = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (target.classList.contains(<span class="string">'nav'</span>)) <span class="keyword">return</span>;</span><br><span class="line">  changeNav(target);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/14/daily39/#disqus_thread</comments>
    </item>
    
    <item>
      <title>javascript-study-25</title>
      <link>http://yoursite.com/2019/11/14/javascript-study-25/</link>
      <guid>http://yoursite.com/2019/11/14/javascript-study-25/</guid>
      <pubDate>Wed, 13 Nov 2019 17:30:46 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/31315644/65933403-536fe400-e44c-11e9-981d-c4e8c1f86998.png&quot; alt=&quot;JavaScriptBanner&quot;&gt;&lt;/
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/31315644/65933403-536fe400-e44c-11e9-981d-c4e8c1f86998.png" alt="JavaScriptBanner"></p><hr><h2 id="JavaScript-Study-25"><a href="#JavaScript-Study-25" class="headerlink" title="JavaScript Study 25"></a>JavaScript Study 25</h2><ul><li>프로미스<ul><li>프로미스를 만드는 방법</li></ul></li><li>프로미스 xhr , fetch, axios, async/await<ul><li>프로미스 xhr</li><li>fetch</li><li>axios</li><li>async/await</li></ul></li><li>REST API</li><li>JSON Server 와 POSTMAN</li><li>GraphQL</li></ul><br><hr><br><h3 id="용어-러버덕"><a href="#용어-러버덕" class="headerlink" title="용어 - ( 러버덕 )"></a>용어 - ( 러버덕 )</h3><ul><li><p>프로미스</p></li><li><p>fetch</p></li><li><p>axios</p></li><li><p>async/await</p></li><li><p>postman</p></li><li><p>REST API</p><br></li></ul><hr><h3 id="프로미스"><a href="#프로미스" class="headerlink" title="프로미스"></a>프로미스</h3><blockquote><p>비동기 처리에 대한 약속</p></blockquote><p>브라우저는 멀티 스레드가 맞으나 JS는 싱글 스레드이다. </p><p><strong>프로미스 질문 시 나와야하는 단어 : 후속처리함수, 순서보장, 비동기처리에 대한 약속, 콜백패턴</strong></p><p>콜백 패턴은 XHR(XMLHTTPRequset)의 readyState와 onreadystatechange 함수 내에서 후속처리를 해야만하는데 이는 가독성을 크게 감속시킨다. 또한 콜백헬이나 에러처리등의 문제를 가지고 있다.  추가로  비동기처리는 순서를 보장하지 않는다. 이러한 문제들을 해결하기 위해서 프로미스가 나왔다.</p><p>기본 콜백패턴에서 에러처리를 해결하기 위해서는 실패에대한 콜백을 또 던져주어야한다. </p><br><h4 id="프로미스를-만드는-방법"><a href="#프로미스를-만드는-방법" class="headerlink" title="프로미스를 만드는 방법"></a>프로미스를 만드는 방법</h4><p><code>new Promise((resolve, reject) =&gt; { 비동기 처리 내용 })</code></p><p>프로미스는 고차함수다. 고차함수는 인수로 함수를 받을 수 있다. </p><p>프로미스는 내부에서 상태를 가지고 있다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 프로미스 객체는 인수 2개를 받을 수 있다. 성공-resolve, 실패-reject</span></span><br><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 여기서 비동기를 처리한다.</span></span><br><span class="line">  <span class="keyword">const</span> x = <span class="number">1</span>;</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (x % <span class="number">2</span>) resolve(x);</span><br><span class="line">    <span class="keyword">else</span> reject(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Error'</span>));</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> promise);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 프로미스 객체의 후속 처리 함수</span></span><br><span class="line">promise</span><br><span class="line">  .then(<span class="function">(<span class="params">res</span>) =&gt;</span> <span class="built_in">console</span>.log(res))</span><br><span class="line">  .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br></pre></td></tr></table></figure><p>.then 은 무조건 promise를 return 한다.</p><p>.then이 게속해서 이어지는 것을 프로미스 체인닝 이라 한다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">resolve(<span class="number">1</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">p.then(<span class="function">(<span class="params">num</span>) =&gt;</span> ++num)</span><br><span class="line"> .then(<span class="function">(<span class="params">num</span>) =&gt;</span> ++num)</span><br><span class="line"> .then(<span class="function">(<span class="params">num</span>) =&gt;</span> ++num)</span><br><span class="line"> .then(<span class="function">(<span class="params">num</span>) =&gt;</span> <span class="built_in">console</span>.log(num));</span><br></pre></td></tr></table></figure><p>정답은 4가 나온다.</p><br><h3 id="프로미스-xhr-fetch-axios-async-await"><a href="#프로미스-xhr-fetch-axios-async-await" class="headerlink" title="프로미스 xhr , fetch, axios, async/await"></a>프로미스 xhr , fetch, axios, async/await</h3><h4 id="프로미스-xhr"><a href="#프로미스-xhr" class="headerlink" title="프로미스 xhr"></a>프로미스 xhr</h4><ul><li>기본적으로 프로미스를 이용한 ajax통신을 위해서는 XMLHttpRequest 객체가 있어야만 사용할 수 있다.</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ajax = <span class="function">(<span class="params">(</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> req = <span class="function">(<span class="params">method, url, payload</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">      xhr.open(method, url);</span><br><span class="line">      xhr.setRequestHeader(<span class="string">'content-type'</span>, <span class="string">'application/json'</span>);</span><br><span class="line">      xhr.send(<span class="built_in">JSON</span>.stringify(payload));</span><br><span class="line">      xhr.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (xhr.status === <span class="number">200</span> || xhr.status === <span class="number">201</span>) &#123;</span><br><span class="line">          resolve(<span class="built_in">JSON</span>.parse(xhr.response));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">      xhr.onerror = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        reject(<span class="keyword">new</span> <span class="built_in">Error</span>(xhr.status));</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="keyword">get</span>(url) &#123;</span><br><span class="line">      <span class="keyword">return</span> req(<span class="string">'GET'</span>, url);</span><br><span class="line">    &#125;,</span><br><span class="line">    post(url, payload) &#123;</span><br><span class="line">      <span class="keyword">return</span> req(<span class="string">'POST'</span>, url, payload);</span><br><span class="line">    &#125;,</span><br><span class="line">    patch(url, payload) &#123;</span><br><span class="line">      <span class="keyword">return</span> req(<span class="string">'PATCH'</span>, url, payload);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">delete</span>(url) &#123;</span><br><span class="line">      <span class="keyword">return</span> req(<span class="string">'DELETE'</span>, url);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ajax get 통신</span></span><br><span class="line">ajax.get(<span class="string">'/todos'</span>)</span><br><span class="line">  .then(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="built_in">Math</span>.max(<span class="number">0</span>, ...data.map(<span class="function">(<span class="params">a</span>) =&gt;</span> a.id)))</span><br><span class="line">  .then(<span class="function">(<span class="params">id</span>) =&gt;</span> ajax.delete(<span class="string">`/todos/<span class="subst">$&#123;id&#125;</span>`</span>))</span><br><span class="line">  .then(<span class="built_in">console</span>.log);</span><br></pre></td></tr></table></figure><br><h4 id="fetch를-사용했을-경우"><a href="#fetch를-사용했을-경우" class="headerlink" title="fetch를 사용했을 경우"></a>fetch를 사용했을 경우</h4><ul><li>기본적인 베이스는 promise를 따라간다.</li><li>fetch는 xhr 함수를 만들 필요가 없다. </li><li>함수가 ajax 기능을 제공해주기 때문이다.</li><li>다만 소스가 조금 가독성이 떨이지는 단점이 있다.</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fetch(<span class="string">'/todos'</span>)</span><br><span class="line">  .then(<span class="function">(<span class="params">res</span>) =&gt;</span> res.json())</span><br><span class="line">  .then(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="built_in">Math</span>.max(<span class="number">0</span>, ...data.map(<span class="function">(<span class="params">a</span>) =&gt;</span> a.id)))</span><br><span class="line">  .then(<span class="function">(<span class="params">id</span>) =&gt;</span> fetch(<span class="string">`/todos/<span class="subst">$&#123;id&#125;</span>`</span>, &#123;</span><br><span class="line">    method: <span class="string">'DELETE'</span></span><br><span class="line">  &#125;))</span><br><span class="line">  .then(<span class="function">(<span class="params">res</span>) =&gt;</span> res.json())</span><br><span class="line">  .then(<span class="built_in">console</span>.log);</span><br></pre></td></tr></table></figure><br><h4 id="axios를-사용했을-경우"><a href="#axios를-사용했을-경우" class="headerlink" title="axios를 사용했을 경우"></a>axios를 사용했을 경우</h4><ul><li>기본적인 베이스는 promise를 따라간다.</li><li>axios 역시 fetch처럼 xhr함수를 만들 필요가 없다.</li><li>fetch보다 훨씬 간결하고 가독성이 좋다.</li><li>다만, html에서 axios의 API를 로드 해줘야만 한다.</li></ul><p>(CDN:   <code>&lt;script src=&quot;https://unpkg.com/axios/dist/axios.min.js&quot;&gt;&lt;/script&gt;</code>)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">axios.get(<span class="string">'/todos'</span>)</span><br><span class="line">  .then(<span class="function">(<span class="params">res</span>) =&gt;</span> <span class="built_in">Math</span>.max(<span class="number">0</span>, ...(res.data).map(<span class="function">(<span class="params">a</span>) =&gt;</span> a.id)))</span><br><span class="line">  .then(<span class="function">(<span class="params">id</span>) =&gt;</span> ajax.delete(<span class="string">`/todos/<span class="subst">$&#123;id&#125;</span>`</span>))</span><br><span class="line">  .then(<span class="built_in">console</span>.log);</span><br></pre></td></tr></table></figure><br><h4 id="async-await를-사용했을-경우"><a href="#async-await를-사용했을-경우" class="headerlink" title="async, await를 사용했을 경우"></a>async, await를 사용했을 경우</h4><ul><li>xhr , fetch, axios의 비동기 방식을 동기 방식 처럼 사용하기 위해서 사용한다.</li><li>async 함수 내에 있어야만 반드시 순서가 보장된다. </li><li>프로미스로 짠 코드들의 then은 전부다 async 안에 반드시 들어가 있어야한다!</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> todos = <span class="keyword">await</span> ajax.get(<span class="string">'/todos'</span>);</span><br><span class="line">  <span class="keyword">const</span> id = <span class="built_in">Math</span>.max(<span class="number">0</span>, ...todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id));</span><br><span class="line">  todos = <span class="keyword">await</span> ajax.delete(<span class="string">`/todos/<span class="subst">$&#123;id&#125;</span>`</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(todos);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><br><h3 id="REST-API"><a href="#REST-API" class="headerlink" title="REST API"></a>REST API</h3><blockquote><p>REST란, 자원을 정의하고 자원에 대한 주소를 지정하는 방법의 모음</p></blockquote><ul><li>백엔드가 개발이 늦을 경우 프론트는 짝퉁서버 Mock Server를 만들어서 사용할 수도 있다.<br>백엔드가 완료될 경우 프론트는 url만 백엔드 서버로 교체해서 사용한다.<br>MockServer를 만드는 방법은 여라가지가 있다. tool(JSON-Server)을 이용하여 사용할 수도 있다. </li><li>백엔드가 개발이 빠를 경우 해당 백엔드가 잘되는지 테스트를 해야만한다. 여기서 프론트는 Postman과 같은 tool 을 이용하여 이를 테스트 할 수 있다.</li></ul><br><h3 id="JSON-Server-와-POSTMAN"><a href="#JSON-Server-와-POSTMAN" class="headerlink" title="JSON Server 와 POSTMAN"></a>JSON Server 와 POSTMAN</h3><p>JSON.Server의 db.json에서 모든 프로퍼티 키는 반드시 쌍따옴표(<code>&quot;</code>)로 열고 닫는다. 그냥 따옴표(<code>&#39;</code>) 안된다. 반드시 쌍따옴표(<code>&quot;</code>)</p><p>postman에서 테스트 주소를 작성할 때 반드시 <code>http://</code>를 적어주어야만 한다.</p><p>POST  ➤  Body  ➤  raw  ➤  JSON 체크</p><br><h3 id="GraphQL"><a href="#GraphQL" class="headerlink" title="GraphQL"></a>GraphQL</h3><p>facebook이 만든 새로운 패러다임. REST API와는 달리 정해진 형태가 있지 않다. </p><p>REST API 다음 차세대 데이터 질의어(SQL)로 각광을 받고 있으며 REST 및 부속 웹서비스 아키텍쳐를 대체할 수 있다. 클라이언트는 필요한 데이터의 구조를 지정할 수 있으며, 서버는 정확히 동일한 구조로 데이터를 반환한다.</p><br>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/14/javascript-study-25/#disqus_thread</comments>
    </item>
    
    <item>
      <title>daily_quiz38</title>
      <link>http://yoursite.com/2019/11/12/daily-algorithm38/</link>
      <guid>http://yoursite.com/2019/11/12/daily-algorithm38/</guid>
      <pubDate>Mon, 11 Nov 2019 18:06:22 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/31315644/68995155-ddc1b980-08cd-11ea-96ca-ba0ac8a5f196.png&quot; alt=&quot;quiz&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;문
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/31315644/68995155-ddc1b980-08cd-11ea-96ca-ba0ac8a5f196.png" alt="quiz"></p><hr><p>문제 출처 : poiema</p><h3 id="Tabs-UI"><a href="#Tabs-UI" class="headerlink" title="Tabs UI"></a>Tabs UI</h3><p><img src="https://poiemaweb.com/img/tabs-ui.gif" alt="tabs-ui"></p><ul><li>요구 사항 <ol><li>탭을 구성하는 데이터를 전달해 Tabs UI를 생성한다.</li><li>라이브러리를 사용하지 않고 Vanilla javascript로 구현한다.</li><li>ES6의 class로 구현한다.</li></ol></li></ul><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://fonts.googleapis.com/css?family=Open+Sans:400,600,700"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://use.fontawesome.com/releases/v5.3.1/css/all.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Tabs<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    *, *<span class="selector-pseudo">:before</span>, *<span class="selector-pseudo">:after</span> &#123;</span></span><br><span class="line">      margin: 0;</span><br><span class="line">      padding: 0;</span><br><span class="line">      box-sizing: border-box;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    html, body &#123;</span><br><span class="line">      height: 100%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    body &#123;</span><br><span class="line"><span class="css">      <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(20<span class="selector-tag">deg</span>, <span class="selector-id">#08aeea</span> 0%, <span class="selector-id">#2af598</span> 100%);</span></span><br><span class="line">      font-family: 'Open Sans', Sans-serif;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.tabs</span> &#123;</span></span><br><span class="line">      min-width: 320px;</span><br><span class="line">      max-width: 800px;</span><br><span class="line">      padding: 50px;</span><br><span class="line">      margin: 50px auto;</span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">      border-radius: 4px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.tab</span> &#123;</span></span><br><span class="line">      display: inline-block;</span><br><span class="line">      margin: 0 0 -1px;</span><br><span class="line">      padding: 15px 25px;</span><br><span class="line">      text-align: center;</span><br><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#555</span>;</span></span><br><span class="line">      border: 1px solid transparent;</span><br><span class="line">      cursor: pointer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.icon</span> &#123;</span></span><br><span class="line">      margin-right: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.tab</span><span class="selector-class">.active</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ddd</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">border-top</span>: 2<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#f44336</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#fff</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.tab-content</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="comment">/* display: none; */</span></span></span><br><span class="line">      padding: 20px;</span><br><span class="line"><span class="css">      <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ddd</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">line-height</span>: 1<span class="selector-class">.6rem</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tabs"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="class"><span class="keyword">class</span> <span class="title">Tab</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">constructor</span>(tabsData) &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.tabsData = tabsData;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// active 클래스가 지정된 tab 요소와 같은 인덱스의 tab-content 요소만 표시</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.renderTabs();</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> $tabContent = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.tab-content'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> $tab = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.tab'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// 탭 전환</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.toggleDisplay($tabContent);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'[constructor]'</span>, <span class="keyword">this</span>);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// tab 클릭 이벤트 핸들러 등록</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.querySelector(<span class="string">'.tabs'</span>).onclick = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">if</span> (!target.classList.contains(<span class="string">'tab'</span>)) <span class="keyword">return</span>;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'[constructor,document]'</span>, <span class="keyword">this</span>);</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.changeActive(target, $tab, $tabContent);</span></span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">      <span class="comment">// tabsData 객체를 기반으로 tab-group 요소를 생성</span></span></span><br><span class="line">      renderTabs() &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> html = `</span></span><br><span class="line"><span class="javascript">          &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab-group"</span>&gt;</span></span><br><span class="line"><span class="javascript">          $&#123;<span class="keyword">this</span>.tabsData.map(<span class="function">(<span class="params">tab</span>) =&gt;</span> <span class="string">`</span></span></span><br><span class="line"><span class="actionscript">            &lt;li <span class="class"><span class="keyword">class</span>="<span class="title">tab</span>$</span>&#123;tab.active ? <span class="string">' active'</span> : <span class="string">''</span>&#125;<span class="string">"&gt;</span></span></span><br><span class="line"><span class="javascript">             &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon $&#123;tab.iconClass&#125;"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span>$&#123;tab.title&#125;</span></span><br><span class="line"><span class="actionscript">            &lt;/li&gt;`).join(<span class="string">''</span>)&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab-content-group"</span>&gt;</span></span><br><span class="line"><span class="javascript">          $&#123;<span class="keyword">this</span>.tabsData.map(<span class="function">(<span class="params">tab</span>) =&gt;</span> <span class="string">`</span></span></span><br><span class="line"><span class="actionscript">            &lt;div <span class="class"><span class="keyword">class</span>="<span class="title">tab</span>-<span class="title">content</span>"&gt;$</span>&#123;tab.content&#125;&lt;/div&gt;`).join(<span class="string">''</span>)&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span>`;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.querySelector(<span class="string">'.tabs'</span>).insertAdjacentHTML(<span class="string">'beforeend'</span>, html);</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      toggleDisplay($tabContent) &#123;</span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.tabsData.forEach(<span class="function">(<span class="params">tab, index</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">if</span> (!tab.active) &#123;</span></span><br><span class="line"><span class="actionscript">            $tabContent[index].style.display = <span class="string">'none'</span>;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      changeActive(target, $tab, $tabContent) &#123;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'[changeActive]'</span>, <span class="keyword">this</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.tabsData = <span class="keyword">this</span>.tabsData.map(<span class="function">(<span class="params">tab</span>) =&gt;</span> (</span></span><br><span class="line"><span class="vbscript">          tab.title === target.textContent.<span class="built_in">trim</span>() ? &#123; ...tab, active: <span class="literal">true</span> &#125; : &#123; ...tab, active: <span class="literal">false</span> &#125;</span></span><br><span class="line">        ));</span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.tabsData.forEach(<span class="function">(<span class="params">tab, index</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">if</span> (!tab.active) &#123;</span></span><br><span class="line"><span class="actionscript">            $tab[index].classList.remove(<span class="string">'active'</span>);</span></span><br><span class="line"><span class="actionscript">            $tabContent[index].style.display = <span class="string">'none'</span>;</span></span><br><span class="line"><span class="actionscript">          &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            $tab[index].classList.add(<span class="string">'active'</span>);</span></span><br><span class="line"><span class="actionscript">            $tabContent[index].style.display = <span class="string">'block'</span>;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="comment">// do something!</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> tab = <span class="keyword">new</span> Tab([</span></span><br><span class="line">        &#123;</span><br><span class="line"><span class="actionscript">          title: <span class="string">'HTML'</span>,</span></span><br><span class="line"><span class="actionscript">          active: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">          iconClass: <span class="string">'fab fa-html5'</span>,</span></span><br><span class="line"><span class="handlebars"><span class="xml">          content: `<span class="tag">&lt;<span class="name">strong</span>&gt;</span>HTML(HyperText Markup Language)<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> is the most basic building block of the Web.</span></span></span><br><span class="line"><span class="javascript">            It describes and defines the content <span class="keyword">of</span> a webpage along <span class="keyword">with</span> the basic layout <span class="keyword">of</span> the webpage.</span></span><br><span class="line"><span class="vbscript">            Other technologies besides HTML are generally used <span class="keyword">to</span> describe a web page<span class="comment">'s</span></span></span><br><span class="line"><span class="vbscript">            appearance/presentation(CSS) <span class="keyword">or</span> functionality/ behavior(JavaScript).`</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line"><span class="actionscript">          title: <span class="string">'CSS'</span>,</span></span><br><span class="line"><span class="actionscript">          active: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">          iconClass: <span class="string">'fab fa-css3'</span>,</span></span><br><span class="line"><span class="handlebars"><span class="xml">          content: `<span class="tag">&lt;<span class="name">strong</span>&gt;</span>Cascading Style Sheets(CSS)<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> is a stylesheet language used to describe</span></span></span><br><span class="line"><span class="javascript">            the presentation <span class="keyword">of</span> a <span class="built_in">document</span> written <span class="keyword">in</span> HTML or XML (including XML dialects</span></span><br><span class="line"><span class="vbscript">            such as SVG, MathML <span class="keyword">or</span> XHTML). CSS describes how elements should be rendered <span class="keyword">on</span> screen,</span></span><br><span class="line"><span class="vbscript">            <span class="keyword">on</span> paper, <span class="keyword">in</span> speech, <span class="keyword">or</span> <span class="keyword">on</span> other media.`</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line"><span class="actionscript">          title: <span class="string">'JavaScript'</span>,</span></span><br><span class="line"><span class="actionscript">          active: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">          iconClass: <span class="string">'fab fa-js-square'</span>,</span></span><br><span class="line"><span class="handlebars"><span class="xml">          content: `<span class="tag">&lt;<span class="name">strong</span>&gt;</span>JavaScript(JS)<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> is a lightweight interpreted or JIT-compiled programming</span></span></span><br><span class="line"><span class="vbscript">            language <span class="keyword">with</span> first-<span class="keyword">class</span> functions. <span class="keyword">While</span> it <span class="keyword">is</span> most well-known as the scripting</span></span><br><span class="line"><span class="actionscript">            language <span class="keyword">for</span> Web pages, many non-browser environments also <span class="keyword">use</span> it, such <span class="keyword">as</span> Node.js,</span></span><br><span class="line"><span class="vbscript">            Apache CouchDB <span class="keyword">and</span> Adobe Acrobat. JavaScript <span class="keyword">is</span> a prototype-based, multi-paradigm,</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">dynamic</span> language, supporting object-oriented, imperative, and declarative</span></span><br><span class="line">            (e.g. functional programming) styles.`</span><br><span class="line">        &#125;</span><br><span class="line">      ]);</span><br><span class="line">    &#125;;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h4 id="주요-코드"><a href="#주요-코드" class="headerlink" title="주요 코드"></a>주요 코드</h4><ol><li><code>this.renderTabs();</code> 상단 존재</li></ol><p>타 문제와 다르게 위 코드가 상단에 존재해서 애를 먹은 문제이다. renderTabs가 작성이 미리 되어져 있었기 때문에 렌더링 후에 Dom 요소에 접근하였다.</p><ol start="2"><li><code>changeActive</code>함수</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">changeActive(target, $tab, $tabContent) &#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">'[changeActive]'</span>, <span class="keyword">this</span>);</span><br><span class="line">     <span class="keyword">this</span>.tabsData = <span class="keyword">this</span>.tabsData.map(<span class="function">(<span class="params">tab</span>) =&gt;</span> (</span><br><span class="line">       tab.title === target.textContent.trim() ? &#123; ...tab, <span class="attr">active</span>: <span class="literal">true</span> &#125; : &#123; ...tab, <span class="attr">active</span>: <span class="literal">false</span> &#125;</span><br><span class="line">     ));</span><br><span class="line"></span><br><span class="line">     <span class="keyword">this</span>.tabsData.forEach(<span class="function">(<span class="params">tab, index</span>) =&gt;</span> &#123;</span><br><span class="line">       <span class="keyword">if</span> (!tab.active) &#123;</span><br><span class="line">         $tab[index].classList.remove(<span class="string">'active'</span>);</span><br><span class="line">         $tabContent[index].style.display = <span class="string">'none'</span>;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         $tab[index].classList.add(<span class="string">'active'</span>);</span><br><span class="line">         $tabContent[index].style.display = <span class="string">'block'</span>;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>처음에는 선택한 요소의 Content의 여부에 따라 tab을 결정한다. </p><p>그후 tab 상태가 active라면 active클래스를 제거하고 display를 none처리하며 반대의 경우에는 active클래스를 추가하고 display를 block으로 보여준다.</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/12/daily-algorithm38/#disqus_thread</comments>
    </item>
    
    <item>
      <title>daily_algorithm37</title>
      <link>http://yoursite.com/2019/11/11/daily-algorithm37/</link>
      <guid>http://yoursite.com/2019/11/11/daily-algorithm37/</guid>
      <pubDate>Sun, 10 Nov 2019 18:26:18 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;img src=&quot;https://images.velog.io/post-images/leejh3224/619516b0-e892-11e8-98f5-997ef3c38110/what-is-an-algorithm-featured.png&quot; alt&gt;&lt;/p&gt;

        
      
      </description>
      
      
      <content:encoded><![CDATA[<p><img src="https://images.velog.io/post-images/leejh3224/619516b0-e892-11e8-98f5-997ef3c38110/what-is-an-algorithm-featured.png" alt></p><hr><p>문제 출처 : 프로그래머스</p><h3 id="올바른-괄호"><a href="#올바른-괄호" class="headerlink" title="올바른 괄호"></a>올바른 괄호</h3><h6 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h6><p>괄호가 바르게 짝지어졌다는 것은 ‘(‘ 문자로 열렸으면 반드시 짝지어서 ‘)’ 문자로 닫혀야 한다는 뜻입니다. 예를 들어</p><ul><li>()() 또는 (())() 는 올바른 괄호입니다.</li><li>)()( 또는 (()( 는 올바르지 않은 괄호입니다.</li></ul><p>‘(‘ 또는 ‘)’ 로만 이루어진 문자열 s가 주어졌을 때, 문자열 s가 올바른 괄호이면 true를 return 하고, 올바르지 않은 괄호이면 false를 return 하는 solution 함수를 완성해 주세요.</p><h5 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h5><ul><li>문자열 s의 길이 : 100,000 이하의 자연수</li><li>문자열 s는 ‘(‘ 또는 ‘)’ 로만 이루어져 있습니다.</li></ul><hr><h5 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h5><table><thead><tr><th>s</th><th>answer</th></tr></thead><tbody><tr><td>()()</td><td>true</td></tr><tr><td>(())()</td><td>true</td></tr><tr><td>)()(</td><td>false</td></tr><tr><td>(()(</td><td>false</td></tr></tbody></table><h5 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h5><p>입출력 예 #1,2,3,4<br>문제의 예시와 같습니다.</p><br><h4 id="1차-풀이"><a href="#1차-풀이" class="headerlink" title="1차 풀이"></a>1차 풀이</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solution</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> answer = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (s.length % <span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">while</span> (s.indexOf(<span class="string">'()'</span>) !== <span class="number">-1</span>) &#123;</span><br><span class="line">    s = s.replace(<span class="string">'()'</span>, <span class="string">''</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  answer = s.length == <span class="number">0</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TestCase는 모두 통과했지만 효율성 테스트에서 모두 떨어졌다.</p><p>아무래도 반복문을 최대한 적게돌면서 중간중간에 체크하는 과정을 추가해야만 할 것 같다.</p><br><h4 id="2차-풀이"><a href="#2차-풀이" class="headerlink" title="2차 풀이"></a>2차 풀이</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solution</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> arr = [];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; s.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (s[i] == <span class="string">'('</span>) arr.push(<span class="string">'('</span>);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      arr.pop();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr.length == <span class="number">0</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>올바른 괄호라면 ‘(‘ 로 시작해 ‘)’로 끝나야 한다. </p><p>따라서 배열을 추가하고 배열에 ‘(‘ 일경우 배열에 스택으로 추가한다.</p><p>만약 ‘(‘이 아니라면 ‘)’인것이다.  따라서 스택에 추가할 필요없이 스택을 제거한다.</p><p>만약 스택이 비워져있는 상태에서 ‘)’ 을 만난다면 배열길이는 0이므로 false를 반환한다.</p><p>수가 잘 맞게 ‘(‘과 ‘)’을 비교했다면 반복문을 다 돌고나서 배열의 길이는 0이기 때문에 true를 반환한다.</p><p>하지만 ‘(‘이 중복으로 겹쳐서 나왔다면 분명 길이는 0이상이기 때문에 false를 반환한다.</p><br>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/11/daily-algorithm37/#disqus_thread</comments>
    </item>
    
    <item>
      <title>module</title>
      <link>http://yoursite.com/2019/11/11/module/</link>
      <guid>http://yoursite.com/2019/11/11/module/</guid>
      <pubDate>Sun, 10 Nov 2019 17:02:27 GMT</pubDate>
      <description>
      
        
        
          &lt;img src=&quot;https://user-images.githubusercontent.com/31315644/68540279-a2f1ea00-03d2-11ea-9374-e4036dfa83ff.jpg&quot; alt=&quot;legoBlocks&quot; style=&quot;zoom
        
      
      </description>
      
      
      <content:encoded><![CDATA[<img src="https://user-images.githubusercontent.com/31315644/68540279-a2f1ea00-03d2-11ea-9374-e4036dfa83ff.jpg" alt="legoBlocks" style="zoom:50%;"><hr><h2 id="JavaScript-Module"><a href="#JavaScript-Module" class="headerlink" title="JavaScript Module"></a>JavaScript Module</h2><ul><li>ECMAScript 모듈<ul><li>JS는 모듈기능이 없었다. (ES6 - 19년 5월부터 모듈기능 추가)</li><li><a href="#a1">파일 스코프</a></li><li><a href="#a2">export 키워드</a><ul><li><a href="#a3">기본 export</a></li><li><a href="#a4">모아서 export</a></li><li><a href="#a5">default export</a></li></ul></li><li><a href="#a6">import 키워드</a><ul><li><a href="#a7">기본 import</a></li><li><a href="#a8">이름 변경 import</a></li><li><a href="#a9">default export모듈을 import</a></li></ul></li><li><a href="#a10">import ~ export 동작 확인</a></li></ul></li></ul><br><hr><h2 id="ECMAScript-모듈"><a href="#ECMAScript-모듈" class="headerlink" title="ECMAScript 모듈"></a>ECMAScript 모듈</h2><blockquote><p>모듈이란 애플리케이션을 구성하는 개별적 요소로서 재사용 가능한 코드 조각을 일컫는다.<br>세부 사항을 캡슐화하고 공개가 필요한 API만을 외부에 노출한다.</p></blockquote><img src="https://poiemaweb.com/img/module-pattern.png" alt="module-pattern" style="zoom:50%;"><ul><li>모듈은 파일 단위(기능 별로 분리되어 작성)로 분리되어 개별적으로 존재함.</li><li>애플리케이션은 필요에 따라 명시적으로 모듈을 로드하여 재사용.</li><li>기능별로 분리 구성되어 코드의 단위를 명확히 분리하여 구성했기에 재사용성, 효율성, 유지보수성을 높인다.</li></ul><br><h3 id="JS는-모듈기능이-없었다-ES6-19년-5월부터-모듈기능-추가"><a href="#JS는-모듈기능이-없었다-ES6-19년-5월부터-모듈기능-추가" class="headerlink" title="JS는 모듈기능이 없었다. (ES6 - 19년 5월부터 모듈기능 추가)"></a>JS는 모듈기능이 없었다. (ES6 - 19년 5월부터 모듈기능 추가)</h3><table><thead><tr><th>C언어 / Java</th><th>JavaScript</th></tr></thead><tbody><tr><td>#include / import</td><td>script</td></tr><tr><td>외부 파일을 가지고 올 수 있다.</td><td>외부 파일을 가지고 올 수 있다.</td></tr><tr><td>외부 파일들은 각 파일마다 독립적인 스코프를 지닌다.</td><td>외부 파일들은 모두 하나의 전역 스코프를 지닌다.</td></tr><tr><td>모듈화가 가능하다.</td><td>전역 스코프로 모듈화가 불가능하다.</td></tr></tbody></table><br><p>2019년 5월부터 모던 브라우저(Chrome 61, FF 60, SF 10.1, Edge 16 이상)에서 ES6 모듈을 사용할 수 있다.<br>script 태그에 <code>type=&quot;module&quot;</code> 어트리뷰트를 추가하면 로드된 자바스크립트 파일은 모듈로서 동작한다.<br>모듈의 파일 확장자는 mjs를 권장한다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"module"</span> src=<span class="string">"lib.mjs"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script type=<span class="string">"module"</span> src=<span class="string">"app.mjs"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><p>하지만 아직까지는 ES6 모듈 기능보다는 <a href="https://webpack.js.org/" target="_blank" rel="noopener">Webpack</a> 등의 모듈 번들러를 사용하는 것이 일반적이다.</p><ul><li>IE를 포함한 구형 브라우저는 ES6 모듈을 지원하지 않는다.</li><li>브라우저의 ES6 모듈 기능을 사용하더라도 트랜스파일링이나 번들링이 필요하다.</li><li>아직 지원하지 않는 기능(Bare import 등)이 있다. (<a href="https://jakearchibald.com/2017/es-modules-in-browsers/" target="_blank" rel="noopener">ECMAScript modules in browsers</a> 참고)</li><li>점차 해결되고는 있지만 아직 몇가지 이슈가 있다. (<a href="https://jakearchibald.com/2017/es-modules-in-browsers/" target="_blank" rel="noopener">ECMAScript modules in browsers</a> 참고)</li></ul><p>따라서 ES6 를 아울러 ES5 하위 버전까지 모듈을 사용하기 위해서는  Babel과  Webpack을 이용한 ES6 개발환경 구축이 필요하다.</p><br><h3 id="파일-스코프"><a href="#파일-스코프" class="headerlink" title="파일 스코프 "></a>파일 스코프 <a id="a1"></a></h3><blockquote><p>모듈은 <strong>파일 스코프</strong>를 갖는다.<br>즉, <strong>모듈 내에서 var 키워드로 선언한 변수는 더 이상 전역 변수가 아니며 window 객체의 프로퍼티도 아니다.</strong></p></blockquote><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// foo.js</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="string">'foo'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bar.js</span></span><br><span class="line"><span class="comment">// 중복 선언이 아니다. 스코프가 다른 변수이다.</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="string">'bar'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script type=<span class="string">"module"</span> src=<span class="string">"foo.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  &lt;script type=<span class="string">"module"</span> src=<span class="string">"bar.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><p>결과는 순서대로  다음과 같이 출력된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&apos;foo&apos;</span><br><span class="line">&apos;bar&apos;</span><br></pre></td></tr></table></figure><p>만약 bar.js 에서 아무것도 선언안하고 x를 출력할 경우, </p><p><code>Uncaught ReferenceError: x is not defined</code> 를 출력한다.</p><p>이유 : 모듈화된 foo를 외부에서 참조할 수 없고, bar자체에서는 암묵적 선언이 없다. bar에서 var키워드로 생성된 변수는 window객체의 프로퍼티가 아니기 때문에 undefined도 안뜨기 때문이다.</p><br><p>###export 키워드 <a id="a2"></a></p><p>모듈은 독립적인 파일 스코프를 갖기 때문에 모듈 안에서 선언한 모든 것들은 기본적으로 해당 모듈 내부에서만 참조가 가능하다.</p><blockquote><p>모듈 안에 선언한 항복을 외부에 공개하여 다른 모듈이 사용할 수 있게 하고 싶다면 export 해야 한다.</p><p>선언한 변수, 함수, 클래스 모두 export가 가능하다.</p></blockquote><h4 id="기본-export"><a href="#기본-export" class="headerlink" title="기본 export "></a>기본 export <a id="a3"></a></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lib.js</span></span><br><span class="line"><span class="comment">// 변수의 공개</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> pi = <span class="built_in">Math</span>.PI;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 함수의 공개</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">square</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 클래스의 공개</span></span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(name) &#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h4 id="모아서-export"><a href="#모아서-export" class="headerlink" title="모아서 export "></a>모아서 export <a id="a4"></a></h4><ul><li>선언문 앞에 매번 export 키워드를 붙이는 것이 싫다면 export 대상을 모아 하나의 객체로 구성하여 한번에 export할 수도 있다.</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lib.js</span></span><br><span class="line"><span class="keyword">const</span> pi = <span class="built_in">Math</span>.PI;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">square</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(name) &#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 변수, 함수 클래스를 하나의 객체로 구성하여 공개</span></span><br><span class="line"><span class="keyword">export</span> &#123; pi, square, Person &#125;;</span><br></pre></td></tr></table></figure><br><h4 id="default-export"><a href="#default-export" class="headerlink" title="default export "></a>default export <a id="a5"></a></h4><ul><li>모듈에서 하나만을 export할 때는 default 키워드를 사용할 수 있다. </li><li>다만, default를 사용하는 경우, var, let, const는 사용할 수 없다.</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lib.js</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>;</span><br></pre></td></tr></table></figure><p>위 코드를 아래와 같이 축약 표현할 수 있다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lib.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x * x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="import-키워드"><a href="#import-키워드" class="headerlink" title="import 키워드 "></a>import 키워드 <a id="a6"></a></h3><blockquote><p>export한 모듈을 import하기 위해서 사용한다.</p></blockquote><h4 id="기본-import"><a href="#기본-import" class="headerlink" title="기본 import "></a>기본 import <a id="a7"></a></h4><ul><li>export한 모듈을 로드 시 export한 이름으로 import한다.</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="comment">// 같은 폴더 내의 lib.js 모듈을 로드. 확장자 js는 생략 가능.</span></span><br><span class="line"><span class="comment">// 단, 브라우저 환경에서는 모듈의 파일 확장자를 생략할 수 없다.</span></span><br><span class="line"><span class="keyword">import</span> &#123; pi, square, Person &#125; <span class="keyword">from</span> <span class="string">'./lib'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(pi);         <span class="comment">// 3.141592653589793</span></span><br><span class="line"><span class="built_in">console</span>.log(square(<span class="number">10</span>)); <span class="comment">// 100</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">new</span> Person(<span class="string">'Lee'</span>)); <span class="comment">// Person &#123; name: 'Lee' &#125;</span></span><br></pre></td></tr></table></figure><ul><li>각각의 이름을 지정하지 않고 하나의 이름으로 한꺼번에 import할 수도 있다. </li><li>이때 import되는 항목은 as 뒤에 지정한 이름의 변수에 할당된다.</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> lib <span class="keyword">from</span> <span class="string">'./lib'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(lib.pi);         <span class="comment">// 3.141592653589793</span></span><br><span class="line"><span class="built_in">console</span>.log(lib.square(<span class="number">10</span>)); <span class="comment">// 100</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">new</span> lib.Person(<span class="string">'Lee'</span>)); <span class="comment">// Person &#123; name: 'Lee' &#125;</span></span><br></pre></td></tr></table></figure><br><h4 id="이름-변경-import"><a href="#이름-변경-import" class="headerlink" title="이름 변경 import "></a>이름 변경 import <a id="a8"></a></h4><ul><li>이름을 변경하여 import할 수도 있다.</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; pi <span class="keyword">as</span> PI, square <span class="keyword">as</span> sq, Person <span class="keyword">as</span> P &#125; <span class="keyword">from</span> <span class="string">'./lib'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(PI);    <span class="comment">// 3.141592653589793</span></span><br><span class="line"><span class="built_in">console</span>.log(sq(<span class="number">2</span>)); <span class="comment">// 4</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">new</span> P(<span class="string">'Kim'</span>)); <span class="comment">// Person &#123; name: 'Kim' &#125;</span></span><br></pre></td></tr></table></figure><br><h4 id="default-export모듈을-import"><a href="#default-export모듈을-import" class="headerlink" title="default export모듈을 import "></a>default export모듈을 import <a id="a9"></a></h4><ul><li>default 키워드와 함께 export한 모듈은 {} 없이 임의의 이름으로 import한다.</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="keyword">import</span> square <span class="keyword">from</span> <span class="string">'./lib'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(square(<span class="number">3</span>)); <span class="comment">// 9</span></span><br></pre></td></tr></table></figure><br><h3 id="import-export-동작-확인"><a href="#import-export-동작-확인" class="headerlink" title="import ~ export 동작 확인 "></a>import ~ export 동작 확인 <a id="a10"></a></h3><p>브라우저가 지원하는 ES6 모듈 기능을 이용하여 import와 export가 동작하는지 확인해보자.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lib.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> x =&gt; x * x;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="comment">// 브라우저 환경에서는 모듈의 파일 확장자를 생략할 수 없다.</span></span><br><span class="line"><span class="comment">// 모듈의 파일 확장자는 .mjs를 권장한다.</span></span><br><span class="line"><span class="keyword">import</span> square <span class="keyword">from</span> <span class="string">'./lib.js'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(square(<span class="number">10</span>)); <span class="comment">// 100</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script type=<span class="string">"module"</span> src=<span class="string">"./lib.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  &lt;script type=<span class="string">"module"</span> src=<span class="string">"./app.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><p><strong>결과</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">100</span><br></pre></td></tr></table></figure><br>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/11/module/#disqus_thread</comments>
    </item>
    
    <item>
      <title>javascript-study-24[Ajax-TodoApp]</title>
      <link>http://yoursite.com/2019/11/09/javascript-study-24/</link>
      <guid>http://yoursite.com/2019/11/09/javascript-study-24/</guid>
      <pubDate>Sat, 09 Nov 2019 08:12:26 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/31315644/68525090-467ac600-0311-11ea-8f16-c79a28f2491e.png&quot; alt=&quot;Ajax_Todo&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/31315644/68525090-467ac600-0311-11ea-8f16-c79a28f2491e.png" alt="Ajax_Todo"></p><hr><h2 id="JavaScript-Study-24"><a href="#JavaScript-Study-24" class="headerlink" title="JavaScript Study 24"></a>JavaScript Study 24</h2><ul><li>Ajax를 이용한 Todos App 개발</li></ul><br><hr><br><h3 id="용어-러버덕"><a href="#용어-러버덕" class="headerlink" title="용어 - ( 러버덕 )"></a>용어 - ( 러버덕 )</h3><ul><li><p>GET</p></li><li><p>POST</p></li><li><p>PETCH</p></li><li><p>POP</p></li><li><p>DELETE</p><br></li></ul><hr><h2 id="Ajax를-이용한-Todos-App-개발"><a href="#Ajax를-이용한-Todos-App-개발" class="headerlink" title="Ajax를 이용한 Todos App 개발"></a>Ajax를 이용한 Todos App 개발</h2><h4 id="1-package-json-파일-및-app-js-파일-생성"><a href="#1-package-json-파일-및-app-js-파일-생성" class="headerlink" title="1. package.json 파일 및 app.js 파일 생성"></a>1. package.json 파일 및 app.js 파일 생성</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"server"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"start"</span>: <span class="string">"nodemon app"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"keywords"</span>: [],</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"express"</span>: <span class="string">"^4.17.1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"eslint"</span>: <span class="string">"^6.6.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-config-airbnb-base"</span>: <span class="string">"^14.0.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-plugin-html"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-plugin-import"</span>: <span class="string">"^2.18.2"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h4 id="2-npm-install"><a href="#2-npm-install" class="headerlink" title="2. npm install"></a>2. npm install</h4><p>package.json 파일 내용을 토대로 npm install 한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><br><h4 id="3-eslint-설치-및-적용"><a href="#3-eslint-설치-및-적용" class="headerlink" title="3. eslint 설치 및 적용"></a>3. eslint 설치 및 적용</h4><p>파일 코드를 깔끔하게 작성하기 위해서 eslint를 사용한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install eslint eslint-config-airbnb-base eslint-plugin-import eslint-plugin-html --save-dev</span><br></pre></td></tr></table></figure><p>그 후 <code>.eslintrc.js</code> 파일을 생성한다.</p><p><code>.eslintrc.js</code> 에 내용 추가</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  "parserOptions": &#123;</span><br><span class="line">  "ecmaVersion": 9</span><br><span class="line">  &#125;,</span><br><span class="line">  "env": &#123;</span><br><span class="line">    "browser": true,</span><br><span class="line">    "commonjs": true,</span><br><span class="line">    "node": true,</span><br><span class="line">    "jquery": true</span><br><span class="line">  &#125;,</span><br><span class="line">  "extends": "airbnb-base",</span><br><span class="line">  "plugins": [ "import", "html" ],</span><br><span class="line">  "rules": &#123;</span><br><span class="line">    // "off" or 0 - turn the rule off</span><br><span class="line">    // "warn" or 1 - turn the rule on as a warning (doesn’t affect exit code)</span><br><span class="line">    // "error" or 2 - turn the rule on as an error (exit code is 1 when triggered)</span><br><span class="line">    // "no-var": 0,</span><br><span class="line">    "prefer-arrow-callback": 0,</span><br><span class="line">    "no-console": 0, // "warn"</span><br><span class="line">    "no-plusplus": "off", // x</span><br><span class="line">    "vars-on-top": 0, // x</span><br><span class="line">    "eqeqeq": 0,</span><br><span class="line">    "quotes": [ "error", "single" ],</span><br><span class="line">    "no-underscore-dangle": "warn",</span><br><span class="line">    // "no-plusplus": [ "error", &#123; "allowForLoopAfterthoughts": true &#125;],</span><br><span class="line">    "comma-dangle": [ "error", "never"],</span><br><span class="line">    "no-nested-ternary": 0,</span><br><span class="line">    "no-param-reassign": 0</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br><p><strong>현재 폴더 상태</strong></p><p><img src="https://user-images.githubusercontent.com/31315644/66038841-33c0e480-e54e-11e9-9fc8-4277d185b003.jpeg" alt="설치 완료 후 폴더 상태"></p><br><h4 id="4-app-js에-내용-추가-백엔드"><a href="#4-app-js에-내용-추가-백엔드" class="headerlink" title="4. app.js에 내용 추가 ( 백엔드 )"></a>4. app.js에 내용 추가 ( 백엔드 )</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// express 패키지(모듈)를 가지고 온다.</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> todos = [</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">content</span>: <span class="string">'HTML'</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">content</span>: <span class="string">'CSS'</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">content</span>: <span class="string">'Javascirpt'</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 루트 폴더의 이름을 퍼블릭으로 할거야.</span></span><br><span class="line"><span class="comment">// 미들웨어 딱 1번만 실행됨.</span></span><br><span class="line">app.use(express.static(<span class="string">'public'</span>));</span><br><span class="line">app.use(express.json());</span><br><span class="line">app.use(express.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">true</span> &#125;)); <span class="comment">// for parsing</span></span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  res.send(<span class="string">'hello world!'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/todos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">'/todos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(req.body);</span><br><span class="line">  todos = [req.body, ...todos];</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// app.patch('/todos/:id([0-9])', (req, res) =&gt; &#123;</span></span><br><span class="line">app.patch(<span class="string">'/todos/:id'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = req.params; <span class="comment">// req.params.id</span></span><br><span class="line">  <span class="keyword">const</span> &#123; completed &#125; = req.body; <span class="comment">// req.body.completed;</span></span><br><span class="line">  todos = todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> (todo.id === +id ? &#123; ...todo, completed &#125; : todo));</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.delete(<span class="string">'/todos/:id'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = req.params; <span class="comment">// req.params.id</span></span><br><span class="line">  todos = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id !== +id);</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.delete(<span class="string">'/completedTodos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  todos = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> !todo.completed);</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.put(<span class="string">'/todos'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; completed &#125; = req.body;</span><br><span class="line">  todos = todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> (&#123; ...todo, completed &#125;));</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Server listening on port 3000'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br><h4 id="5-public-index-html-추가"><a href="#5-public-index-html-추가" class="headerlink" title="5. public/index.html 추가"></a>5. public/index.html 추가</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"ko"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Todos 2.0<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/style.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">defer</span> <span class="attr">src</span>=<span class="string">"js/index.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>Todos<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ver"</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"input-todo"</span> <span class="attr">placeholder</span>=<span class="string">"What needs to be done?"</span> <span class="attr">autofocus</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"all"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>All<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"active"</span>&gt;</span>Active<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"completed"</span>&gt;</span>Completed<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"todos"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;li id="myId" class="todo-item"&gt;</span></span><br><span class="line"><span class="comment">        &lt;input class="checkbox" type="checkbox" id="ck-myId"&gt;</span></span><br><span class="line"><span class="comment">        &lt;label for="ck-myId"&gt;HTML&lt;/label&gt;</span></span><br><span class="line"><span class="comment">        &lt;i class="remove-todo far fa-times-circle"&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="comment">      &lt;/li&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"complete-all"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"checkbox"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"ck-complete-all"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"ck-complete-all"</span>&gt;</span>Mark all as complete<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clear-completed"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span>Clear completed (<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"completed-todos"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">strong</span> <span class="attr">class</span>=<span class="string">"active-todos"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> items left</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h4 id="6-public-css-style-css-추가"><a href="#6-public-css-style-css-추가" class="headerlink" title="6. public/css/style.css 추가"></a>6. public/css/style.css 추가</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> url(<span class="string">'https://fonts.googleapis.com/css?family=Roboto:100,300,400,700|Noto+Sans+KR'</span>);</span><br><span class="line">@<span class="keyword">import</span> url(<span class="string">'https://use.fontawesome.com/releases/v5.5.0/css/all.css'</span>);</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'Roboto'</span>, <span class="string">'Noto Sans KR'</span>, sans-serif;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.9em</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#a9b0b4</span>; <span class="comment">/*#58666e;*/</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#505455</span>;<span class="comment">/*#f0f3f4;*/</span></span><br><span class="line">  <span class="attribute">-webkit-font-smoothing</span>: antialiased;</span><br><span class="line">  <span class="attribute">-moz-osx-font-smoothing</span>: grayscale;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">750px</span>;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">450px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.title</span> &#123;</span><br><span class="line">  <span class="comment">/* margin: 10px 0; */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">4.5em</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">100</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ver</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">100</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .input-todo  */</span></span><br><span class="line"><span class="selector-class">.input-todo</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">45px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.3333333</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#e7ecee</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">transition</span>: border-color ease-in-out .<span class="number">15s</span>,box-shadow ease-in-out .<span class="number">15s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.input-todo</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">1px</span> <span class="number">1px</span> <span class="built_in">rgba</span>(0, 0, 0, 0.075), <span class="number">0</span> <span class="number">0</span> <span class="number">8px</span> <span class="built_in">rgba</span>(102, 175, 233, 0.6);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.input-todo</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .nav */</span></span><br><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> &gt; <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> &gt; <span class="selector-tag">li</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todos</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .todo-item */</span></span><br><span class="line"><span class="selector-class">.todo-item</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="comment">/* display: block; */</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: -<span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#e7ecee</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">:first-child</span> &#123;</span><br><span class="line">  <span class="attribute">border-top-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">border-top-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">border-bottom-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  .checkbox</span></span><br><span class="line"><span class="comment">  .checkbox 바로 뒤에 위치한 label의 before와 after를 사용해</span></span><br><span class="line"><span class="comment">  .checkbox의 외부 박스와 내부 박스를 생성한다.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  &lt;input class="checkbox" type="checkbox" id="myId"&gt;</span></span><br><span class="line"><span class="comment">  &lt;label for="myId"&gt;Content&lt;/label&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span> + <span class="selector-tag">label</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute; <span class="comment">/* 부모 위치를 기준으로 */</span></span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">2em</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">35px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">user-select</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span> + <span class="selector-tag">label</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#cfdadd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checkbox</span><span class="selector-pseudo">:checked</span> + <span class="selector-tag">label</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#23b7e5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .remove-todo button */</span></span><br><span class="line"><span class="selector-class">.remove-todo</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -50%, 0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* todo-item이 호버 상태이면 삭제 버튼을 활성화 */</span></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">:hover</span> &gt; <span class="selector-class">.remove-todo</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.complete-all</span>, <span class="selector-class">.clear-completed</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">flex-basis</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clear-completed</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: right;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1px</span> <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: .<span class="number">8em</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#e6e6e6</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#adadad</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h4 id="7-public-js-index-js-추가"><a href="#7-public-js-index-js-추가" class="headerlink" title="7. public/js/index.js 추가"></a>7. public/js/index.js 추가</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> $todos = <span class="built_in">document</span>.querySelector(<span class="string">'.todos'</span>);</span><br><span class="line"><span class="keyword">const</span> $inputTodo = <span class="built_in">document</span>.querySelector(<span class="string">'.input-todo'</span>);</span><br><span class="line"><span class="keyword">const</span> $clearCompleted = <span class="built_in">document</span>.querySelector(<span class="string">'.clear-completed &gt; .btn'</span>);</span><br><span class="line"><span class="keyword">const</span> $completeAll = <span class="built_in">document</span>.querySelector(<span class="string">'.complete-all'</span>);</span><br><span class="line"><span class="keyword">const</span> $nav = <span class="built_in">document</span>.querySelector(<span class="string">'.nav'</span>);</span><br><span class="line"><span class="keyword">const</span> $completedTodos = <span class="built_in">document</span>.querySelector(<span class="string">'.completed-todos'</span>);</span><br><span class="line"><span class="keyword">const</span> $activeTodos = <span class="built_in">document</span>.querySelector(<span class="string">'.active-todos'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> todos = [];</span><br><span class="line"><span class="keyword">let</span> navID = <span class="string">'all'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// TODOS 데이터 요청 및 받아오기.</span></span><br><span class="line"><span class="keyword">const</span> ajax = <span class="function">(<span class="params">(</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> request = <span class="function">(<span class="params">method, url, fn, payload</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    xhr.open(method, url);</span><br><span class="line">    xhr.setRequestHeader(<span class="string">'Content-type'</span>, <span class="string">'application/json'</span>);</span><br><span class="line">    xhr.send(<span class="built_in">JSON</span>.stringify(payload));</span><br><span class="line"></span><br><span class="line">    xhr.onreadystatechange = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (xhr.readyState !== XMLHttpRequest.DONE) <span class="keyword">return</span>;</span><br><span class="line">      <span class="comment">// 200 정상 응답, POST는 가끔 201로 반환함.</span></span><br><span class="line">      <span class="keyword">if</span> (xhr.status === <span class="number">200</span> || xhr.status === <span class="number">201</span>) &#123;</span><br><span class="line">        fn(<span class="built_in">JSON</span>.parse(xhr.response)); <span class="comment">// 요청의 응답 된 데이터 처리</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.error(<span class="string">'error'</span>, xhr.status, xhr.statusText);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="keyword">get</span>(url, fn) &#123;</span><br><span class="line">      request(<span class="string">'GET'</span>, url, fn);</span><br><span class="line">    &#125;,</span><br><span class="line">    post(url, fn, payload) &#123;</span><br><span class="line">      request(<span class="string">'POST'</span>, url, fn, payload);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">delete</span>(url, fn) &#123;</span><br><span class="line">      request(<span class="string">'DELETE'</span>, url, fn);</span><br><span class="line">    &#125;,</span><br><span class="line">    patch(url, fn, payload) &#123;</span><br><span class="line">      request(<span class="string">'PATCH'</span>, url, fn, payload);</span><br><span class="line">    &#125;,</span><br><span class="line">    put(url, fn, payload) &#123;</span><br><span class="line">      request(<span class="string">'PUT'</span>, url, fn, payload);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="comment">// render 함수</span></span><br><span class="line"><span class="keyword">const</span> render = <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> html = <span class="string">''</span>;</span><br><span class="line">  todos = data;</span><br><span class="line"></span><br><span class="line">  todos = data.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> (navID === <span class="string">'all'</span> ? <span class="literal">true</span> : navID === <span class="string">'active'</span> ? !todo.completed : todo.completed));</span><br><span class="line"></span><br><span class="line">  todos.forEach(<span class="function">(<span class="params">&#123; id, content, completed &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    html += <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;li id="<span class="subst">$&#123;id&#125;</span>" class="todo-item"&gt;</span></span><br><span class="line"><span class="string">      &lt;input class="checkbox" type="checkbox" id="ck-<span class="subst">$&#123;id&#125;</span>" <span class="subst">$&#123;completed ? <span class="string">'checked'</span> : <span class="string">''</span>&#125;</span>&gt;</span></span><br><span class="line"><span class="string">      &lt;label for="ck-<span class="subst">$&#123;id&#125;</span>"&gt;<span class="subst">$&#123;content&#125;</span>&lt;/label&gt;</span></span><br><span class="line"><span class="string">      &lt;i class="remove-todo far fa-times-circle"&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="string">    &lt;/li&gt;`</span>;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  $completedTodos.textContent = data.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.completed).length;</span><br><span class="line">  $activeTodos.textContent = data.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> !todo.completed).length;</span><br><span class="line">  $todos.innerHTML = html;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'[RENDER]'</span>, todos);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 부가 기능 함수</span></span><br><span class="line"><span class="keyword">const</span> findMaxId = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">Math</span>.max(<span class="number">0</span>, ...todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id)) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 기능 함수</span></span><br><span class="line"><span class="keyword">const</span> getTodos = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  ajax.get(<span class="string">'./todos'</span>, render);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> postTodos = <span class="function">(<span class="params">content</span>) =&gt;</span> &#123;</span><br><span class="line">  ajax.post(<span class="string">'./todos'</span>, render, &#123; <span class="attr">id</span>: findMaxId(), content, <span class="attr">completed</span>: <span class="literal">false</span> &#125;);</span><br><span class="line">  $inputTodo.value = <span class="string">''</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> removeTodo = <span class="function">(<span class="params">id</span>) =&gt;</span> &#123;</span><br><span class="line">  ajax.delete(<span class="string">`./todos/<span class="subst">$&#123;id&#125;</span>`</span>, render);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// patch</span></span><br><span class="line"><span class="keyword">const</span> checkTodo = <span class="function">(<span class="params">id, checked</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> completed = checked;</span><br><span class="line">  <span class="comment">// const completed = !todos.find((todo) =&gt; todo.id === +id).completed;</span></span><br><span class="line">  ajax.patch(<span class="string">`./todos/<span class="subst">$&#123;id&#125;</span>`</span>, render, &#123; completed &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> toggleAll = <span class="function">(<span class="params">checked</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> completed = checked;</span><br><span class="line">  ajax.put(<span class="string">'./todos'</span>, render, &#123; completed &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> clearTodos = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  ajax.delete(<span class="string">'./completedTodos'</span>, render);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> changeNav = <span class="function">(<span class="params">target</span>) =&gt;</span> &#123;</span><br><span class="line">  [...$nav.children].forEach(<span class="function">(<span class="params">$list</span>) =&gt;</span> &#123;</span><br><span class="line">    $list.classList.toggle(<span class="string">'active'</span>, $list == target);</span><br><span class="line">    navID = target.id;</span><br><span class="line">  &#125;);</span><br><span class="line">  ajax.get(<span class="string">'./todos'</span>, render);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 이벤트 핸들러</span></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  getTodos();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$inputTodo.onkeyup = <span class="function">(<span class="params">&#123; target, keyCode &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (target.value.trim() === <span class="string">''</span> || keyCode !== <span class="number">13</span>) <span class="keyword">return</span>;</span><br><span class="line">  postTodos(target.value.trim());</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$todos.onclick = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!target.classList.contains(<span class="string">'remove-todo'</span>)) <span class="keyword">return</span>;</span><br><span class="line">  removeTodo(target.parentNode.id);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$todos.onchange = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  checkTodo(target.parentNode.id, target.checked);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$completeAll.onchange = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  toggleAll(target.checked);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$clearCompleted.onclick = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  clearTodos();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$nav.onclick = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (target.classList.contains(<span class="string">'nav'</span>)) <span class="keyword">return</span>;</span><br><span class="line">  changeNav(target);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/09/javascript-study-24/#disqus_thread</comments>
    </item>
    
    <item>
      <title>daily_quiz36</title>
      <link>http://yoursite.com/2019/11/09/daily-quiz36/</link>
      <guid>http://yoursite.com/2019/11/09/daily-quiz36/</guid>
      <pubDate>Sat, 09 Nov 2019 07:33:46 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/31315644/68995155-ddc1b980-08cd-11ea-96ca-ba0ac8a5f196.png&quot; alt=&quot;quiz&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;문
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/31315644/68995155-ddc1b980-08cd-11ea-96ca-ba0ac8a5f196.png" alt="quiz"></p><hr><p>문제 출처 : poiema</p><h3 id="Tabs-UI"><a href="#Tabs-UI" class="headerlink" title="Tabs UI"></a>Tabs UI</h3><p><img src="https://poiemaweb.com/assets/fs-images/exercise/popup-ui.gif" alt="popup-ui"></p><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"ko"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Popup<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    @<span class="keyword">import</span> url(https://fonts.googleapis.com/css?family=Open+Sans:<span class="number">300</span>,<span class="number">400</span>);</span></span><br><span class="line"></span><br><span class="line">    body &#123;</span><br><span class="line">      font-family: 'Open Sans';</span><br><span class="line">      font-weight: 300;</span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span>: <span class="selector-id">#D6E1E5</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    h1 &#123;</span><br><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#DB5B33</span>;</span></span><br><span class="line">      font-weight: 300;</span><br><span class="line">      text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="comment">/* CSS 작성 바랍니다. */</span></span></span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.overlay</span>&#123;</span></span><br><span class="line">      position: absolute;</span><br><span class="line">      top: 0;</span><br><span class="line">      left: 0;</span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">rgba</span>(0,0,0,<span class="selector-class">.3</span>);</span></span><br><span class="line">      width: 100vw;</span><br><span class="line">      height: 100vh;</span><br><span class="line">      display: none;</span><br><span class="line">      z-index: 10;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.popup</span> &#123;</span></span><br><span class="line">      background: white;</span><br><span class="line">      width: 700px;</span><br><span class="line">      position: absolute;</span><br><span class="line">      top: 50%;</span><br><span class="line">      left: 50%;</span><br><span class="line">      padding: 30px 20px;</span><br><span class="line">      margin: 0 auto;</span><br><span class="line"><span class="css">      <span class="selector-tag">box-shadow</span>: 0 35<span class="selector-tag">px</span> 15<span class="selector-tag">px</span> 0 <span class="selector-tag">rgba</span>(0,0,0,<span class="selector-class">.3</span>);</span></span><br><span class="line">      transform: translate(-50%, -50%);</span><br><span class="line">      display: none;</span><br><span class="line">      z-index: 15;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.btn-close</span>&#123;</span></span><br><span class="line">      position: absolute;</span><br><span class="line">      top: 0;</span><br><span class="line">      right: 0;;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>JavaScript Popup<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"popup"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>JavaScript Popup<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn-close"</span>&gt;</span>X<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn-ok"</span>&gt;</span>OK<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn-cancel"</span>&gt;</span>Cancel<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"overlay"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"toggle-popup"</span>&gt;</span>show popup<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"popup-message"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $popup = <span class="built_in">document</span>.querySelector(<span class="string">'.popup'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $togglePopup = <span class="built_in">document</span>.querySelector(<span class="string">'.toggle-popup'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $overlay = <span class="built_in">document</span>.querySelector(<span class="string">'.overlay'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $input = <span class="built_in">document</span>.querySelector(<span class="string">'.popup &gt; input'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $popupMessage = <span class="built_in">document</span>.querySelector(<span class="string">'.popup-message'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 기능</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> showDisplay = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">      $overlay.style.display = <span class="string">'inline'</span>;</span></span><br><span class="line"><span class="actionscript">      $popup.style.display = <span class="string">'inline'</span>;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> nonShowDisplay = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">      $overlay.style.display = <span class="string">'none'</span>;</span></span><br><span class="line"><span class="actionscript">      $popup.style.display = <span class="string">'none'</span>;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 이벤트</span></span></span><br><span class="line"><span class="javascript">    $togglePopup.onclick = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line">      showDisplay();</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    $overlay.onclick = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line">      nonShowDisplay();</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    $popup.onclick = <span class="function">(<span class="params">&#123; target &#125;</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">if</span> (target.classList.contains(<span class="string">'btn-cancel'</span>) || target.classList.contains(<span class="string">'btn-close'</span>)) &#123;</span></span><br><span class="line">        nonShowDisplay();</span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="keyword">if</span> (target.classList.contains(<span class="string">'btn-ok'</span>)) &#123;</span></span><br><span class="line"><span class="javascript">        $popupMessage.textContent = <span class="string">`form popup : <span class="subst">$&#123;$input.value&#125;</span>`</span>;</span></span><br><span class="line">        nonShowDisplay();</span><br><span class="line"><span class="actionscript">        $input.value = <span class="string">''</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h4 id="주요-코드"><a href="#주요-코드" class="headerlink" title="주요 코드"></a>주요 코드</h4><p>JS 보다 css때문에 힘들었던 문제다.</p><ol><li><p>팝업시 나타나는 회색 배경 처리</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.overlay</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(0,0,0,.3);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100vw</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">10</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>position을 absolute하여 화면에서 띄우고 화면의 넓이 , 높이를 전부다 다 100view로 맞춰놓았다.</p><p>클릭시 display만 바꿔주면 되기 때문에 <code>none</code>처리 하였고 마크업상 overlay 나중에 나오기 때문에 z-index를 낮게 줌으로써 뒤에서 보이게끔 설정하였다.</p><br></li><li><p>팝업시 나타는 화면 처리</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.popup</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: white;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">700px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">30px</span> <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">35px</span> <span class="number">15px</span> <span class="number">0</span> <span class="built_in">rgba</span>(0,0,0,.3);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">15</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 팝업 클릭시 나타나는 화면은 현재 보는 화면에서 정중앙에 띄워서 나타나야 되기 때문에, position : absolute 를 주었고, 현재 위치에 중앙 위치인 top 50% , left 50% 에 transform: translate(-50%,-50%)를 줘서 정확히 반에 위치하게끔 설정하였다.</p><p>overlay보다 위에 있어야되기 때문에 z-index를 15주로 설정하였다.</p><br></li><li><p>삭제 버튼</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.btn-close</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  right: 0;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>삭제 버튼의 위치가 오른쪽 상단에 걸쳐야되기 때문에 absolute로 하여 top:0 right:0을 주웠다.</p></li></ol>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/09/daily-quiz36/#disqus_thread</comments>
    </item>
    
    <item>
      <title>daily_quiz35</title>
      <link>http://yoursite.com/2019/11/08/daily-quiz35/</link>
      <guid>http://yoursite.com/2019/11/08/daily-quiz35/</guid>
      <pubDate>Fri, 08 Nov 2019 07:31:45 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/31315644/68995155-ddc1b980-08cd-11ea-96ca-ba0ac8a5f196.png&quot; alt=&quot;quiz&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;문
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/31315644/68995155-ddc1b980-08cd-11ea-96ca-ba0ac8a5f196.png" alt="quiz"></p><hr><p>문제 출처 : poiema</p><h3 id="Stop-Watch"><a href="#Stop-Watch" class="headerlink" title="Stop Watch"></a>Stop Watch</h3><p><img src="https://poiemaweb.com/assets/fs-images/exercise/analog-clock.gif" alt="img"></p><ul><li>요구 사항 : 현재 시간을 표시하여야 한다.</li></ul><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Analog Clock<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    @<span class="keyword">import</span> url(<span class="string">'https://fonts.googleapis.com/css?family=Source+Code+Pro'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.analog-clock</span> &#123;</span></span><br><span class="line">      position: relative;</span><br><span class="line">      margin: 100px auto 0;</span><br><span class="line">      width: 200px;</span><br><span class="line">      height: 200px;</span><br><span class="line">      background-color: aliceblue;</span><br><span class="line">      border-radius: 50%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.hand</span> &#123;</span></span><br><span class="line">      position: absolute;</span><br><span class="line">      left: 50%;</span><br><span class="line">      width: 1px;</span><br><span class="line">      height: 100px;</span><br><span class="line"><span class="css">      <span class="comment">/* 자바스크립트에 의해 덮어써진다. */</span></span></span><br><span class="line"><span class="css">      <span class="comment">/* transform: translate3d(-50%, 0, 0); */</span></span></span><br><span class="line">      transform-origin: 100% 100%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.hour</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span>: <span class="selector-id">#f44336</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.minute</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span>: <span class="selector-id">#3f51b5</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.second</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span>: <span class="selector-id">#9e9e9e</span>;</span></span><br><span class="line"><span class="css">      <span class="comment">/* transform: rotate(100deg); */</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.center-circle</span> &#123;</span></span><br><span class="line">      position: absolute;</span><br><span class="line">      top: 50%;</span><br><span class="line">      left: 50%;</span><br><span class="line">      transform: translate3d(-50%, -50%, 0);</span><br><span class="line">      width: 12px;</span><br><span class="line">      height: 12px;</span><br><span class="line">      background-color: black;</span><br><span class="line">      border-radius: 50%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.digital-clock</span> &#123;</span></span><br><span class="line">      position: absolute;</span><br><span class="line">      top: 350px;</span><br><span class="line">      left: 50%;</span><br><span class="line">      transform: translate3d(-50%, 0, 0);</span><br><span class="line">      font-size: 2em;</span><br><span class="line">      font-family: 'Source Code Pro', monospace;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"analog-clock"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hour hand"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"minute hand"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"second hand"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center-circle"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"digital-clock"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// transform: rotate(100deg);</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $second = <span class="built_in">document</span>.querySelector(<span class="string">'.second'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $minute = <span class="built_in">document</span>.querySelector(<span class="string">'.minute'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $hour = <span class="built_in">document</span>.querySelector(<span class="string">'.hour'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $digitalClock = <span class="built_in">document</span>.querySelector(<span class="string">'.digital-clock'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> sTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getSeconds();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> mTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getMinutes();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> hTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getHours();</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// const format = (num) =&gt; &#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//   num += '';</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//   if (num.length == 1) &#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     num = `0$&#123;num&#125;`;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//   &#125;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//   return num;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// &#125;;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> format2 = <span class="function">(<span class="params">num</span>) =&gt;</span> (<span class="built_in">String</span>(num).length == <span class="number">1</span> ? <span class="string">`0<span class="subst">$&#123;num&#125;</span>`</span> : <span class="string">`<span class="subst">$&#123;num&#125;</span>`</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> timer = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      $second.style.transform = <span class="string">`rotate(<span class="subst">$&#123;sTime * <span class="number">6</span>&#125;</span>deg)`</span>;</span></span><br><span class="line"><span class="javascript">      $minute.style.transform = <span class="string">`rotate(<span class="subst">$&#123;mTime * <span class="number">6</span> + sTime * <span class="number">0.1</span>&#125;</span>deg)`</span>;</span></span><br><span class="line"><span class="javascript">      $hour.style.transform = <span class="string">`rotate(<span class="subst">$&#123;(hTime % <span class="number">12</span>) * <span class="number">30</span> + mTime * <span class="number">0.5</span>&#125;</span>deg)`</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      $digitalClock.innerHTML = <span class="string">`<span class="subst">$&#123;format2(hTime)&#125;</span>:<span class="subst">$&#123;format2(mTime)&#125;</span>:<span class="subst">$&#123;format2(sTime)&#125;</span>`</span>;</span></span><br><span class="line">      sTime++;</span><br><span class="line"><span class="actionscript">      <span class="keyword">if</span> (sTime &gt;= <span class="number">60</span>) &#123;</span></span><br><span class="line">        mTime++;</span><br><span class="line">        sTime = 0;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">      <span class="keyword">if</span> (mTime &gt;= <span class="number">60</span>) &#123;</span></span><br><span class="line">        hTime++;</span><br><span class="line">        mTime = 0;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">      <span class="keyword">if</span> (hTime &gt; <span class="number">23</span>) &#123;</span></span><br><span class="line">        hTime = 0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.setInterval(timer, <span class="number">1000</span>);</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h4 id="주요-코드"><a href="#주요-코드" class="headerlink" title="주요 코드"></a>주요 코드</h4><ol><li>숫자가 1자리 수 일 때는 앞에 0을 붙인 문자열 변환</li></ol><p>해당 문제에서 제일 난해한 부분은 특정 수 일 때 문자열로 변환을 해줘야만 한다는 것이었다.</p><p>따라 해당 시간을 화면에 보여주기 전에 먼저 문자열로 바꿔주면서 문자열 1자리 수라면 0을 앞에 붙이는 함수를 추가하였다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// const format = (num) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   num += '';</span></span><br><span class="line"><span class="comment">//   if (num.length == 1) &#123;</span></span><br><span class="line"><span class="comment">//     num = `0$&#123;num&#125;`;</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">//   return String(num);</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> format2 = <span class="function">(<span class="params">num</span>) =&gt;</span> ((num + <span class="string">''</span>).length === <span class="number">1</span> ? <span class="string">`0<span class="subst">$&#123;num&#125;</span>`</span> : <span class="string">`<span class="subst">$&#123;num&#125;</span>`</span>);</span><br></pre></td></tr></table></figure><br><ol start="2"><li>시간 알고리즘</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> timer = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">     $second.style.transform = <span class="string">`rotate(<span class="subst">$&#123;sTime * <span class="number">6</span>&#125;</span>deg)`</span>;</span><br><span class="line">     $minute.style.transform = <span class="string">`rotate(<span class="subst">$&#123;mTime * <span class="number">6</span> + sTime * <span class="number">0.1</span>&#125;</span>deg)`</span>;</span><br><span class="line">     $hour.style.transform = <span class="string">`rotate(<span class="subst">$&#123;(hTime % <span class="number">12</span>) * <span class="number">30</span> + mTime * <span class="number">0.5</span>&#125;</span>deg)`</span>;</span><br><span class="line"></span><br><span class="line">     $digitalClock.innerHTML = <span class="string">`<span class="subst">$&#123;format2(hTime)&#125;</span>:<span class="subst">$&#123;format2(mTime)&#125;</span>:<span class="subst">$&#123;format2(sTime)&#125;</span>`</span>;</span><br><span class="line">     sTime++;</span><br><span class="line">     <span class="keyword">if</span> (sTime &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">       mTime++;</span><br><span class="line">       sTime = <span class="number">0</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (mTime &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">       hTime++;</span><br><span class="line">       mTime = <span class="number">0</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (hTime &gt; <span class="number">23</span>) &#123;</span><br><span class="line">       hTime = <span class="number">0</span>;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;;</span><br></pre></td></tr></table></figure><p>360도 기준 1초는 6도이므로 x6을 한다. : <code>rotate(${sTime * 6}deg)</code></p><p>360도 기준 1분은 6도이므로 x6을 하고 1초가 60번을 움직여야만 1분이 움직이게 되므로 자연스러운 움직임을 위해 1초당 0.1도씩(60초 후 6도)움직이게 설정한다. : <code>rotate(${mTime * 6 + sTime * 0.1}deg)</code></p><p>360도 기준 1시간은 30도인데 시간은 24시간이므로 12를 나눠서 나온 나머지를 가지고 처리한다.<br>그리고 1분이 60번을 움직여야 1시간이 움직이게 되므로 자연스러운 움직임을 위해 1분당 0.5도씩(60분 후 30도) 움직이게 설정한다. : <code>rotate(${(hTime % 12) * 30 + mTime * 0.5}deg)</code></p><br><p><strong>디지털 시계</strong></p><p>디지털 시계는 초부터 1씩 숫자를 증가시켜 초가 60을 넘기게 될 경우 0으로 만들고 분에 1을 더해준다.</p><p>분 역시 60을 넘기게 될 경우 0으로 만들고 시간에 1을 더 해준다.</p><p>시간은 23시( 정수이므로 24가 딱 되는 순간 )를 넘어가게 될 경우 0으로 초기화 해준다.</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/08/daily-quiz35/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Promise</title>
      <link>http://yoursite.com/2019/11/08/Promise/</link>
      <guid>http://yoursite.com/2019/11/08/Promise/</guid>
      <pubDate>Fri, 08 Nov 2019 00:33:48 GMT</pubDate>
      <description>
      
        
        
          &lt;img src=&quot;https://user-images.githubusercontent.com/31315644/68408656-19bb9700-01c9-11ea-96d8-65e42b4d349d.jpg&quot; alt=&quot;pinky&quot; style=&quot;zoom: 50%
        
      
      </description>
      
      
      <content:encoded><![CDATA[<img src="https://user-images.githubusercontent.com/31315644/68408656-19bb9700-01c9-11ea-96d8-65e42b4d349d.jpg" alt="pinky" style="zoom: 50%;"><hr><h2 id="JavaScript-프로미스-Promise"><a href="#JavaScript-프로미스-Promise" class="headerlink" title="JavaScript 프로미스 ( Promise )"></a>JavaScript 프로미스 ( Promise )</h2><ul><li><p>프로미스 ( Promise )</p><ul><li><p>프로미스란?</p></li><li><p>콜백 패턴의 단점</p><ol><li>콜백 헬</li><li>에러 처리의 한계</li></ol></li><li><p><a href="#a1">프로미스의 생성</a></p></li><li><p><a href="#a2">프로미스의 후속 처리 메소드</a></p></li><li><p><a href="#a3">프로미스의 에러 처리</a></p></li><li><p><a href="#a4">프로미스 체이닝</a></p></li><li><p><a href="#a5">프로미스의 정적 메소드</a></p><ul><li><p><a href="#a6">Promise.resolve / Promise.reject</a></p></li><li><p><a href="#a7">Promise.all</a></p></li><li><p><a href="#a8">Promise.race</a></p></li></ul></li></ul></li></ul><br><hr><h2 id="프로미스-Promise"><a href="#프로미스-Promise" class="headerlink" title="프로미스 ( Promise )"></a>프로미스 ( Promise )</h2><br><h3 id="프로미스란"><a href="#프로미스란" class="headerlink" title="프로미스란?"></a>프로미스란?</h3><blockquote><p> 콜백함수의 단점(구린 가독성, 에러의 예외처리가 힘듬, 여러개의 비동기 처리 로직 불가 등등)을 해결하기 위해서 ES6에 생긴 패턴.</p><p> <strong>전통적인 콜백 패턴이 가진 단점을 보완하며 비동기 처리 시점을 명확하게 표현한다.</strong></p></blockquote><br><h3 id="콜백-패턴의-단점"><a href="#콜백-패턴의-단점" class="headerlink" title="콜백 패턴의 단점"></a>콜백 패턴의 단점</h3><h4 id="1-콜백-헬"><a href="#1-콜백-헬" class="headerlink" title="1. 콜백 헬"></a>1. 콜백 헬</h4><p>JS의 대부분의 DOM 이벤트와 Timer 함수(setTimeout, setInterval), Ajax 요청은 비동기식 처리 모델로 동작한다.</p><img src="https://poiemaweb.com/img/asynchronous.png" alt="asynchronous" style="zoom:48%;"><p>이러한 비동기식 처리 모델은 요청을 병렬로 처리해 다른 요청이 블로킹되지 않고 수행된다는 장점이 있다.</p><p>문제는, 비동기 처리를 위해 콜백 패턴을 남발하고 처리 순서 보장을 위해서 여러개의 콜백 함수가 중첩되어 복잡도가 증가한다면, <strong>콜벡 헬</strong>이 발생한다. <strong>콜백 헬은 가독성을 나쁘게 하며 실수를 유발하는 원인이 된다.</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 콜백헬. 멸망의 피라미드</span></span><br><span class="line">step1(<span class="function"><span class="keyword">function</span>(<span class="params">value1</span>) </span>&#123;</span><br><span class="line">  step2(value1, <span class="function"><span class="keyword">function</span>(<span class="params">value2</span>) </span>&#123;</span><br><span class="line">    step3(value2, <span class="function"><span class="keyword">function</span>(<span class="params">value3</span>) </span>&#123;</span><br><span class="line">      step4(value3, <span class="function"><span class="keyword">function</span>(<span class="params">value4</span>) </span>&#123;</span><br><span class="line">        step5(value4, <span class="function"><span class="keyword">function</span>(<span class="params">value5</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// value5를 사용하는 처리</span></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="comment">// 비동기 함수</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// XMLHttpRequest 객체 생성</span></span><br><span class="line">      <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 서버 응답 시 호출될 이벤트 핸들러</span></span><br><span class="line">      xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 서버 응답 완료가 아니면 무시</span></span><br><span class="line">        <span class="keyword">if</span> (xhr.readyState !== XMLHttpRequest.DONE) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (xhr.status === <span class="number">200</span>) &#123; <span class="comment">// 정상 응답</span></span><br><span class="line">          <span class="built_in">console</span>.log(xhr.response);</span><br><span class="line">          <span class="comment">// 비동기 함수의 결과에 대한 처리는 반환할 수 없다.</span></span><br><span class="line">          <span class="keyword">return</span> xhr.response; <span class="comment">// ①</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// 비정상 응답</span></span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">'Error: '</span> + xhr.status);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 비동기 방식으로 Request 오픈</span></span><br><span class="line">      xhr.open(<span class="string">'GET'</span>, url);</span><br><span class="line">      <span class="comment">// Request 전송</span></span><br><span class="line">      xhr.send();</span><br><span class="line">    &#125;</span><br><span class="line"> <span class="comment">// 비동기 함수 내의 readystatechange 이벤트 핸들러에서 처리 결과를 반환(①)하면 순서가 보장되지 않는다.</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">get</span>('http://jsonplaceholder.typicode.com/posts/1');</span><br><span class="line">    console.log(res); // ② undefined</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>현재 실행 순서는 크게 다음 과 같다.</p><p>get 함수 호출 -&gt; get함수 내부의 onreadystatechange 별도로 실행(콜백함수) -&gt; xhr.open호출 -&gt; xhr.send호출 -&gt; </p><p>get함수 종료(return이 없으므로 undefined 반환) -&gt; console.log호출 -&gt; onreadystatechange호출 순이다.</p><p>즉, get함수는 제대로된 값을 반환하지 못한다. get 함수의 반환 결과를 제대로 하기 위해서는 해당 비동기 함수(get)의 콜백함수(onreadystatechange) 내에서 처리를 해야한다. 이로 인해 <strong>콜백 헬( Callback Hell )이 발생</strong>한다.</p><p>이러한 콜백 헬( Callback Hell )은 코드의 가독성을 나쁘게 하고 복잡도를 증가시켜 실수를 유발하는 원인이 되며 <strong>에러 처리가 곤란</strong>하다.</p><br><h4 id="2-에러-처리의-한계"><a href="#2-에러-처리의-한계" class="headerlink" title="2. 에러 처리의 한계"></a>2. 에러 처리의 한계</h4><p>콜백 방식의 비동기 처리가 갖는 문제점 중에서 가장 심각한 것은 에러 처리가 곤란하다는 것.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Error!'</span>); &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'에러를 캐치하지 못한다..'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><code>try</code> 블록 안에서 setTimeout 함수가 실행된다. (여기서 setTimeout은 비동기 함수다.)</li><li>setTimeout함수는 호출 스택으로 들어가고 즉시 종료된다.</li><li>tick 이벤트가 발생하면 콜백함수는 태스크 큐로 넘어간다.</li><li>태스크큐에 있는 콜백함수는 호출 스택이 비워진 것을 확인하고 호출 스택으로 넘어가고 실행된다.</li></ol><p>이 때 예외처리는 호출자 방향( setTimeout 함수 ) 으로 전파된다. 강제로 <code>throw 에러</code>를 던져도 콜백함수가 호출 스택에 도착했을 때 이미 setTimeout은 호출스택에서 사라졌기 때문에 콜백함수를 호출 한 것은 setTimeout 함수가 아니라는 결론을 내리게된다. </p><p>따라서 setTimeout 함수의 콜백 함수 내에서 발생시킨 에러는 catch 블록에서 캐치되지 않아 프로세스는 종료된다.</p><br><h3 id="프로미스의-생성"><a href="#프로미스의-생성" class="headerlink" title="프로미스의 생성 "></a>프로미스의 생성 <a id="a1"></a></h3><blockquote><p>프로미스는 Promise 생성자 함수를 통해 인스턴스화한다. </p><p>비동기 작업을 수행할 콜백 함수를 인자로 전달 받는다. (resolve , reject)</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Promise 객체의 생성</span></span><br><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 비동기 작업을 수행한다.</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="comment">/* 비동기 작업 수행 성공 */</span>) &#123;</span><br><span class="line">    resolve(<span class="string">'result'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123; <span class="comment">/* 비동기 작업 수행 실패 */</span></span><br><span class="line">    reject(<span class="string">'failure reason'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Promise는 비동기 처리가 성공(fulfilled)하였는지 또는 실패(rejected)하였는지 등의 상태(state) 정보를 갖는다.</p><table><thead><tr><th align="left">상태</th><th align="left">의미</th><th align="left">구현</th></tr></thead><tbody><tr><td align="left">pending</td><td align="left">비동기 처리가 아직 수행되지 않은 상태</td><td align="left">resolve 또는 reject 함수가 아직 호출되지 않은 상태</td></tr><tr><td align="left"><strong>fulfilled</strong></td><td align="left">비동기 처리가 수행된 상태 (성공)</td><td align="left">resolve 함수가 호출된 상태</td></tr><tr><td align="left"><strong>rejected</strong></td><td align="left">비동기 처리가 수행된 상태 (실패)</td><td align="left">reject 함수가 호출된 상태</td></tr><tr><td align="left">settled</td><td align="left">비동기 처리가 수행된 상태 (성공 또는 실패)</td><td align="left">resolve 또는 reject 함수가 호출된 상태</td></tr></tbody></table><p>Promise 함수가 인자(resolve, reject)로 전달 받은 콜백함수는 내부에서 비동기 처리 작업을 수행한다.</p><p>비동기 처리가 성공시 resolve를 호출하고 ‘fullfilled’ 상태가 된다.</p><p>비동기 처리가 실패시 reject를 호출하고 ‘rejected’ 상태가 된다.</p><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promiseAjax = <span class="function">(<span class="params">method, url, payload</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    xhr.open(method, url);</span><br><span class="line">    xhr.setRequestHeader(<span class="string">'Content-type'</span>, <span class="string">'application/json'</span>);</span><br><span class="line">    xhr.send(<span class="built_in">JSON</span>.stringify(payload));</span><br><span class="line"></span><br><span class="line">    xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 서버 응답 완료가 아니면 무시</span></span><br><span class="line">      <span class="keyword">if</span> (xhr.readyState !== XMLHttpRequest.DONE) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (xhr.status &gt;= <span class="number">200</span> &amp;&amp; xhr.status &lt; <span class="number">400</span>) &#123;</span><br><span class="line">        <span class="comment">// resolve 메소드를 호출하면서 처리 결과를 전달</span></span><br><span class="line">        resolve(xhr.response); <span class="comment">// Success!</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// reject 메소드를 호출하면서 에러 메시지를 전달</span></span><br><span class="line">        reject(<span class="keyword">new</span> <span class="built_in">Error</span>(xhr.status)); <span class="comment">// Failed...</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol><li>비동기 함수 내에서 Promise 객체를 생성하고 Promise 내부에서 비동기 처리를 구현한다.</li><li>비동기 처리에 성공하면 resolve 메소드를 호출한다.  (실패하면 reject 메소드 호출)</li><li>이 때, resolve 메소드의 인자로 비동기 처리를 전달힌다. (reject 메소드의 인자로 에러메시지 전달)</li><li>처리 결과는 Promise 객체의 후속 처리 메소드로 전달된다. </li></ol><br><h3 id="프로미스의-후속-처리-메소드"><a href="#프로미스의-후속-처리-메소드" class="headerlink" title="프로미스의 후속 처리 메소드 "></a>프로미스의 후속 처리 메소드 <a id="a2"></a></h3><blockquote><p>Promise로 구현된 비동기 함수는 Promise 객체를 반환하여야 한다</p><p>Promise로 구현된 비동기 함수를 호출하는 측(promise consumer)에서는 Promise 객체의 후속 처리 메소드(then, catch)를 통해 비동기 처리 결과 또는 에러 메시지를 전달받아 처리한다.</p><p>Promise의 상태에 따라 후속 처리 메소드를 체이닝 방식으로 호출한다.</p></blockquote><ul><li><p>then</p><p>then 메소드는 두 개의 콜백 함수를 인자로 전달 받는다.<br>첫 번째 콜백 함수는 성공(fulfilled, resolve 함수가 호출된 상태) 시 호출된다.<br>두 번째 함수는 실패(rejected, reject 함수가 호출된 상태) 시 호출된다.<br><strong>then 메소드는 Promise를 반환한다.</strong></p></li><li><p>catch</p><p>예외(비동기 처리에서 발생한 에러와 then 메소드에서 발생한 에러)가 발생하면 호출된다.<br>catch 메소드는 Promise를 반환한다.</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pre</span> <span class="attr">class</span>=<span class="string">"result"</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $result = <span class="built_in">document</span>.querySelector(<span class="string">'.result'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> render = <span class="function"><span class="params">content</span> =&gt;</span> &#123; $result.textContent = <span class="built_in">JSON</span>.stringify(content, <span class="literal">null</span>, <span class="number">2</span>); &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> promiseAjax = <span class="function">(<span class="params">method, url, payload</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line">        xhr.open(method, url);</span><br><span class="line"><span class="actionscript">        xhr.setRequestHeader(<span class="string">'Content-type'</span>, <span class="string">'application/json'</span>);</span></span><br><span class="line"><span class="javascript">        xhr.send(<span class="built_in">JSON</span>.stringify(payload));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">if</span> (xhr.readyState !== XMLHttpRequest.DONE) <span class="keyword">return</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">          <span class="keyword">if</span> (xhr.status &gt;= <span class="number">200</span> &amp;&amp; xhr.status &lt; <span class="number">400</span>) &#123;</span></span><br><span class="line"><span class="actionscript">            resolve(xhr.response); <span class="comment">// Success!</span></span></span><br><span class="line"><span class="actionscript">          &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            reject(<span class="keyword">new</span> <span class="built_in">Error</span>(xhr.status)); <span class="comment">// Failed...</span></span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    /*</span><br><span class="line"><span class="javascript">      비동기 함수 promiseAjax은 <span class="built_in">Promise</span> 객체를 반환한다.</span></span><br><span class="line"><span class="javascript">      <span class="built_in">Promise</span> 객체의 후속 메소드를 사용하여 비동기 처리 결과에 대한 후속 처리를 수행한다.</span></span><br><span class="line">    */</span><br><span class="line"><span class="actionscript">    promiseAjax(<span class="string">'GET'</span>, <span class="string">'http://jsonplaceholder.typicode.com/posts/1'</span>)</span></span><br><span class="line"><span class="javascript">      .then(<span class="built_in">JSON</span>.parse)</span></span><br><span class="line"><span class="vbscript">      .<span class="keyword">then</span>(</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 첫 번째 콜백 함수는 성공(fulfilled, resolve 함수가 호출된 상태) 시 호출된다.</span></span></span><br><span class="line">        render,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 두 번째 함수는 실패(rejected, reject 함수가 호출된 상태) 시 호출된다.</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.error</span></span><br><span class="line">      );</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h3 id="프로미스의-에러-처리"><a href="#프로미스의-에러-처리" class="headerlink" title="프로미스의 에러 처리 "></a>프로미스의 에러 처리 <a id="a3"></a></h3><p>위 예제의 비동기 함수 get은 Promise 객체를 반환한다. </p><p>Promise 객체의 후속 처리 메소드를 사용하여 비동기 처리 결과에 대한 후속 처리를 수행한다. 비동기 처리 시 발생한 에러 메시지는 then 메소드의 두 번째 콜백 함수로 전달된다. </p><p><strong>Promise 객체의 후속 처리 메소드 catch을 사용하여도 에러를 처리할 수 있다.</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">promiseAjax(<span class="string">'GET'</span>, <span class="string">'http://jsonplaceholder.typicode.com/posts/1'</span>)</span><br><span class="line">  .then(<span class="built_in">JSON</span>.parse)</span><br><span class="line">  .then(render)</span><br><span class="line">  .catch(<span class="built_in">console</span>.error);</span><br></pre></td></tr></table></figure><ul><li>then 메소드의 두 번째 콜백 함수는 비동기 처리에서 발생한 에러( reject 함수가 호출된 상태 )만을 캐치한다. </li><li>catch 메소드는 비동기 처리에서 발생한 에러( reject 함수가 호출된 상태 )뿐만 아니라 then 메소드 내부에서 발생한 에러도 캐치한다. <strong>따라서 에러 처리는 catch 메소드를 사용하는 편이 보다 효율적이다.</strong></li></ul><br><h3 id="프로미스-체이닝"><a href="#프로미스-체이닝" class="headerlink" title="프로미스 체이닝 "></a>프로미스 체이닝 <a id="a4"></a></h3><p>비동기 함수의 처리 결과를 가지고 다른 비동기 함수를 호출해야 하는 경우, 함수의 호출이 중첩(nesting)이 되어 복잡도가 높아지는 콜백 헬이 발생한다. </p><blockquote><p>프로미스는 후속 처리 메소드를 체이닝(chainning)하여 여러 개의 프로미스를 연결하여 사용할 수 있다. </p><p>이로써 콜백 헬을 해결한다.</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pre</span> <span class="attr">class</span>=<span class="string">"result"</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $result = <span class="built_in">document</span>.querySelector(<span class="string">'.result'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> render = <span class="function"><span class="params">content</span> =&gt;</span> &#123; $result.textContent = <span class="built_in">JSON</span>.stringify(content, <span class="literal">null</span>, <span class="number">2</span>); &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> promiseAjax = <span class="function">(<span class="params">method, url, payload</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line">        xhr.open(method, url);</span><br><span class="line"><span class="actionscript">        xhr.setRequestHeader(<span class="string">'Content-type'</span>, <span class="string">'application/json'</span>);</span></span><br><span class="line"><span class="javascript">        xhr.send(<span class="built_in">JSON</span>.stringify(payload));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">if</span> (xhr.readyState !== XMLHttpRequest.DONE) <span class="keyword">return</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">          <span class="keyword">if</span> (xhr.status &gt;= <span class="number">200</span> &amp;&amp; xhr.status &lt; <span class="number">400</span>) &#123;</span></span><br><span class="line"><span class="actionscript">            resolve(xhr.response); <span class="comment">// Success!</span></span></span><br><span class="line"><span class="actionscript">          &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            reject(<span class="keyword">new</span> <span class="built_in">Error</span>(xhr.status)); <span class="comment">// Failed...</span></span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> url = <span class="string">'http://jsonplaceholder.typicode.com/posts'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 포스트 id가 1인 포스트를 검색하고 프로미스를 반환한다.</span></span></span><br><span class="line"><span class="javascript">    promiseAjax(<span class="string">'GET'</span>, <span class="string">`<span class="subst">$&#123;url&#125;</span>/1`</span>)</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 포스트 id가 1인 포스트를 작성한 사용자의 아이디로 작성된 모든 포스트를 검색하고 프로미스를 반환한다.</span></span></span><br><span class="line"><span class="javascript">      .then(<span class="function"><span class="params">res</span> =&gt;</span> promiseAjax(<span class="string">'GET'</span>, <span class="string">`<span class="subst">$&#123;url&#125;</span>?userId=<span class="subst">$&#123;<span class="built_in">JSON</span>.parse(res).userId&#125;</span>`</span>))</span></span><br><span class="line"><span class="javascript">      .then(<span class="built_in">JSON</span>.parse)</span></span><br><span class="line"><span class="vbscript">      .<span class="keyword">then</span>(render)</span></span><br><span class="line"><span class="javascript">      .catch(<span class="built_in">console</span>.error);</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Promise 객체를 반환한 비동기 함수는 프로미스 후속 처리 메소드인 then이나 catch 메소드를 사용할 수 있다. </p><p>따라서 then 메소드가 Promise 객체를 반환하도록 하면(then 메소드는 기본적으로 Promise를 반환한다.) 여러 개의 프로미스를 연결하여 사용할 수 있다.</p><br><h3 id="프로미스의-정적-메소드"><a href="#프로미스의-정적-메소드" class="headerlink" title="프로미스의 정적 메소드 "></a>프로미스의 정적 메소드 <a id="a5"></a></h3><p>Promise는 주로 생성자 함수로 사용되지만 함수도 객체이므로 메소드를 갖을 수 있다. </p><p>Promise 객체는 4가지 정적 메소드를 제공한다. (resolve, reject, all, race)</p><br><h4 id="Promise-resolve-Promise-reject"><a href="#Promise-resolve-Promise-reject" class="headerlink" title="Promise.resolve / Promise.reject "></a>Promise.resolve / Promise.reject <a id="a6"></a></h4><p>Promise.resolve와 Promise.reject 메소드는 존재하는 값을 Promise로 래핑하기 위해 사용한다.</p><p>정적 메소드 Promise.resolve 메소드는 인자로 전달된 값을 resolve하는 Promise를 생성한다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> resolvedPromise = <span class="built_in">Promise</span>.resolve([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);</span><br><span class="line">resolvedPromise.then(<span class="built_in">console</span>.log); <span class="comment">// [ 1, 2, 3 ]</span></span><br></pre></td></tr></table></figure><p>위 예제는 아래 예제와 동일하게 동작한다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> resolvedPromise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> resolve([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]));</span><br><span class="line">resolvedPromise.then(<span class="built_in">console</span>.log); <span class="comment">// [ 1, 2, 3 ]</span></span><br></pre></td></tr></table></figure><p>Promise.reject 메소드는 인자로 전달된 값을 reject하는 프로미스를 생성한다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> rejectedPromise = <span class="built_in">Promise</span>.reject(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Error!'</span>));</span><br><span class="line">rejectedPromise.catch(<span class="built_in">console</span>.log); <span class="comment">// Error: Error!</span></span><br></pre></td></tr></table></figure><p>위 예제는 아래 예제와 동일하게 동작한다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> rejectedPromise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> reject(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Error!'</span>)));</span><br><span class="line">rejectedPromise.catch(<span class="built_in">console</span>.log); <span class="comment">// Error: Error!</span></span><br></pre></td></tr></table></figure><br><h4 id="Promise-all"><a href="#Promise-all" class="headerlink" title="Promise.all "></a>Promise.all <a id="a7"></a></h4><p>Promise.all 메소드는 프로미스가 담겨 있는 배열 등의 <a href="https://poiemaweb.com/es6-iteration-for-of" target="_blank" rel="noopener">이터러블</a>을 인자로 전달 받는다.</p><p> 전달받은 모든 프로미스를 병렬로 처리하고 그 처리 결과를 resolve하는 새로운 프로미스를 반환한다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.all([</span><br><span class="line">  <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> resolve(<span class="number">1</span>), <span class="number">3000</span>)), <span class="comment">// 1</span></span><br><span class="line">  <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> resolve(<span class="number">2</span>), <span class="number">2000</span>)), <span class="comment">// 2</span></span><br><span class="line">  <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> resolve(<span class="number">3</span>), <span class="number">1000</span>))  <span class="comment">// 3</span></span><br><span class="line">]).then(<span class="built_in">console</span>.log) <span class="comment">// [ 1, 2, 3 ]</span></span><br><span class="line">  .catch(<span class="built_in">console</span>.log);</span><br></pre></td></tr></table></figure><p>Promise.all 메소드는 3개의 프로미스를 담은 배열을 전달받았다. 각각의 프로미스는 아래와 같이 동작한다.</p><ul><li>첫번째 프로미스는 3초 후에 1을 resolve하여 처리 결과를 반환한다.</li><li>두번째 프로미스는 2초 후에 2을 resolve하여 처리 결과를 반환한다.</li><li>세번째 프로미스는 1초 후에 3을 resolve하여 처리 결과를 반환한다.</li></ul><p><strong>Promise.all 메소드는 전달받은 모든 프로미스를 병렬로 처리한다.</strong> 이때 모든 프로미스의 처리가 종료될 때까지 기다린 후 아래와 모든 처리 결과를 resolve 또는 reject한다.</p><ul><li>모든 프로미스의 처리가 성공하면 <strong>각각의 프로미스가 resolve한 처리 결과를 배열에 담아 resolve하는 새로운 프로미스를 반환</strong>한다. </li><li>첫번째 프로미스가 가장 나중에 처리되어도 Promise.all 메소드가 반환하는 프로미스는 첫번째 프로미스가 resolve한 처리 결과부터 차례대로 배열에 담아 그 배열을 resolve하는 새로운 프로미스를 반환한다. </li><li>즉, <strong>처리 순서가 보장된다. Promise.all은 병렬로 처리한다. 다만 순서를 보장해주기 때문에 먼저 처리되어도 프로미스 순서대로 처리결과를 배열에 담는다.</strong> </li><li>프로미스의 처리가 하나라도 실패하면 가장 먼저 실패한 프로미스가 reject한 에러를 reject하는 새로운 프로미스를 즉시 반환한다.</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.all([</span><br><span class="line">  <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> reject(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Error 1!'</span>)), <span class="number">3000</span>)),</span><br><span class="line">  <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> reject(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Error 2!'</span>)), <span class="number">2000</span>)),</span><br><span class="line">  <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> reject(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Error 3!'</span>)), <span class="number">1000</span>))</span><br><span class="line">]).then(<span class="built_in">console</span>.log)</span><br><span class="line">  .catch(<span class="built_in">console</span>.log); <span class="comment">// Error: Error 3!</span></span><br></pre></td></tr></table></figure><p>위 예제의 경우, 세번째 프로미스가 가장 먼저 실패하므로 세번째 프로미스가 reject한 에러가 catch 메소드로 전달된다.</p><p>Promise.all 메소드는 전달 받은 이터러블의 요소가 프로미스가 아닌 경우, Promise.resolve 메소드를 통해 프로미스로 래핑된다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.all([</span><br><span class="line">  <span class="number">1</span>, <span class="comment">// =&gt; Promise.resolve(1)</span></span><br><span class="line">  <span class="number">2</span>, <span class="comment">// =&gt; Promise.resolve(2)</span></span><br><span class="line">  <span class="number">3</span>  <span class="comment">// =&gt; Promise.resolve(3)</span></span><br><span class="line">]).then(<span class="built_in">console</span>.log) <span class="comment">// [1, 2, 3]</span></span><br><span class="line">  .catch(<span class="built_in">console</span>.log);</span><br></pre></td></tr></table></figure><br><p>github id로 github 사용자 이름을 취득하는 예제이다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> githubIds = [<span class="string">'jeresig'</span>, <span class="string">'ahejlsberg'</span>, <span class="string">'ungmo2'</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">Promise</span>.all(githubIds.map(<span class="function"><span class="params">id</span> =&gt;</span> fetch(<span class="string">`https://api.github.com/users/<span class="subst">$&#123;id&#125;</span>`</span>)))</span><br><span class="line">  <span class="comment">// [Response, Response, Response] =&gt; Promise</span></span><br><span class="line">  .then(<span class="function"><span class="params">responses</span> =&gt;</span> <span class="built_in">Promise</span>.all(responses.map(<span class="function"><span class="params">res</span> =&gt;</span> res.json())))</span><br><span class="line">  <span class="comment">// [user, user, user] =&gt; Promise</span></span><br><span class="line">  .then(<span class="function"><span class="params">users</span> =&gt;</span> users.map(<span class="function"><span class="params">user</span> =&gt;</span> user.name))</span><br><span class="line">  <span class="comment">// [ 'John Resig', 'Anders Hejlsberg', 'Ungmo Lee' ]</span></span><br><span class="line">  .then(<span class="built_in">console</span>.log)</span><br><span class="line">  .catch(<span class="built_in">console</span>.log);</span><br></pre></td></tr></table></figure><ol><li>Promise.all 메소드는 fetch 함수가 반환한 3개의 프로미스의 배열을 인수로 전달받고 이 프로미스들을 병렬 처리한다.</li><li>모든 프로미스의 처리가 성공하면 Promise.all 메소드는 각각의 프로미스가 resolve한 3개의 Response 객체가 담긴 배열을 resolve하는 새로운 프로미스를 반환하고 후속 처리 메소드 then에는 3개의 Response 객체가 담긴 배열이 전달된다. </li><li>이때 json 메소드는 프로미스를 반환하므로 한번 더 Promise.all 메소드를 호출해야 하는 것에 주의. 두번째 호출한 Promise.all 메소드는 github로 부터 취득한 3개의 사용자 정보 객체가 담긴 배열을 resolve하는 프로미스를 반환하고 후속 처리 메소드 then에는 3개의 사용자 정보 객체가 담긴 배열이 전달된다.</li></ol><br><h4 id="Promise-race"><a href="#Promise-race" class="headerlink" title="Promise.race "></a>Promise.race <a id="a8"></a></h4><p>Promise.race 메소드는 Promise.all 메소드와 동일하게 프로미스가 담겨 있는 배열 등의 <a href="https://poiemaweb.com/es6-iteration-for-of" target="_blank" rel="noopener">이터러블</a>을 인자로 전달 받는다. </p><ul><li>Promise.race 메소드는 Promise.all 메소드처럼 모든 프로미스를 병렬 처리하는 것이 아니라 <strong>가장 먼저 처리된 프로미스가 resolve한 처리 결과를 resolve하는 새로운 프로미스를 반환</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.race([</span><br><span class="line">  <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> resolve(<span class="number">1</span>), <span class="number">3000</span>)), <span class="comment">// 1</span></span><br><span class="line">  <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> resolve(<span class="number">2</span>), <span class="number">2000</span>)), <span class="comment">// 2</span></span><br><span class="line">  <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> resolve(<span class="number">3</span>), <span class="number">1000</span>))  <span class="comment">// 3</span></span><br><span class="line">]).then(<span class="built_in">console</span>.log) <span class="comment">// 3</span></span><br><span class="line">  .catch(<span class="built_in">console</span>.log);</span><br></pre></td></tr></table></figure><ul><li><p>에러가 발생한 경우는 Promise.all 메소드와 동일하게 처리. </p><p>Promise.race 메소드에 전달된 프로미스 처리가 하나라도 실패하면 <strong>가장 먼저 실패한 프로미스가 reject한 에러를 reject하는 새로운 프로미스를 즉시 반환</strong>한다.</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.race([</span><br><span class="line">  <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> reject(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Error 1!'</span>)), <span class="number">3000</span>)),</span><br><span class="line">  <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> reject(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Error 2!'</span>)), <span class="number">2000</span>)),</span><br><span class="line">  <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> reject(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Error 3!'</span>)), <span class="number">1000</span>))</span><br><span class="line">]).then(<span class="built_in">console</span>.log)</span><br><span class="line">  .catch(<span class="built_in">console</span>.log); <span class="comment">// Error: Error 3!</span></span><br></pre></td></tr></table></figure><br>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/08/Promise/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
